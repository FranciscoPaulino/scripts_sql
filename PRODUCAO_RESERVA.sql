--- ALTERAÇÃO DA COLUNA RESERVA DA PRODUCAO_RESERVA
--- ALTERAÇÃO DA FUNÇÃO = FX_MATERIAIS_RECEITA
lx_cade_coluna CONSUMO


select * from PRODUCAO_RESERVA
WHERE ORDEM_PRODUCAO='102469.1'

UPDATE PRODUCAO_RESERVA
SET 


ALTER TABLE  PRODUCAO_RESERVA ALTER COLUMN RESERVA NUMERIC(15,9) 
ALTER TABLE  PRODUCAO_RESERVA ALTER COLUMN CONSUMIDA NUMERIC(15,9) 
ALTER TABLE  PRODUCAO_RESERVA ALTER COLUMN RESERVA_ORIGINAL NUMERIC(15,9) 
ALTER TABLE  PRODUCAO_RESERVA ALTER COLUMN DIFERENCA_PREVISAO NUMERIC(15,9) 


ALTER TABLE  ESTOQUE_SAI1_MAT ALTER COLUMN QTDE NUMERIC(15,9) 
ALTER TABLE  ESTOQUE_SAI1_MAT ALTER COLUMN QTDE_AUX NUMERIC(15,9) 
ALTER TABLE  ESTOQUE_SAI1_MAT ALTER COLUMN PERDA NUMERIC(15,9) 

ALTER TABLE  ESTOQUE_RET1_MAT ALTER COLUMN QTDE NUMERIC(15,9) 
ALTER TABLE  ESTOQUE_RET1_MAT ALTER COLUMN QTDE_AUX NUMERIC(15,9) 
ALTER TABLE  ESTOQUE_RET1_MAT ALTER COLUMN PERDA NUMERIC(15,9) 



USE [TESTES]
GO

--- apagar indice abaixo
/****** Object:  Index [XIE2ESTOQUE_MATERIAIS]    Script Date: 11/25/2015 13:12:38 ******/
IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ESTOQUE_MATERIAIS]') AND name = N'XIE2ESTOQUE_MATERIAIS')
DROP INDEX [XIE2ESTOQUE_MATERIAIS] ON [dbo].[ESTOQUE_MATERIAIS] WITH ( ONLINE = OFF )
GO

USE [TESTES]
GO

/****** Object:  Index [XIE2ESTOQUE_MATERIAIS]    Script Date: 11/25/2015 10:47:06 ******/
CREATE NONCLUSTERED INDEX [XIE2ESTOQUE_MATERIAIS] ON [dbo].[ESTOQUE_MATERIAIS] 
(
	[QTDE_ESTOQUE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 90) ON [PRIMARY]
GO

-- desabilitar o DEFAULT_0 das coluna abaixo no DESIGN do Management Studio
ALTER TABLE  ESTOQUE_MATERIAIS ALTER COLUMN QTDE_ESTOQUE NUMERIC(15,9) 
ALTER TABLE  ESTOQUE_MATERIAIS ALTER COLUMN QTDE_ESTOQUE_AUX NUMERIC(15,9) 
ALTER TABLE  ESTOQUE_MATERIAIS ALTER COLUMN ESTOQUE_IDEAL NUMERIC(15,9) 
ALTER TABLE  ESTOQUE_MATERIAIS ALTER COLUMN PONTO_ENCOMENDA NUMERIC(15,9) 

-- desabilitar o DEFAULT_0 das coluna abaixo no DESIGN do Management Studio

---- CÓDIGO DA FUNÇÃO 

USE [TESTES]
GO
/****** Object:  UserDefinedFunction [dbo].[FX_MATERIAIS_RECEITA]    Script Date: 11/19/2015 14:19:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER FUNCTION [dbo].[FX_MATERIAIS_RECEITA] (@RECEITA CHAR(15), @QTDE_TOTAL NUMERIC(9, 3), @ABS_RECEITA INT,@RELACAO_BANHO TINYINT )  

RETURNS @MATRECEITA TABLE  (   COD_RECEITA CHAR(15),   COD_RECEITA_ADICIONAL CHAR(15),   DESC_RECEITA VARCHAR(60),   COR_RECEITA CHAR(10),   DESC_COR_RECEITA VARCHAR(25),   ORDEM_RECEITA_ADICIONAL SMALLINT,   ANTERIOR_POSTERIOR CHAR(1) COLLATE DATABASE_DEFAULT ,   ITEM_ORDEM_MATERIAL SMALLINT,   COD_PASSO CHAR(4),   MATERIAL CHAR(11) COLLATE DATABASE_DEFAULT ,   DESC_MATERIAL VARCHAR(40) COLLATE DATABASE_DEFAULT,   COR_MATERIAL CHAR(10) COLLATE DATABASE_DEFAULT ,   DESC_COR_MATERIAL VARCHAR(50) COLLATE DATABASE_DEFAULT,   CONSUMO NUMERIC(10,5),   UNID_ESTOQUE CHAR(5),   CONSUMO_PERCENTUAL BIT,   QTDE_RESERVA NUMERIC(15,9),  
 QTDE_RESERVA_FLOAT FLOAT,  
 TIPO_RECEITA TINYINT)  AS  BEGIN  
	-- 26/03/2009 - SZALONTAI - ADIÇÃO DO PARAMETRO RELACAO_BANHO, POIS UMA RECEITA PODE TER UMA RELAÇÃO DIFERENTE DA QUE ESTA CADASTRADA.

    SET @RELACAO_BANHO = ISNULL(@RELACAO_BANHO,0)
	INSERT INTO @MATRECEITA   	SELECT CASE WHEN @RECEITA=FT_RECEITA_COMPOSICAO.COD_RECEITA                  THEN  FT_RECEITA_COMPOSICAO.COD_RECEITA             ELSE  (SELECT COD_RECEITA                           FROM FT_RECEITA_ADICIONAL                    WHERE COD_FT_RECEITA_ADICIONAL = FT_RECEITA_COMPOSICAO.COD_RECEITA                      AND COD_RECEITA              = @RECEITA)             END,             FT_RECEITA_COMPOSICAO.COD_RECEITA,             FT_RECEITA.DESC_RECEITA,             FT_RECEITA.COR AS COR_RECEITA,             CORES_BASICAS.DESC_COR AS DESC_COR_RECEITA,             CASE WHEN @RECEITA=FT_RECEITA_COMPOSICAO.COD_RECEITA                  THEN  0  
           ELSE (SELECT ITEM_ORDEM                           FROM FT_RECEITA_ADICIONAL                    WHERE COD_FT_RECEITA_ADICIONAL = FT_RECEITA_COMPOSICAO.COD_RECEITA                      AND COD_RECEITA              = @RECEITA)             END,             CASE WHEN @RECEITA=FT_RECEITA_COMPOSICAO.COD_RECEITA             THEN  'M'             ELSE (SELECT ANTERIOR_POSTERIOR                           FROM FT_RECEITA_ADICIONAL                    WHERE COD_FT_RECEITA_ADICIONAL = FT_RECEITA_COMPOSICAO.COD_RECEITA                      AND COD_RECEITA              = @RECEITA)             END ,             FT_RECEITA_COMPOSICAO.ITEM_ORDEM,             FT_RECEITA_COMPOSICAO.COD_PASSO,             FT_RECEITA_COMPOSICAO.MATERIAL,             


		   MATERIAIS.DESC_MATERIAL,             FT_RECEITA_COMPOSICAO.COR_MATERIAL,             MATERIAIS_CORES.DESC_COR_MATERIAL,             FT_RECEITA_COMPOSICAO.CONSUMO,             MATERIAIS.UNID_ESTOQUE,             FT_RECEITA_COMPOSICAO.CONSUMO_PERCENTUAL,             CAST(ROUND(CASE WHEN FT_RECEITA_COMPOSICAO.CONSUMO_PERCENTUAL=1  		   THEN (CAST(FT_RECEITA_COMPOSICAO.CONSUMO AS FLOAT)/100) * CAST(@QTDE_TOTAL AS FLOAT) *1000 *ISNULL(CAST(UNIDADES_CONVERSOES.FATOR_CONVERSAO_UNIDADE AS FLOAT),1)

           ELSE 			(CAST(@QTDE_TOTAL AS FLOAT) * CASE WHEN TIPO_RECEITA=1THEN				CAST(		CASE WHEN @RELACAO_BANHO = 0 
																THEN 
																	CASE WHEN @RECEITA=FT_RECEITA_COMPOSICAO.COD_RECEITA  
																	THEN	(
																				SELECT RELACAO_BANHO  
																				FROM FT_RECEITA  
																				WHERE COD_RECEITA = @RECEITA
																			)  
																	ELSE FT_RECEITA.RELACAO_BANHO  
																	END 
																ELSE @RELACAO_BANHO 
																END AS FLOAT

															)ELSE 1 END* CAST(FT_RECEITA_COMPOSICAO.CONSUMO AS FLOAT)*ISNULL(CAST(UNIDADES_CONVERSOES.FATOR_CONVERSAO_UNIDADE AS FLOAT),1))        
   END,9) AS NUMERIC(15,9))   ,             CAST(ROUND(CASE WHEN FT_RECEITA_COMPOSICAO.CONSUMO_PERCENTUAL=1  		   THEN (CAST(FT_RECEITA_COMPOSICAO.CONSUMO AS FLOAT)/100) * CAST(@QTDE_TOTAL AS FLOAT) *1000 *ISNULL(CAST(UNIDADES_CONVERSOES.FATOR_CONVERSAO_UNIDADE AS FLOAT),1)
           ELSE 			(CAST(@QTDE_TOTAL AS FLOAT) * CASE WHEN TIPO_RECEITA=1THEN				CAST(		CASE WHEN @RELACAO_BANHO = 0 
																THEN 
																	CASE WHEN @RECEITA=FT_RECEITA_COMPOSICAO.COD_RECEITA  
																	THEN	(
																				SELECT RELACAO_BANHO  
																				FROM FT_RECEITA  
																				WHERE COD_RECEITA = @RECEITA
																			)  
																	ELSE FT_RECEITA.RELACAO_BANHO  
																	END 
																ELSE @RELACAO_BANHO 
																END AS FLOAT

															)ELSE 1 END* CAST(FT_RECEITA_COMPOSICAO.CONSUMO AS FLOAT)*ISNULL(CAST(UNIDADES_CONVERSOES.FATOR_CONVERSAO_UNIDADE AS FLOAT),1))         
   END,9) AS FLOAT)   ,TIPO_RECEITA         FROM FT_RECEITA_COMPOSICAO                LEFT JOIN FT_RECEITA                     ON FT_RECEITA_COMPOSICAO.COD_RECEITA = FT_RECEITA.COD_RECEITA                LEFT JOIN CORES_BASICAS                
     ON FT_RECEITA.COR                    = CORES_BASICAS.COR                LEFT JOIN MATERIAIS                     ON FT_RECEITA_COMPOSICAO.MATERIAL    = MATERIAIS.MATERIAL                LEFT JOIN MATERIAIS_CORES                     ON FT_RECEITA_COMPOSICAO.COR_MATERIAL= MATERIAIS_CORES.COR_MATERIAL                    AND FT_RECEITA_COMPOSICAO.MATERIAL    = MATERIAIS_CORES.MATERIAL  			  LEFT JOIN UNIDADES_CONVERSOES 			       ON UNIDADES_CONVERSOES.UNIDADE=MATERIAIS.UNID_ESTOQUE AND UNIDADES_CONVERSOES.UNIDADE_CONVERTIDA='GR'    WHERE FT_RECEITA_COMPOSICAO.COD_RECEITA = @RECEITA         OR (@ABS_RECEITA = 0         AND FT_RECEITA_COMPOSICAO.COD_RECEITA IN(SELECT COD_FT_RECEITA_ADICIONAL                                  FROM FT_RECEITA_ADICIONAL                           WHERE COD_RECEITA = @RECEITA))         RETURN  END




exec sp_executesql N'
/* VISUALLINX Execute(Alias:tmpCursorFT)  */
EXECUTE LX_GERA_CURSOR_FT @XXORDEM_TINGIMENTO = @P1 ',N'@P1 varchar(2)','23'

---- LX_GERA_CURSOR_FT
----
USE [TESTES]
GO
/****** Object:  StoredProcedure [dbo].[LX_GERA_CURSOR_FT]    Script Date: 11/19/2015 16:27:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE  [dbo].[LX_GERA_CURSOR_FT]    -- VERSAO 5.0        
     @XORDEM_SERVICO    CHAR(08)=NULL,          
     @XXORDEM_PRODUCAO    CHAR(08)=NULL,          
     @XORDEM_SERVICO_ANTERIOR CHAR(08)=NULL,          
     @XMOSTRA_PARTE    BIT=NULL,          
     @XMOSTRA_PRODUTO   BIT=NULL,          
     @INDICA_BAIXA_AUTOMATICA BIT=0,
     @XXORDEM_TINGIMENTO    CHAR(08)=NULL,
     @XXORDEM_ESTAMPARIA    CHAR(08)=NULL          
      
AS           
            
-- ALTERAÇÕES E CORREÇÕES FEITAS NA PROCEDURE.          
--
-- 25/03/2009 - SZALONTAI - ADICAO DO TRATAMENTO DE ORDEM DE TINGIMENTO E ORDEM DE ESTAMPARIA.
--							FAZENDO A CHAMADA DAS FUNCOES FX_MATERIAIS_RECEITA_OE E FX_MATERIAIS_RECEITA_OT.
--
-- 16/05/2005 - SZALONTAI - ADICAO DAS COLUNAS DE DESC_PRODUTO E DESC_COR_PRODUTO NOS SELECTS QUE
--                          TEM AS COLUNAS PRODUTO E COR_PRODUTO
-- 11/05/2005 - SZALONTAI - ALTERAÇÃO PARA USAR A FUNCAO FX_CURSOR_FT_OP
--							NESTA FUNÇÃOS ESTÃO OS CURSORES QUE TRAZEM AS QTDES E FOI CRIADA PARA 
--							FACILITAR E AGILIAR.
--
-- 21/11/2004 - SZALONTAI - ALTERAÇÃO PARA USAR AS FUNCOES FX_CURSOR_FT_OS E FX_CURSOR_FT_OS_ANTERIOR
--							NESTAS FUNÇOES ESTÃO OS CURSORES QUE TRAZEM AS QTDES E FORAM CRIADAS PARA 
--							FACILITAR E AGILIAR.
--
-- 28/07/2004 - SZALONTAI - COLOCAR A FASE E SETOR DO MATERIAL SUBSTITUIDO QUANDO O TIPO RESERVA FOR 3, SUNSTITUICAO MANUAL
--
-- 31/05/2004 - SZALONTAI - ADICAO DAS COLUNAS FASE_PRODUCAO , SETOR_PRODUCAO E TAREFA NO SELECT DA
-- BAIXA AUTOMATICA = 1 E ORDER_SERVICO_ANTERIOR IS NOT NULL
--
-- 04/05/04 - SZALONTAI 
-- CORRECAO NOS CALCULOS DOS CONSUMOS COM ID_MODIFICACAO
--   
-- 23/01/04 - SZALONTAI  
-- ADIÇÃO DE CALCULO DE CONSUMO DOS MATERIAIS SUBSTITUTOS DA TABELA SUSBTITUICOES_FT_MATERIAL  
--  
-- 05/01/04 - SZALONTAI  
-- RETIRADA DO FILTRO DOS // <= 1  
--  
-- 23/12/03 - SZALONTAI  
-- ADIÇÃO DA COLUNA RECURSO PRODUTIVO NOS SELECT DAS OS ANTERIORES, PARA PODER CALCULAR A   
-- NECESSIDADE POR RECURSO NO CASO DE DIV. REC.  
--  
-- 19/12/03 - SZALONTAI  
-- CORREÇÃO NO CALCULO DA NECESSIDADE QUANDO O MATERIAL ERA COLOCADO NA MAO NA OP.  
-- A NECESSIDADE NAO ESTAVA SENDO CALCULADA PROPORCIONALMENTE PELA COR DO PRODUTO.  
-- A NECESSIDADE POR OS_ANTERIOR NAO ESTAVA VERIFICANDO QUANDO HAVIA MOV. POR //  
-- FOI COLOCADO NO WHERE DO SELECT FILTRAR SOMENTES OS // <= 1  
--      
-- 04/12/03 - SZALONTAI      
-- ADICAO DO CALCULO DA NECESSIDADE DO MATERIAL SUBSTITUTO       
--      
-- 28/08/03 - SZALONTAI        
-- ADICAO DE ORDENACAO POR MATERIAL, COR_MATERIAL E OP QUANDO A GERACAO FOR POR OS        
--      
-- 03/07/03 - SZALONTAI        
-- RETIRADA DO CAMPO QTDE,POIS NAO TEM MAIS NECESSIDADE        
-- FORAM FEITAS CORRECOES NA NECESSIDADE DE MATERIAS QUE SAO COLOCADOS DIRETO NA OP        
--        
-- 01/07/03 - SZALONTAI        
-- TROCA DO NUMERIC(5,2) PARA NUMERIC(15,2)        
-- COLOCADO PARA TRAZER VAZIO QUANDO A FASE E SETOR FOREM NULOS        
-- COLOCADO OS CAMPOS TIPO_RESERVA E QTDE ONDE        
-- ONDE TIPO_RESERVA = 1 - RESERVA POR FT        
--      TIPO_RESERVA = 2 - RESERVA POR OP         
--      TIPO_RESERVA = 3 - RESERVA POR OP COM SUBSTITUICAO DE MATERIAL        
-- O CAMPO QTDE SO E VALIDO QUANDO O TIPO_RESERVA FOR 2 OU 3. NELE TEM A QTDE E CORES NA OP.        
-- SERVE PARA DIVIDIR A QTDE CONSUMIDA QUE NOS CASOS DO TIPO_RESERVA = 2 OU 3 , PARA CADA LINHA VEM TOTALIZADO        
--        
-- 30/06/03 - SZALONTAI        
-- COLOCADO O LINK DA TABELA PRODUCAO_ORDEM_COR COM AS TABELAS         
-- PRODUCAO_OS_TAREFAS        
-- PRODUCAO_OS_ANTERIOR        
-- ESTOQUE_PROD1_ENT        
-- PELAS COLUNAS PRODUTO E COR_PRODUTO.        
-- POIS NAO ESTAVA VINDO CORRETO AS LINHA QUANDO HAVIA UM MATERIAL COLOCADO NA PRODUCAO_RESERVA PELA OP        
--          
-- 20/06/03 - SZALONTAI        
-- QUANDO HA MATERIAL INCLUIDO PELA TELA DE OP NA TABELA PRODUCAO_RESERVA, NAO ESTAVA CALCULANDO CORRETAMENTE A NECESSIDADE QUANDO HAVIA MAIS DE UMA COR NA OP        
-- FOI CORRIGIDO        
--        
-- 14/05/03 - SZALONTAI           
-- A FASE E SETOR DO MATERIAL ESTAVAM VINDO DO CADASTRO DO MATERIAL          
-- FOI CORRIGIDO PARA TRAZER DA FT          
--          
-- 07/05/03 - SZALONTAI           
-- ADIÇÃO DO PARAMETRO @XMOSTRA_PRODUTO          
-- QUANDO FOR 0 NÃO TRAZ O PRODUTO E COR_PRODUTO          
-- QUANDO FOR 1 OU NULL TRAZ O PRODUTO E COR_PRODUTO          
--          
-- 07/05/03 - SZALONTAI           
-- ADIÇÃO DO PARAMETRO @XMOSTRA_PRODUTO          
-- QUANDO FOR 0 NÃO TRAZ O PRODUTO E COR_PRODUTO          
-- QUANDO FOR 1 OU NULL TRAZ O PRODUTO E COR_PRODUTO          
--          
-- 06/05/03 - SZALONTAI           
-- ADIÇÃO DAS COLUNAS PRODUTO E COR_PRODUTO. ELAS SO APARECERÃO QUANDO FOR UMA GERACAO PARA OS E           
-- @INDICA_BAIXA_AUTOMATICA = 0          
--          
-- 29/04/03 - SZALONTAI           
-- ADIÇÃO DA COLUNA DESC_USO_MATERIAL. ELA SO APARECERÁ QUANDO :          
-- @XMOSTRA_PARTE = 1           
-- @INDICA_BAIXA_AUTOMATICA = 0          
          
          
/*          
SÃO PASSADOS DOIS PARÂMETROS PARA A PROCEDURE.          
SE FOR PASSADO @XORDEM_SERVICO, NUMERO DA ORDEM DE SERVICO, OS CALCULOS DA RESERVA SERÃO EM CIMA DA OS.          
SE FOR PASSADO @XXORDEM_PRODUCAO, NUMERO DA ORDEM DE PRODUCAO, OS CALCULOS DA RESERVA SERÃO EM CIMA DA OP.          
SE FOR PASSADO @XXROMANEIO_PRODUTO, NUMERO DO ROMANEIO DE ENTRADA DO PA NO ESTOQUE, OS CALCULOS DA RESERVA SERÃO EM CIMA DA ENTRADA NO ESTOQUE.          
          
TIPOS DE SUBSTITUIÇÃO DE MATERIAIS          
1) POR MATERIAL, QUANDO A SUBSTITUIÇÃO É FEITA NA PÁGINA DE RESERVA PELO USUÁRIO          
   A) O MATERIAL SUBSTITUTO NÃO ESTÁ NA FICHA TÉCNICA          
   B) O MATERIAL SUBSTITUTO ESTÁ NA FICHA TÉCNICA          
2) POR CLIENTE, QUANDO É FEITA UMA OP DE UM PEDIDO E A TROCA DE MATERIAL É FEITA AUTOMATICAMENTE.          
   QUANDO É POR CLIENTE, E NÃO HOUVER UM ROMANEIO, O SISTEMA NAO FAZ A SUBSTITUIÇÃO          
   A) O MATERIAL SUBSTITUTO NÃO ESTÁ NA FICHA TÉCNICA           B) O MATERIAL SUBSTITUTO ESTÁ NA FICHA TÉCNICA          
3) POR PRODUTO, QUANDO É FEITA UMA TROCA AUTOMÁTICA          
   A) O MATERIAL SUBSTITUTO NÃO ESTÁ NA FICHA TÉCNICA          
   B) O MATERIAL SUBSTITUTO ESTÁ NA FICHA TÉCNICA          
          
TIPOS DE RESERVA          
          
1 - FICHA TÉCNICA           
 FEITA AUTOMATICAMENTE QUANDO É GERADA A OP.           
2 - ORDEM DE PRODUÇÃO          
 FEITA MANUALMENTE QUANDO O USUARIO ADICIONA UM MATERIAL NA OP          
3 - SUBSTITUIÇÃO MANUAL          
 FEITA MANUALMENTE QUANDO E TROCADO UM MATERIAL POR OUTRO PELA SUBSTITUIÇÃO          
4 - SUBSTITUIÇÃO POR CLIENTE          
 FEITA AUTOMATICAMENTE QUANDO A OP É GERADA POR CLIENTE E O PARA O CLIENTE EXISTE UM MATERIAL ESPECIFICO          
           
*/          
          
SET NOCOUNT ON          

DECLARE @XORDEM_TINGIMENTO INT,@XORDEM_ESTAMPARIA INT

SET @XORDEM_TINGIMENTO = CONVERT(INT, @XXORDEM_TINGIMENTO)
SET @XORDEM_ESTAMPARIA = CONVERT(INT, @XXORDEM_ESTAMPARIA)
      
SELECT @XMOSTRA_PRODUTO = ISNULL(@XMOSTRA_PRODUTO,1)
          
IF @INDICA_BAIXA_AUTOMATICA = 1          
BEGIN          

	 -- É UMA GERAÇÃO POR OP          
	IF @XXORDEM_PRODUCAO IS NOT NULL --MOSTRA LISTAGEM PELA OP          
  	BEGIN          
           
    	SELECT  A.ORDEM_SERVICO,A.MATERIAL,A.COR_MATERIAL,A.ITEM,A.ORDEM_PRODUCAO,        
      			A.QTDE_ORIGINAL,A.QTDE_ABATER,A.PARTE_APLICADO_MATERIAL,        
      			ISNULL(A.RESERVA_ORIGINAL,0)-ISNULL(A.QTDE_ABATER,0) AS QTDE_NECESSARIA,        
      			(CASE WHEN ((ISNULL(A.RESERVA_ORIGINAL,0)-ISNULL(A.QTDE_ABATER,0))   - B.CONSUMIDA  > 0 AND B.MATAR_SALDO_RESERVA=0)         
       			THEN  (ISNULL(A.RESERVA_ORIGINAL,0)-ISNULL(A.QTDE_ABATER,0)) ELSE 0 END) AS RESERVA,        
      			C.ALTERACAO_CONSUMO, C.PRIORIDADE_SUBSTITUICAO ,C.SUBSTITUICAO_POR_PRODUTO, B.DATA_RESERVA       
    	FROM 	(
				SELECT *,''as ORDEM_SERVICO  FROM DBO.FX_CURSOR_FT_OP(@XXORDEM_PRODUCAO,1,1)
				) A        
    	INNER JOIN 	PRODUCAO_RESERVA B    ON  B.MATERIAL   = A.MATERIAL AND         
              		B.COR_MATERIAL   = A.COR_MATERIAL AND         
              		B.ORDEM_PRODUCAO  = A.ORDEM_PRODUCAO        
    	LEFT  JOIN 	SUBSTITUICOES_MATERIAL C ON C.MATERIAL  = B.MATERIAL AND                 
					C.COR_MATERIAL  = B.COR_MATERIAL AND         
              		C.MATERIAL_SUBSTITUIDO = B.MATERIAL_SUBSTITUIDO AND          
              		C.COR_MATERIAL_SUBSTITUIDO = B.COR_MATERIAL_SUBSTITUIDO                 
    	WHERE 	ISNULL(B.RESERVA_ORIGINAL,0)-ISNULL(QTDE_ABATER,0) >0        
           
	END                                

	-- É UMA GERAÇÃO POR OS          

	IF @XORDEM_SERVICO IS NOT NULL           
	BEGIN          
                    
	    SELECT  A.ORDEM_SERVICO,A.MATERIAL,A.COR_MATERIAL,A.ITEM,A.ORDEM_PRODUCAO,A.QTDE_ORIGINAL,A.QTDE_ABATER,
				A.PARTE_APLICADO_MATERIAL,ISNULL(A.QTDE_NECESSARIA,0)-ISNULL(A.QTDE_ABATER,0) AS QTDE_NECESSARIA,
				RESERVA,C.ALTERACAO_CONSUMO, C.PRIORIDADE_SUBSTITUICAO ,C.SUBSTITUICAO_POR_PRODUTO, B.DATA_RESERVA,
				B.TIPO_RESERVA,B.MATERIAL_SUBSTITUIDO  
	    FROM	( 
				SELECT 	ORDEM_PRODUCAO,MATERIAL,COR_MATERIAL,MATERIAL_SUBSTITUIDO,COR_MATERIAL_SUBSTITUIDO,TIPO_RESERVA,
						ITEM, RESERVA_CALCULADA AS QTDE_NECESSARIA,	QTDE_ABATER,QTDE_ORIGINAL,ORDEM_SERVICO,PRODUTO,
	 					COR_PRODUTO,PARTE_APLICADO_MATERIAL,DESC_PRODUTO,DESC_COR_PRODUTO
				FROM 	DBO.FX_CURSOR_FT_OS(@XORDEM_SERVICO,1,1,@INDICA_BAIXA_AUTOMATICA)  
				)A          
	
	    INNER JOIN 	PRODUCAO_RESERVA B ON 	B.MATERIAL 			= A.MATERIAL AND           
	              							B.COR_MATERIAL   	= A.COR_MATERIAL AND           
	              							B.ORDEM_PRODUCAO  	= A.ORDEM_PRODUCAO          	
	    LEFT  JOIN 	SUBSTITUICOES_MATERIAL C ON	C.MATERIAL  = B.MATERIAL AND            
	              								C.COR_MATERIAL  = B.COR_MATERIAL AND           
	              								C.MATERIAL_SUBSTITUIDO = B.MATERIAL_SUBSTITUIDO AND            
	              								C.COR_MATERIAL_SUBSTITUIDO = B.COR_MATERIAL_SUBSTITUIDO          
	    WHERE 	ISNULL(QTDE_NECESSARIA,0)-ISNULL(QTDE_ABATER,0) >0          
	    ORDER BY A.MATERIAL,A.COR_MATERIAL,A.ORDEM_PRODUCAO           
           
	END          
           
 	-- É UMA GERAÇÃO POR OS ANTERIOR          
  	IF @XORDEM_SERVICO_ANTERIOR IS NOT NULL           
  	BEGIN          
                    
    	SELECT  A.ORDEM_SERVICO,A.MATERIAL,A.COR_MATERIAL,A.ITEM,A.ORDEM_PRODUCAO,A.QTDE_ORIGINAL,A.QTDE_ABATER, 
				A.PARTE_APLICADO_MATERIAL,ISNULL(A.QTDE_NECESSARIA,0)-ISNULL(A.QTDE_ABATER,0) AS QTDE_NECESSARIA,          
       			B.RESERVA,A.RECURSO_PRODUTIVO,C.ALTERACAO_CONSUMO, C.PRIORIDADE_SUBSTITUICAO ,C.SUBSTITUICAO_POR_PRODUTO, 
				B.DATA_RESERVA ,B.TIPO_RESERVA ,B.MATERIAL_SUBSTITUIDO ,A.FASE_PRODUCAO ,A.SETOR_PRODUCAO

    	FROM  	(SELECT * FROM FX_CURSOR_FT_OS_ANTERIOR(@XORDEM_SERVICO_ANTERIOR))   A          

    	INNER JOIN PRODUCAO_RESERVA B  ON	B.MATERIAL   = A.MATERIAL AND           
							              	B.COR_MATERIAL   = A.COR_MATERIAL AND           
							              	B.ORDEM_PRODUCAO  = A.ORDEM_PRODUCAO          

	    LEFT JOIN SUBSTITUICOES_MATERIAL C ON	C.MATERIAL  = B.MATERIAL AND            
									            C.COR_MATERIAL  = B.COR_MATERIAL AND           
								              	C.MATERIAL_SUBSTITUIDO = B.MATERIAL_SUBSTITUIDO AND            
								              	C.COR_MATERIAL_SUBSTITUIDO = B.COR_MATERIAL_SUBSTITUIDO          

	    LEFT JOIN (	SELECT MATERIAL,COR_MATERIAL,ITEM,ORDEM_PRODUCAO,SUM(QTDE) AS QTDE           
      				FROM ESTOQUE_SAI1_MAT GROUP BY MATERIAL,COR_MATERIAL,ITEM,ORDEM_PRODUCAO) AS D ON  D.MATERIAL =A.MATERIAL AND           
																						               D.COR_MATERIAL =A.COR_MATERIAL AND           
																						               D.ORDEM_PRODUCAO =A.ORDEM_PRODUCAO AND          
																						               D.ITEM =A.ITEM          
	    WHERE ISNULL(QTDE_NECESSARIA,0)-ISNULL(QTDE_ABATER,0) >0          
	    ORDER BY A.MATERIAL,A.COR_MATERIAL,A.ORDEM_PRODUCAO,A.RECURSO_PRODUTIVO  
           
  	END               

END              
ELSE              
BEGIN          

	 -----------------------------------------------------------------------------------------------------------------------------------           
	 --@INDICA_BAIXA_AUTOMATICA = 0          
	 -----------------------------------------------------------------------------------------------------------------------------------        

	/*É UMA GERAÇÃO POR OP*/          
  	IF @XXORDEM_PRODUCAO IS NOT NULL --MOSTRA LISTAGEM PELA OP          
	BEGIN
   		SELECT  A.MATERIAL,A.COR_MATERIAL,A.ORDEM_PRODUCAO,           
     			SUM(A.RESERVA_ORIGINAL) AS RESERVA_ORIGINAL,          
    			SUM( (CASE WHEN A.RESERVA_ORIGINAL  - CONSUMIDA > 0 AND MATAR_SALDO_RESERVA=0 THEN  A.RESERVA_ORIGINAL  - CONSUMIDA ELSE 0 END)) AS RESERVA,          
     			SUM((CASE WHEN A.RESERVA_ORIGINAL  - CONSUMIDA < 0 OR MATAR_SALDO_RESERVA=1  THEN  A.RESERVA_ORIGINAL- CONSUMIDA ELSE 0 END)) AS DIFERENCA_PREVISAO          
   		FROM 	(
				SELECT * FROM DBO.FX_CURSOR_FT_OP(@XXORDEM_PRODUCAO,0,0)
				)A                     
	   INNER	JOIN PRODUCAO_RESERVA B ON 	A.ORDEM_PRODUCAO=B.ORDEM_PRODUCAO AND           
      										A.MATERIAL=B.MATERIAL AND           
      										A.COR_MATERIAL=B.COR_MATERIAL           
		GROUP BY A.MATERIAL,A.COR_MATERIAL, A.ORDEM_PRODUCAO
   		ORDER BY A.ORDEM_PRODUCAO,A.MATERIAL,A.COR_MATERIAL          
	END

	/*É UMA GERAÇÃO POR OS*/          
	IF @XORDEM_SERVICO IS NOT NULL           
	BEGIN          
           
		IF @XMOSTRA_PRODUTO = 1          
		           
	  		IF ISNULL(@XMOSTRA_PARTE,0)=0           
            
      			SELECT  TMP.RESERVA_CALCULADA AS QTDE_NECESSARIA,PRODUCAO_RESERVA.*, TMP.*,   
        				DESC_MATERIAL,DESC_COR_MATERIAL,ALTERACAO_CONSUMO, PRIORIDADE_SUBSTITUICAO ,SUBSTITUICAO_POR_PRODUTO,           
        				UNID_ESTOQUE,UNID_FICHA_TEC,FATOR_CONVERSAO ,DATA_RESERVA , CTRL_PARTIDAS,          
        				CTRL_PECAS, CTRL_PECAS_PARCIAL,CTRL_UNID_AUX,UNID_AUXILIAR          
      			FROM  	( 
						SELECT 	ORDEM_PRODUCAO,MATERIAL,COR_MATERIAL ,MATERIAL_SUBSTITUIDO ,COR_MATERIAL_SUBSTITUIDO,
					  			TIPO_RESERVA ,ITEM ,RESERVA_CALCULADA ,FASE_PRODUCAO,SETOR_PRODUCAO,PRODUTO ,COR_PRODUTO 
								,DESC_PRODUTO,DESC_COR_PRODUTO
						FROM 	DBO.FX_CURSOR_FT_OS(@XORDEM_SERVICO,@XMOSTRA_PRODUTO,@XMOSTRA_PARTE,@INDICA_BAIXA_AUTOMATICA)
						) TMP          
			  	INNER JOIN MATERIAIS ON TMP.MATERIAL=MATERIAIS.MATERIAL           

			    INNER JOIN MATERIAIS_CORES ON	TMP.COR_MATERIAL=MATERIAIS_CORES.COR_MATERIAL AND           
                								MATERIAIS.MATERIAL=MATERIAIS_CORES.MATERIAL          

			   	INNER JOIN PRODUCAO_RESERVA ON  PRODUCAO_RESERVA.MATERIAL = TMP.MATERIAL AND           
			                					PRODUCAO_RESERVA.COR_MATERIAL = TMP.COR_MATERIAL AND           
			                					PRODUCAO_RESERVA.ORDEM_PRODUCAO = TMP.ORDEM_PRODUCAO          

		      	LEFT JOIN SUBSTITUICOES_MATERIAL ON	SUBSTITUICOES_MATERIAL.MATERIAL=PRODUCAO_RESERVA.MATERIAL AND            
			                						SUBSTITUICOES_MATERIAL.COR_MATERIAL=PRODUCAO_RESERVA.COR_MATERIAL AND           
			                						SUBSTITUICOES_MATERIAL.MATERIAL_SUBSTITUIDO=PRODUCAO_RESERVA.MATERIAL_SUBSTITUIDO AND            
			                						SUBSTITUICOES_MATERIAL.COR_MATERIAL_SUBSTITUIDO=PRODUCAO_RESERVA.COR_MATERIAL_SUBSTITUIDO           
			 	WHERE TMP.RESERVA_CALCULADA  >0          
			            
     		ELSE          
            
		      	SELECT  TMP.RESERVA_CALCULADA AS QTDE_NECESSARIA,PRODUCAO_RESERVA.* ,TMP.*,          
		        		DESC_MATERIAL,DESC_COR_MATERIAL,ALTERACAO_CONSUMO, PRIORIDADE_SUBSTITUICAO ,SUBSTITUICAO_POR_PRODUTO,           
		        		UNID_ESTOQUE,UNID_FICHA_TEC,FATOR_CONVERSAO ,DATA_RESERVA, CTRL_PARTIDAS,          
		        		CTRL_PECAS, CTRL_PECAS_PARCIAL,CTRL_UNID_AUX,UNID_AUXILIAR,PARTE_APLICADO_MATERIAL,DESC_USO_MATERIAL          
		      	FROM  	(
						SELECT 	ORDEM_PRODUCAO ,MATERIAL,COR_MATERIAL,MATERIAL_SUBSTITUIDO,COR_MATERIAL_SUBSTITUIDO,
								TIPO_RESERVA,ITEM ,RESERVA_CALCULADA ,FASE_PRODUCAO ,SETOR_PRODUCAO ,PRODUTO,COR_PRODUTO,
								PARTE_APLICADO_MATERIAL ,DESC_USO_MATERIAL,DESC_PRODUTO,DESC_COR_PRODUTO                        
						FROM 	DBO.FX_CURSOR_FT_OS(@XORDEM_SERVICO,@XMOSTRA_PRODUTO,@XMOSTRA_PARTE,@INDICA_BAIXA_AUTOMATICA)
						) TMP          
		      	INNER JOIN MATERIAIS ON TMP.MATERIAL=MATERIAIS.MATERIAL           
		      	INNER JOIN MATERIAIS_CORES ON	TMP.COR_MATERIAL=MATERIAIS_CORES.COR_MATERIAL AND           
		                 						MATERIAIS.MATERIAL=MATERIAIS_CORES.MATERIAL           
		      	INNER JOIN PRODUCAO_RESERVA ON  PRODUCAO_RESERVA.MATERIAL = TMP.MATERIAL AND           
		   				 						PRODUCAO_RESERVA.COR_MATERIAL = TMP.COR_MATERIAL AND           
		                 						PRODUCAO_RESERVA.ORDEM_PRODUCAO = TMP.ORDEM_PRODUCAO          
		      	LEFT JOIN SUBSTITUICOES_MATERIAL ON	SUBSTITUICOES_MATERIAL.MATERIAL=PRODUCAO_RESERVA.MATERIAL AND            
		                 							SUBSTITUICOES_MATERIAL.COR_MATERIAL=PRODUCAO_RESERVA.COR_MATERIAL AND           
		                 							SUBSTITUICOES_MATERIAL.MATERIAL_SUBSTITUIDO=PRODUCAO_RESERVA.MATERIAL_SUBSTITUIDO AND            
		                 							SUBSTITUICOES_MATERIAL.COR_MATERIAL_SUBSTITUIDO=PRODUCAO_RESERVA.COR_MATERIAL_SUBSTITUIDO           
		      	LEFT JOIN (SELECT MATERIAL,COR_MATERIAL,ITEM,ORDEM_PRODUCAO,SUM(QTDE) AS QTDE 
							FROM ESTOQUE_SAI1_MAT           
		         			GROUP BY MATERIAL,COR_MATERIAL,ITEM,ORDEM_PRODUCAO) AS EST_MAT  ON  EST_MAT.MATERIAL = TMP.MATERIAL AND           
		                 																		EST_MAT.COR_MATERIAL = TMP.COR_MATERIAL AND           
																				                EST_MAT.ORDEM_PRODUCAO = TMP.ORDEM_PRODUCAO AND          
																				                EST_MAT.ITEM = TMP.ITEM          
		            
		      	WHERE TMP.RESERVA_CALCULADA   >0          
        
  		ELSE          
        
			-------------------------------
			--MOSTRA PRODUTO = 0
			-------------------------------

   			IF @XMOSTRA_PARTE IS NULL OR @XMOSTRA_PARTE=0                 
	
		    	SELECT 	TMP.RESERVA_CALCULADA AS QTDE_NECESSARIA, PRODUCAO_RESERVA.*, TMP.*,DESC_MATERIAL,
						DESC_COR_MATERIAL,ALTERACAO_CONSUMO, PRIORIDADE_SUBSTITUICAO ,SUBSTITUICAO_POR_PRODUTO,           
		        		UNID_ESTOQUE,UNID_FICHA_TEC,FATOR_CONVERSAO ,DATA_RESERVA,CTRL_PARTIDAS,CTRL_PECAS, 
						CTRL_PECAS_PARCIAL,CTRL_UNID_AUX,UNID_AUXILIAR          
		      	FROM  	(
						SELECT 	ORDEM_PRODUCAO ,MATERIAL ,COR_MATERIAL ,MATERIAL_SUBSTITUIDO ,COR_MATERIAL_SUBSTITUIDO,
								TIPO_RESERVA,SUM(RESERVA_CALCULADA) AS RESERVA_CALCULADA,FASE_PRODUCAO,SETOR_PRODUCAO            
						FROM 	(
								SELECT 	ORDEM_PRODUCAO ,MATERIAL,COR_MATERIAL,MATERIAL_SUBSTITUIDO,COR_MATERIAL_SUBSTITUIDO,
								 		TIPO_RESERVA,ITEM,RESERVA_CALCULADA,FASE_PRODUCAO,SETOR_PRODUCAO            
								FROM 	DBO.FX_CURSOR_FT_OS(@XORDEM_SERVICO,@XMOSTRA_PRODUTO,@XMOSTRA_PARTE,@INDICA_BAIXA_AUTOMATICA)
								) AUX 
						GROUP BY 	ORDEM_PRODUCAO ,MATERIAL,COR_MATERIAL ,MATERIAL_SUBSTITUIDO ,COR_MATERIAL_SUBSTITUIDO,
									TIPO_RESERVA  ,FASE_PRODUCAO,SETOR_PRODUCAO            	
		
						) TMP          

		      	INNER JOIN MATERIAIS ON TMP.MATERIAL=MATERIAIS.MATERIAL           

		      	INNER JOIN MATERIAIS_CORES ON	TMP.COR_MATERIAL=MATERIAIS_CORES.COR_MATERIAL AND           
		                						MATERIAIS.MATERIAL=MATERIAIS_CORES.MATERIAL          

		      	INNER JOIN PRODUCAO_RESERVA ON 	PRODUCAO_RESERVA.MATERIAL = TMP.MATERIAL AND           
		                						PRODUCAO_RESERVA.COR_MATERIAL = TMP.COR_MATERIAL AND           
		                						PRODUCAO_RESERVA.ORDEM_PRODUCAO = TMP.ORDEM_PRODUCAO          

		      	LEFT JOIN SUBSTITUICOES_MATERIAL ON	SUBSTITUICOES_MATERIAL.MATERIAL=PRODUCAO_RESERVA.MATERIAL AND            
		                							SUBSTITUICOES_MATERIAL.COR_MATERIAL=PRODUCAO_RESERVA.COR_MATERIAL AND           
		                							SUBSTITUICOES_MATERIAL.MATERIAL_SUBSTITUIDO=PRODUCAO_RESERVA.MATERIAL_SUBSTITUIDO AND            
		                							SUBSTITUICOES_MATERIAL.COR_MATERIAL_SUBSTITUIDO=PRODUCAO_RESERVA.COR_MATERIAL_SUBSTITUIDO           
		      	WHERE TMP.RESERVA_CALCULADA  >0          
	            
	     	ELSE          
	     	
		      	SELECT  TMP.RESERVA_CALCULADA AS QTDE_NECESSARIA,PRODUCAO_RESERVA.* ,TMP.*,          
		        		DESC_MATERIAL,DESC_COR_MATERIAL,ALTERACAO_CONSUMO, PRIORIDADE_SUBSTITUICAO ,SUBSTITUICAO_POR_PRODUTO,           
		        		UNID_ESTOQUE,UNID_FICHA_TEC,FATOR_CONVERSAO ,DATA_RESERVA, CTRL_PARTIDAS,          
		        		CTRL_PECAS, CTRL_PECAS_PARCIAL,CTRL_UNID_AUX,UNID_AUXILIAR,PARTE_APLICADO_MATERIAL,DESC_USO_MATERIAL          
		      	FROM  	( 
						SELECT 	ORDEM_PRODUCAO ,MATERIAL    ,COR_MATERIAL ,MATERIAL_SUBSTITUIDO ,COR_MATERIAL_SUBSTITUIDO ,TIPO_RESERVA,
								ITEM ,RESERVA_CALCULADA ,FASE_PRODUCAO,SETOR_PRODUCAO,PARTE_APLICADO_MATERIAL ,DESC_USO_MATERIAL                        
						FROM 	DBO.FX_CURSOR_FT_OS(@XORDEM_SERVICO,@XMOSTRA_PRODUTO,@XMOSTRA_PARTE,@INDICA_BAIXA_AUTOMATICA) 
						) TMP          
		            
		      	INNER JOIN MATERIAIS ON TMP.MATERIAL=MATERIAIS.MATERIAL           
		      	INNER JOIN MATERIAIS_CORES ON	TMP.COR_MATERIAL=MATERIAIS_CORES.COR_MATERIAL AND           
		                						MATERIAIS.MATERIAL=MATERIAIS_CORES.MATERIAL         
		      	INNER JOIN PRODUCAO_RESERVA ON  PRODUCAO_RESERVA.MATERIAL = TMP.MATERIAL AND    
		                						PRODUCAO_RESERVA.COR_MATERIAL = TMP.COR_MATERIAL AND           
		                						PRODUCAO_RESERVA.ORDEM_PRODUCAO = TMP.ORDEM_PRODUCAO          
		      	LEFT JOIN SUBSTITUICOES_MATERIAL ON SUBSTITUICOES_MATERIAL.MATERIAL=PRODUCAO_RESERVA.MATERIAL AND            
		                							SUBSTITUICOES_MATERIAL.COR_MATERIAL=PRODUCAO_RESERVA.COR_MATERIAL AND           
		                							SUBSTITUICOES_MATERIAL.MATERIAL_SUBSTITUIDO=PRODUCAO_RESERVA.MATERIAL_SUBSTITUIDO AND            
		                							SUBSTITUICOES_MATERIAL.COR_MATERIAL_SUBSTITUIDO=PRODUCAO_RESERVA.COR_MATERIAL_SUBSTITUIDO           
		      	LEFT JOIN (	SELECT	MATERIAL,COR_MATERIAL,ITEM,ORDEM_PRODUCAO,SUM(QTDE) AS QTDE 
							FROM 	ESTOQUE_SAI1_MAT 
							GROUP BY MATERIAL,COR_MATERIAL,ITEM,ORDEM_PRODUCAO) AS EST_MAT ON  	EST_MAT.MATERIAL = TMP.MATERIAL AND           
		                 																		EST_MAT.COR_MATERIAL = TMP.COR_MATERIAL AND           
																				                EST_MAT.ORDEM_PRODUCAO = TMP.ORDEM_PRODUCAO AND          
																				                EST_MAT.ITEM = TMP.ITEM          
		            
		      	WHERE TMP.RESERVA_CALCULADA   >0          
           
	END          


	/*É UMA GERAÇÃO POR ORDEM DE TINGIMENTO*/          
	IF @XORDEM_TINGIMENTO IS NOT NULL           
	BEGIN          
		SELECT  TMP.RESERVA_CALCULADA AS QTDE_NECESSARIA,TMP.*,     
				DESC_MATERIAL,DESC_COR_MATERIAL,UNID_ESTOQUE,UNID_FICHA_TEC,FATOR_CONVERSAO ,CTRL_PARTIDAS,            
				CTRL_PECAS, CTRL_PECAS_PARCIAL,CTRL_UNID_AUX,UNID_AUXILIAR            
         FROM   (	
			SELECT	B.ORDEM_PRODUCAO,A.MATERIAL,A.COR_MATERIAL,MATERIAL_SUBSTITUIDO= SPACE(11),COR_MATERIAL_SUBSTITUIDO =SPACE(10),  
					TIPO_RESERVA    =0,	SUBSTRING(CONVERT(CHAR(5), ROW_NUMBER() OVER (ORDER BY B.ORDEM_PRODUCAO,A.MATERIAL,A.COR_MATERIAL)+10000 ),2,4) AS ITEM,
					RESERVA_CALCULADA    =QTDE_RESERVA,QTDE_ABATER    =QTDE_RESERVA,QTDE_ORIGINAL    = QTDE_RESERVA,ORDEM_SERVICO    = @XORDEM_TINGIMENTO,
					FASE_PRODUCAO    =SPACE(25) ,SETOR_PRODUCAO    =SPACE(25) ,PRODUTO        =SPACE(12) ,COR_PRODUTO    =SPACE(10) ,  
					PARTE_APLICADO_MATERIAL =SPACE(10) ,DESC_USO_MATERIAL      =SPACE(40) ,DESC_PRODUTO       =SPACE(40) ,DESC_COR_PRODUTO      =SPACE(40) ,
					RESERVA    =QTDE_RESERVA
			FROM	FX_MATERIAIS_RECEITA_OT(@XORDEM_TINGIMENTO) A
			INNER JOIN M_ORDEM_FABRICACAO_PROCESSO B ON A.COD_ORDEM_TINGIMENTO = B.COD_ORDEM_TINGIMENTO
				) TMP            
		INNER JOIN MATERIAIS ON TMP.MATERIAL=MATERIAIS.MATERIAL             
		INNER JOIN MATERIAIS_CORES	ON	TMP.COR_MATERIAL=MATERIAIS_CORES.COR_MATERIAL AND             
										MATERIAIS.MATERIAL=MATERIAIS_CORES.MATERIAL            
		WHERE TMP.RESERVA_CALCULADA  >0            

	END          

	/*É UMA GERAÇÃO POR ORDEM DE ESTAMPARIA*/          
	IF @XORDEM_ESTAMPARIA IS NOT NULL           
	BEGIN          
		SELECT  TMP.RESERVA_CALCULADA AS QTDE_NECESSARIA,TMP.*,     
				DESC_MATERIAL,DESC_COR_MATERIAL,UNID_ESTOQUE,UNID_FICHA_TEC,FATOR_CONVERSAO ,CTRL_PARTIDAS,            
				CTRL_PECAS, CTRL_PECAS_PARCIAL,CTRL_UNID_AUX,UNID_AUXILIAR            
         FROM   (	

			SELECT	B.ORDEM_PRODUCAO,A.MATERIAL,A.COR_MATERIAL,MATERIAL_SUBSTITUIDO= SPACE(11),COR_MATERIAL_SUBSTITUIDO =SPACE(10),  
					TIPO_RESERVA    =0,	SUBSTRING(CONVERT(CHAR(5), ROW_NUMBER() OVER (ORDER BY B.ORDEM_PRODUCAO,A.MATERIAL,A.COR_MATERIAL)+10000 ),2,4) AS ITEM,
					RESERVA_CALCULADA    =QTDE_RESERVA,QTDE_ABATER    =QTDE_RESERVA,QTDE_ORIGINAL    = QTDE_RESERVA,ORDEM_SERVICO    = @XORDEM_TINGIMENTO,
					FASE_PRODUCAO    =SPACE(25) ,SETOR_PRODUCAO    =SPACE(25) ,PRODUTO        =SPACE(12) ,COR_PRODUTO    =SPACE(10) ,  
					PARTE_APLICADO_MATERIAL =SPACE(10) ,DESC_USO_MATERIAL      =SPACE(40) ,DESC_PRODUTO       =SPACE(40) ,DESC_COR_PRODUTO      =SPACE(40) ,
					RESERVA    =QTDE_RESERVA
			FROM	FX_MATERIAIS_RECEITA_OE(@XORDEM_ESTAMPARIA) A
			INNER JOIN M_ORDEM_FABRICACAO_PROCESSO B ON A.COD_ORDEM_ESTAMPARIA = B.COD_ORDEM_ESTAMPARIA

				) TMP            
		INNER JOIN MATERIAIS ON TMP.MATERIAL=MATERIAIS.MATERIAL             
		INNER JOIN MATERIAIS_CORES	ON	TMP.COR_MATERIAL=MATERIAIS_CORES.COR_MATERIAL AND             
										MATERIAIS.MATERIAL=MATERIAIS_CORES.MATERIAL            
		WHERE TMP.RESERVA_CALCULADA  >0                    
	END          

END          
             
SET NOCOUNT OFF          
RETURN           
  

--- FX_MATERIAIS_RECEITA_OT

USE [TESTES]
GO
/****** Object:  UserDefinedFunction [dbo].[FX_MATERIAIS_RECEITA_OT]    Script Date: 11/20/2015 08:01:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[FX_MATERIAIS_RECEITA_OT] (@COD_ORDEM_TINGIMENTO INT)  
  
RETURNS @MATRECEITA TABLE  
(  
 COD_ORDEM_TINGIMENTO INT,
 MATERIAL CHAR(11) COLLATE DATABASE_DEFAULT ,  
 DESC_MATERIAL VARCHAR(40) COLLATE DATABASE_DEFAULT,  
 COR_MATERIAL CHAR(10) COLLATE DATABASE_DEFAULT ,  
 DESC_COR_MATERIAL VARCHAR(50) COLLATE DATABASE_DEFAULT,  
 CONSUMO NUMERIC(10,5),  
 UNID_ESTOQUE CHAR(5),
 QTDE_RESERVA NUMERIC(15,9)
)  
AS  
BEGIN  
	--
	-- 26/03/2009 - SZALONTAI - ADIÇÃO DO PARAMETRO RELACAO_BANHO, POIS UMA RECEITA PODE TER UMA RELAÇÃO DIFERENTE DA QUE ESTA CADASTRADA.
	-- 15/04/2008 - SZALONTAI 
    DECLARE @XCOD_RECEITA_COR CHAR(15), @QTDE NUMERIC(9,3),@RELACAO_BANHO TINYINT

	DECLARE CUR_AUX CURSOR FOR   
	SELECT	A.COD_RECEITA,B.QTDE_TOTAL AS QTDE,RELACAO_BANHO
	FROM	M_ORDEM_FABRICACAO_PROCESSO A 
	INNER JOIN M_ORDEM_TINGIMENTO B ON A.COD_ORDEM_TINGIMENTO = B.COD_ORDEM_TINGIMENTO
	WHERE A.COD_ORDEM_TINGIMENTO = @COD_ORDEM_TINGIMENTO
  
	OPEN CUR_AUX
	  
	FETCH NEXT FROM CUR_AUX	INTO  @XCOD_RECEITA_COR,@QTDE,@RELACAO_BANHO

	WHILE @@FETCH_STATUS = 0   
	BEGIN

		IF (SELECT COUNT(A.MATERIAL) FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO) A 
			INNER JOIN @MATRECEITA B ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL)=0		
			INSERT INTO @MATRECEITA   
			SELECT @COD_ORDEM_TINGIMENTO,MATERIAL,DESC_MATERIAL,COR_MATERIAL , DESC_COR_MATERIAL,CONSUMO,UNID_ESTOQUE,QTDE_RESERVA 
			FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO)
		ELSE
			UPDATE @MATRECEITA SET B.QTDE_RESERVA = B.QTDE_RESERVA+A.QTDE_RESERVA,B.CONSUMO=B.CONSUMO+A.CONSUMO
			FROM @MATRECEITA B
			INNER JOIN FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO) A ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL

		FETCH NEXT FROM CUR_AUX	INTO  @XCOD_RECEITA_COR,@QTDE,@RELACAO_BANHO 
	END  
	  
	CLOSE   CUR_AUX
	DEALLOCATE  CUR_AUX
    RETURN  

END 



--- FX_MATERIAIS_RECEITA_OT_02

USE [TESTES]
GO
/****** Object:  UserDefinedFunction [dbo].[FX_MATERIAIS_RECEITA_OT_02]    Script Date: 11/20/2015 08:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[FX_MATERIAIS_RECEITA_OT_02] (@COD_ORDEM_TINGIMENTO INT)  
  
RETURNS @MATRECEITA TABLE  
(  
 ORDEM_PRODUCAO CHAR(8),
 COD_ORDEM_TINGIMENTO INT,
 MATERIAL CHAR(11) COLLATE DATABASE_DEFAULT ,  
 DESC_MATERIAL VARCHAR(40) COLLATE DATABASE_DEFAULT,  
 COR_MATERIAL CHAR(10) COLLATE DATABASE_DEFAULT ,  
 DESC_COR_MATERIAL VARCHAR(50) COLLATE DATABASE_DEFAULT,  
 CONSUMO NUMERIC(10,5),  
 UNID_ESTOQUE CHAR(5),
 QTDE_RESERVA NUMERIC(15,9)
)  
AS  
BEGIN  
	--
	-- 26/03/2009 - SZALONTAI - ADIÇÃO DO PARAMETRO RELACAO_BANHO, POIS UMA RECEITA PODE TER UMA RELAÇÃO DIFERENTE DA QUE ESTA CADASTRADA.
	-- 15/04/2008 - SZALONTAI 
    DECLARE @XCOD_RECEITA_COR CHAR(15), @QTDE NUMERIC(9,3),@ORDEM_PRODUCAO CHAR(8),@RELACAO_BANHO TINYINT

	DECLARE CUR_AUX CURSOR FOR   
	SELECT	A.COD_RECEITA,QTDE_EM_PROCESSO AS QTDE,A.ORDEM_PRODUCAO,RELACAO_BANHO
	FROM	M_ORDEM_FABRICACAO_PROCESSO A 
	INNER JOIN M_ORDEM_TINGIMENTO B ON A.COD_ORDEM_TINGIMENTO = B.COD_ORDEM_TINGIMENTO
	INNER JOIN M_ORDEM_FABRICACAO_ITEM C ON A.ORDEM_PRODUCAO = C.ORDEM_PRODUCAO
	WHERE A.COD_ORDEM_TINGIMENTO = @COD_ORDEM_TINGIMENTO
  
	OPEN CUR_AUX
	  
	FETCH NEXT FROM CUR_AUX	INTO  @XCOD_RECEITA_COR,@QTDE,@ORDEM_PRODUCAO,@RELACAO_BANHO

	WHILE @@FETCH_STATUS = 0   
	BEGIN

		IF (SELECT COUNT(A.MATERIAL) FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO) A 
			INNER JOIN @MATRECEITA B ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL AND B.ORDEM_PRODUCAO  = @ORDEM_PRODUCAO)=0		
			INSERT INTO @MATRECEITA   
			SELECT @ORDEM_PRODUCAO,@COD_ORDEM_TINGIMENTO,MATERIAL,DESC_MATERIAL,COR_MATERIAL , DESC_COR_MATERIAL,CONSUMO,UNID_ESTOQUE,QTDE_RESERVA 
			FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO)
		ELSE
			UPDATE @MATRECEITA SET B.QTDE_RESERVA = B.QTDE_RESERVA+A.QTDE_RESERVA,B.CONSUMO=B.CONSUMO+A.CONSUMO
			FROM @MATRECEITA B
			INNER JOIN FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO) A ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL

		FETCH NEXT FROM CUR_AUX	INTO  @XCOD_RECEITA_COR,@QTDE,@ORDEM_PRODUCAO,@RELACAO_BANHO
	END  
	  
	CLOSE   CUR_AUX
	DEALLOCATE  CUR_AUX
    RETURN  

END 




---- FX_MATERIAIS_RECEITA_OE

USE [TESTES]
GO
/****** Object:  UserDefinedFunction [dbo].[FX_MATERIAIS_RECEITA_OE]    Script Date: 11/20/2015 08:27:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[FX_MATERIAIS_RECEITA_OE] (@COD_ORDEM_ESTAMPARIA INT)  
  
RETURNS @MATRECEITA TABLE  
(  
 COD_ORDEM_ESTAMPARIA INT,
 MATERIAL CHAR(11) COLLATE DATABASE_DEFAULT ,  
 DESC_MATERIAL VARCHAR(40) COLLATE DATABASE_DEFAULT,  
 COR_MATERIAL CHAR(10) COLLATE DATABASE_DEFAULT ,  
 DESC_COR_MATERIAL VARCHAR(50) COLLATE DATABASE_DEFAULT,  
 CONSUMO NUMERIC(10,5),  
 UNID_ESTOQUE CHAR(5),
 QTDE_RESERVA NUMERIC(15,9)
)  
AS  
BEGIN  
	--
	-- 26/03/2009 - SZALONTAI - ADIÇÃO DO PARAMETRO RELACAO_BANHO, POIS UMA RECEITA PODE TER UMA RELAÇÃO DIFERENTE DA QUE ESTA CADASTRADA.
	-- 10/04/2008 - SZALONTAI - ADICAO DO PROCESSO PARA CALCULO DA NECESSIDADE CONSIDERANDO O TIPO DA RECEITA. 
	--                          CASO A RECEITA SEJA DE TITURARIA, USA A RELAÇÃO DE BANHO. CASO CONTRARIO, NÃO USA.
    DECLARE @XCOD_RECEITA_COR CHAR(15),@XCOD_RECEITA_PASTA CHAR(15) , @QTDE NUMERIC(9,3),@RELACAO_BANHO TINYINT

	DECLARE CUR_AUX CURSOR FOR   
	SELECT	B.COD_RECEITA_COR, B.COD_RECEITA_PASTA,C.QTDE_TOTAL AS QTDE,RELACAO_BANHO
	FROM	M_ORDEM_FABRICACAO_PROCESSO A 
	INNER JOIN FT_ESTAMPA_CILINDRO_QUADRO B ON	A.COD_FT_ESTAMPA = B.COD_FT_ESTAMPA AND 
												A.COD_FT_ESTAMPA_VARIANTE = B.COD_FT_ESTAMPA_VARIANTE
	INNER JOIN M_ORDEM_ESTAMPARIA C ON A.COD_ORDEM_ESTAMPARIA = C.COD_ORDEM_ESTAMPARIA

	WHERE A.COD_ORDEM_ESTAMPARIA = @COD_ORDEM_ESTAMPARIA
  
	OPEN CUR_AUX
	  
	FETCH NEXT FROM CUR_AUX	INTO  @XCOD_RECEITA_COR,@XCOD_RECEITA_PASTA,@QTDE,@RELACAO_BANHO

	WHILE @@FETCH_STATUS = 0   
	BEGIN
		-- COR
		IF (SELECT COUNT(A.MATERIAL) FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO) A 
			INNER JOIN @MATRECEITA B ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL)=0		
			INSERT INTO @MATRECEITA   
			SELECT @COD_ORDEM_ESTAMPARIA,MATERIAL,DESC_MATERIAL,COR_MATERIAL , DESC_COR_MATERIAL,CONSUMO,UNID_ESTOQUE,QTDE_RESERVA 
			FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO)
		ELSE
			UPDATE @MATRECEITA SET B.QTDE_RESERVA = B.QTDE_RESERVA+A.QTDE_RESERVA,B.CONSUMO=B.CONSUMO+A.CONSUMO
			FROM @MATRECEITA B
			INNER JOIN FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO) A ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL


		-- PASTA
		IF (SELECT COUNT(A.MATERIAL) FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_PASTA,@QTDE,0,@RELACAO_BANHO) A 
			INNER JOIN @MATRECEITA B ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL)=0		
			INSERT INTO @MATRECEITA   
			SELECT @COD_ORDEM_ESTAMPARIA,MATERIAL,DESC_MATERIAL,COR_MATERIAL , DESC_COR_MATERIAL,CONSUMO,UNID_ESTOQUE,QTDE_RESERVA 
			FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_PASTA,@QTDE,0,@RELACAO_BANHO)
		ELSE
			UPDATE @MATRECEITA SET B.QTDE_RESERVA = B.QTDE_RESERVA+A.QTDE_RESERVA,B.CONSUMO=B.CONSUMO+A.CONSUMO
			FROM @MATRECEITA B
			INNER JOIN FX_MATERIAIS_RECEITA(@XCOD_RECEITA_PASTA,@QTDE,0,@RELACAO_BANHO) A ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL


		FETCH NEXT FROM CUR_AUX	INTO  @XCOD_RECEITA_COR,@XCOD_RECEITA_PASTA,@QTDE,@RELACAO_BANHO
	END  
	  
	CLOSE   CUR_AUX
	DEALLOCATE  CUR_AUX
    RETURN  

END 



---- FX_MATERIAIS_RECEITA_OE_02

USE [TESTES]
GO
/****** Object:  UserDefinedFunction [dbo].[FX_MATERIAIS_RECEITA_OE_02]    Script Date: 11/20/2015 08:28:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[FX_MATERIAIS_RECEITA_OE_02] (@COD_ORDEM_ESTAMPARIA INT)  
  
RETURNS @MATRECEITA TABLE  
(  
 ORDEM_PRODUCAO CHAR(8),
 COD_ORDEM_ESTAMPARIA INT,
 MATERIAL CHAR(11) COLLATE DATABASE_DEFAULT ,  
 DESC_MATERIAL VARCHAR(40) COLLATE DATABASE_DEFAULT,  
 COR_MATERIAL CHAR(10) COLLATE DATABASE_DEFAULT ,  
 DESC_COR_MATERIAL VARCHAR(50) COLLATE DATABASE_DEFAULT,  
 CONSUMO NUMERIC(10,5),  
 UNID_ESTOQUE CHAR(5),
 QTDE_RESERVA NUMERIC(15,9)
)  
AS  
BEGIN  
	--
	-- 26/03/2009 - SZALONTAI - ADIÇÃO DO PARAMETRO RELACAO_BANHO, POIS UMA RECEITA PODE TER UMA RELAÇÃO DIFERENTE DA QUE ESTA CADASTRADA.
	-- 10/04/2008 - SZALONTAI - ADICAO DO PROCESSO PARA CALCULO DA NECESSIDADE CONSIDERANDO O TIPO DA RECEITA. 
	--                          CASO A RECEITA SEJA DE TITURARIA, USA A RELAÇÃO DE BANHO. CASO CONTRARIO, NÃO USA.
    DECLARE @XCOD_RECEITA_COR CHAR(15),@XCOD_RECEITA_PASTA CHAR(15) , @QTDE NUMERIC(9,3),@ORDEM_PRODUCAO CHAR(8),@RELACAO_BANHO TINYINT

	DECLARE CUR_AUX CURSOR FOR   
	SELECT	B.COD_RECEITA_COR, B.COD_RECEITA_PASTA,QTDE_EM_PROCESSO AS QTDE,A.ORDEM_PRODUCAO,RELACAO_BANHO
	FROM	M_ORDEM_FABRICACAO_PROCESSO A 
	INNER JOIN FT_ESTAMPA_CILINDRO_QUADRO B ON	A.COD_FT_ESTAMPA = B.COD_FT_ESTAMPA AND 
												A.COD_FT_ESTAMPA_VARIANTE = B.COD_FT_ESTAMPA_VARIANTE
	INNER JOIN M_ORDEM_ESTAMPARIA C ON A.COD_ORDEM_ESTAMPARIA = C.COD_ORDEM_ESTAMPARIA
	INNER JOIN M_ORDEM_FABRICACAO_ITEM D ON A.ORDEM_PRODUCAO = D.ORDEM_PRODUCAO
	WHERE A.COD_ORDEM_ESTAMPARIA = @COD_ORDEM_ESTAMPARIA
  
	OPEN CUR_AUX
	  
	FETCH NEXT FROM CUR_AUX	INTO  @XCOD_RECEITA_COR,@XCOD_RECEITA_PASTA,@QTDE,@ORDEM_PRODUCAO,@RELACAO_BANHO

	WHILE @@FETCH_STATUS = 0   
	BEGIN
		-- COR
		IF (SELECT COUNT(A.MATERIAL) FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO) A 
			INNER JOIN @MATRECEITA B ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL AND B.ORDEM_PRODUCAO  = @ORDEM_PRODUCAO)=0		
			INSERT INTO @MATRECEITA   
			SELECT @ORDEM_PRODUCAO,@COD_ORDEM_ESTAMPARIA,MATERIAL,DESC_MATERIAL,COR_MATERIAL , DESC_COR_MATERIAL,CONSUMO,UNID_ESTOQUE,QTDE_RESERVA 
			FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO)
		ELSE
			UPDATE @MATRECEITA SET B.QTDE_RESERVA = B.QTDE_RESERVA+A.QTDE_RESERVA,B.CONSUMO=B.CONSUMO+A.CONSUMO
			FROM @MATRECEITA B
			INNER JOIN FX_MATERIAIS_RECEITA(@XCOD_RECEITA_COR,@QTDE,0,@RELACAO_BANHO) A ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL


		-- PASTA
		IF (SELECT COUNT(A.MATERIAL) FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_PASTA,@QTDE,0,@RELACAO_BANHO) A 
			INNER JOIN @MATRECEITA B ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL AND B.ORDEM_PRODUCAO  = @ORDEM_PRODUCAO)=0		
			INSERT INTO @MATRECEITA   
			SELECT @ORDEM_PRODUCAO,@COD_ORDEM_ESTAMPARIA,MATERIAL,DESC_MATERIAL,COR_MATERIAL , DESC_COR_MATERIAL,CONSUMO,UNID_ESTOQUE,QTDE_RESERVA 
			FROM FX_MATERIAIS_RECEITA(@XCOD_RECEITA_PASTA,@QTDE,0,@RELACAO_BANHO)
		ELSE
			UPDATE @MATRECEITA SET B.QTDE_RESERVA = B.QTDE_RESERVA+A.QTDE_RESERVA,B.CONSUMO=B.CONSUMO+A.CONSUMO
			FROM @MATRECEITA B
			INNER JOIN FX_MATERIAIS_RECEITA(@XCOD_RECEITA_PASTA,@QTDE,0,@RELACAO_BANHO) A ON A.MATERIAL = B.MATERIAL AND A.COR_MATERIAL = B.COR_MATERIAL


		FETCH NEXT FROM CUR_AUX	INTO  @XCOD_RECEITA_COR,@XCOD_RECEITA_PASTA,@QTDE,@ORDEM_PRODUCAO,@RELACAO_BANHO
	END  
	  
	CLOSE   CUR_AUX
	DEALLOCATE  CUR_AUX
    RETURN  

END 


-------------------------------------------------------------------------

USE [TESTES]
GO
/****** Object:  UserDefinedFunction [dbo].[FX_MONTA_CARDEX_01]    Script Date: 12/01/2015 13:23:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[FX_MONTA_CARDEX_01]( @PMATERIAL AS CHAR(11), @PCOR_MATERIAL AS CHAR(10), @PFILIAL AS VARCHAR(25), @PDATA AS DATETIME,
                                        @PUTILIZA_FISCAL AS BIT )
RETURNS @RETCARDEX TABLE ( DOCUMENTO VARCHAR(30) COLLATE DATABASE_DEFAULT, FILIAL VARCHAR(25) COLLATE DATABASE_DEFAULT, EMISSAO DATETIME, 
                           ORDEM_PRODUCAO VARCHAR(30) COLLATE DATABASE_DEFAULT, RESPONSAVEL VARCHAR(25) COLLATE DATABASE_DEFAULT,
                           MATERIAL CHAR(11) COLLATE DATABASE_DEFAULT, COR_MATERIAL CHAR(10) COLLATE DATABASE_DEFAULT, 
                           TIPO VARCHAR(30) COLLATE DATABASE_DEFAULT, Q_AUX NUMERIC(15,9), QTDE NUMERIC(15,9), CUSTO NUMERIC(17,5),
                           SALDO NUMERIC(20,9), SALDO_AUX NUMERIC(20,9), NOME_CLIFOR VARCHAR(25) COLLATE DATABASE_DEFAULT, 
                           DESTINO VARCHAR(25) COLLATE DATABASE_DEFAULT, TIPO_SAIDA VARCHAR(30) COLLATE DATABASE_DEFAULT,
                           VALOR NUMERIC(14,2), FRETE_SEGURO_ENCARGO NUMERIC(14,2), DESCONTO NUMERIC(14,2), ICMS_VALOR NUMERIC(14,2),
                           IPI_VALOR NUMERIC(14,2), COFINS_VALOR NUMERIC(14,2), PIS_VALOR NUMERIC(14,2), DESP_IMPORT NUMERIC(14,2),
                           CONTA_CONTABIL_COMPRA VARCHAR(20) COLLATE DATABASE_DEFAULT, CONTA_CONTABIL VARCHAR(20) COLLATE DATABASE_DEFAULT, 
                           CONTA_CONTABIL_MOVIMENTO VARCHAR(20) COLLATE DATABASE_DEFAULT, RATEIO_CENTRO_CUSTO VARCHAR(25) COLLATE DATABASE_DEFAULT, 
                           RATEIO_FILIAL VARCHAR(25) COLLATE DATABASE_DEFAULT, NATUREZA VARCHAR(15) COLLATE DATABASE_DEFAULT, 
                           DESC_NATUREZA VARCHAR(50) COLLATE DATABASE_DEFAULT, CTB_TIPO_OPERACAO VARCHAR(4) COLLATE DATABASE_DEFAULT, 
                           DESC_TIPO_OPERACAO VARCHAR(50) COLLATE DATABASE_DEFAULT, TIPO_OPERACAO VARCHAR(1) COLLATE DATABASE_DEFAULT, 
                           DESC_GRUPO_TIPO_OPERACAO VARCHAR(50) COLLATE DATABASE_DEFAULT, NF_ENTRADA VARCHAR(15) COLLATE DATABASE_DEFAULT, 
                           SERIE_NF VARCHAR(6) COLLATE DATABASE_DEFAULT, ESPECIE_SERIE INT, UNIDADE VARCHAR(5) COLLATE DATABASE_DEFAULT, 
                           CLASSIF_FISCAL CHAR(10) COLLATE DATABASE_DEFAULT, CFOP VARCHAR(4) COLLATE DATABASE_DEFAULT, 
                           ES CHAR(1) COLLATE DATABASE_DEFAULT, SEQUENCIA INT PRIMARY KEY)
AS

/***************************************************************************************************************************************************
17/01/2012 - Szalontai - Aumento no numero de digitos nos campos Q_Aux e Qtde para numeric (10,3), para atender a TP 3355258
-- SAMUEL - 23/07/2012 - ALTERACAO DO NUMERO DE DIGITOS DA NOTA PARA 15 E SERIE PARA 3
19/06/2008 - Fabiano Banin - Adequação da função para funcionamento na tela LX012027.
17/06/2008 - Fabiano Banin - A informação de mostrar a nota fiscal estava invertida no select.
24/05/2006 - Fabiano Banin - Zerar o saldo a cada vez que um parâmetro é alterado (MATERIAL / COR / FILIAL), antes se utilizava o % para filtros
                             em um dos parâmetros ele gerava um saldo continuo para todos os materiais.
08/03/2006 - Fabiano Banin - Estava faltando incluir a tabela FATURAM_DEV_MAT na composição do extrato.
23/02/2006 - Fabiano Banin - Criação do campo SEQUENCIA na tabela de retorno para servir como indice ao retornar os movimentos.
04/11/2005 - Fabiano Banin - ***
27/09/2005 - Sergio	   - Troca do collate de SQL_LATIN1_GENERAL_CP1_CI_AS para DATABASE_DEFAULT
03/02/2005 - ALESSANDRO    - COLLATE EXPLICITO.
02/02/2005 - FABIANO       - MELHORIA DE PERFORMANCE,
01/02/2005 - FABIANO       - AJUSTE NO VALOR DO CUSTO. NOS SELECTS QUE TRAZEM AS MOVIMENTAÇÕES DE ENTRADAS FALTAVA UMA VERIFICAÇÃO DA UTILIZAÇÃO
                             DO FRETE NA COMPOSIÇÃO DO CUSTO.
	                       - FORAM FEITAS CORREÇÕES PARA A APRESENTAÇÃO CORRETA DO CUSTO, AO FAZER UMA COMPARAÇÃO DO EXTRATO COM O CUSTO 
                             APRESENTADO NO FECHAMENTO OS VALORES ERAM TOTALMENTE DIFERENTES.
01/11/2004 - ALESSANDRO    - AJUSTE DA ORDEM DAS MOVIMENTAÇÕES.
31/08/2004 - ALESSANDRO    - INCLUSÃO DE MAIS DADOS PARA CONTABILIZAÇÃO POR MOVIMENTAÇÃO DE ESTOQUE.
30/08/2004 - ALESSANDRO    - INCLUSÃO DOS DADOS PARA CONTABILIZAÇÃO POR MOVIMENTAÇÃO DE ESTOQUE.
12/03/2004 - FABIANO BANIN - TRAZER O NOME DO FORNECEDOR / BENEFICIADOR.
14/01/2004 - FABIANO BANIN - ARRUMADO O CALCULO DO CUSTO IGUAL ESTA NA PROCEDURE DE GERAÇÃO DE CUSTO (LX_GERA_CUSTO_MATERIAL).
                           - ESTAVA COM UM RELACIONAMENTO ERRADO PARA AS ENTRADAS DE NF.
***************************************************************************************************************************************************/

BEGIN

	DECLARE @DOCUMENTO AS VARCHAR(30), @FILIAL AS VARCHAR(25), @EMISSAO AS DATETIME, @ORDEM_PRODUCAO AS VARCHAR(30), @RESPONSAVEL AS VARCHAR(25),
	        @MATERIAL AS CHAR(11), @COR_MATERIAL AS CHAR(10), @TIPO AS VARCHAR(30), @Q_AUX AS NUMERIC(15,9), @QTDE AS NUMERIC(15,9),
	        @NOME_CLIFOR AS VARCHAR(25), @DESTINO AS VARCHAR(25), @TIPO_SAIDA AS VARCHAR(30), @SALDO_CALC AS NUMERIC(20,9),
	        @SALDO_AUX_CALC AS NUMERIC(20,9), @CUSTO AS NUMERIC(17,5), @ORDEM AS CHAR(05), @VALOR AS NUMERIC(14,2),
	        @FRETE_SEGURO_ENCARGO AS NUMERIC(14,2), @DESCONTO NUMERIC(14,2),  @ICMS_VALOR NUMERIC(14,2), @IPI_VALOR AS NUMERIC(14,2),
	        @COFINS_VALOR AS NUMERIC(14,2), @PIS_VALOR AS NUMERIC(14,2), @DESP_IMPORT AS NUMERIC(14,2), @CONTA_CONTABIL_COMPRA AS VARCHAR(20),
	        @CONTA_CONTABIL AS VARCHAR(20), @CONTA_CONTABIL_MOVIMENTO AS VARCHAR(20), @RATEIO_CENTRO_CUSTO AS VARCHAR(25),
	        @RATEIO_FILIAL AS VARCHAR(25), @NATUREZA AS VARCHAR(15), @DESC_NATUREZA AS VARCHAR(50), @CTB_TIPO_OPERACAO AS VARCHAR(4),
	        @DESC_TIPO_OPERACAO AS VARCHAR(50), @TIPO_OPERACAO AS VARCHAR(1), @DESC_GRUPO_TIPO_OPERACAO AS VARCHAR(50), @NOTA_FISCAL AS VARCHAR(15),
	        @SERIE_NF AS VARCHAR(6), @ESPECIE_SERIE AS INT, @UNIDADE AS VARCHAR(5), @CLASSIF_FISCAL AS CHAR(10), @CFOP AS VARCHAR(4), 
	        @ES AS CHAR(1), @UTILIZA_FRETE_SEGURO AS BIT, @SEQUENCIA AS INT, @Z_MATERIAL CHAR(11), @Z_COR_MATERIAL CHAR(10), @Z_FILIAL VARCHAR(25)

	-- PARA MANTER A COMPATIBILIDADE COM A PROCEDURE DE GERAÇÃO DE CUSTO MÉDIO.
	SELECT @UTILIZA_FRETE_SEGURO = 1

	DECLARE CURCARDEXTEMP CURSOR LOCAL FAST_FORWARD READ_ONLY FOR
	SELECT RTRIM(B.REQ_MATERIAL) + ( CASE WHEN ISNULL(B.NF_ENTRADA, '') = '' THEN '' ELSE '/' END ) + RTRIM(ISNULL(B.NF_ENTRADA, '')) AS DOCUMENTO,
	       B.FILIAL, ISNULL(ISNULL(C.RECEBIMENTO, B.RECEBIMENTO), B.EMISSAO) AS EMISSAO, A.ORDEM_PRODUCAO, B.RESPONSAVEL,
	       A.MATERIAL, A.COR_MATERIAL, ( CASE WHEN C.NF_ENTRADA IS NOT NULL THEN 'ENTRADA DE N.F.' ELSE 'RETORNO' END ) AS TIPO, A.QTDE_AUX AS Q_AUX,
	       A.QTDE AS QTDE,
	       (
	       CASE WHEN ISNULL(B.TIPO_MOVIMENTACAO, ' ') IN ( 'C', ' ' ) THEN
	          A.CUSTO_ULT_SAIDA
	       ELSE
	          (
	          CASE WHEN A.QTDE > 0 THEN
	             ( ( A.VALOR + (
	             CASE WHEN D.NF_ENTRADA IS NULL THEN
	                - (
	                CASE WHEN F.ABATER_ICMS_NO_MEDIO = 1 THEN
	                   CASE WHEN ISNULL(C.VALOR_TOTAL, 0) <> 0 THEN
	                      A.VALOR / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) * C.ICMS_BASE
	                      * ( CASE WHEN ISNULL(C.ICMS_BASE, 0) <> 0 THEN ( C.ICMS_VALOR / C.ICMS_BASE ) ELSE 0 END )
	                   ELSE
	                      0
	                   END
	                ELSE
	                   0
	                END
	                ) + ( CASE WHEN F.ABATER_IPI_NO_MEDIO = 1 THEN ( A.VALOR * ( F.IPI / 100.0000 ) ) ELSE 0 END ) + (
	                CASE WHEN @UTILIZA_FRETE_SEGURO = 1 THEN
	                   + (
	                   CASE WHEN ISNULL(C.VALOR_TOTAL, 0) <> 0 THEN
	                      ISNULL(( A.VALOR * ( C.FRETE / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0) +
	                      ISNULL(( A.VALOR * ( C.SEGURO / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0) +
	                      ISNULL(( A.VALOR * (
	                               ISNULL(C.VALOR_FRETE_TRANSPORTADORA, 0) / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0)
	                   ELSE
	                      0
	                   END
	                   )
	                ELSE
	                   0
	                END
	                ) + (
	                CASE WHEN ISNULL(C.VALOR_TOTAL, 0) <> 0 THEN
	                   ISNULL(( A.VALOR * ( C.ENCARGO / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0)
	                   - ISNULL(( A.VALOR * ( C.DESCONTO / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0)
	                ELSE
	                   0
	                END
	                )
	             ELSE
	                + (
	                CASE WHEN ISNULL(D.VALOR_ITEM, 0) <> 0 THEN
	                   ISNULL(( A.VALOR * ( D.VALOR_ENCARGOS / D.VALOR_ITEM ) ), 0) -
	                   ISNULL(( A.VALOR * ( D.VALOR_DESCONTOS / D.VALOR_ITEM ) ), 0) +
	                   ISNULL(( A.VALOR * ( D.VALOR_ENCARGOS_IMPORTACAO / D.VALOR_ITEM ) ), 0) +
	                   CASE WHEN C.IMPORTACAO = 0 THEN
	                      - ISNULL(CASE WHEN F.ABATER_ICMS_NO_MEDIO = 1 THEN ( A.VALOR * ( E.VALOR_IMPOSTO_DESTACAR / D.VALOR_ITEM ) ) ELSE 0 END, 0)
	                      - ISNULL(CASE WHEN F.ABATER_IPI_NO_MEDIO = 1 THEN ( A.VALOR * ( E.VALOR_IMPOSTO_AGREGAR / D.VALOR_ITEM ) ) ELSE 0 END, 0)
	                      - ISNULL(CASE WHEN F.ABATER_COFINS_NO_MEDIO = 1 THEN ( A.VALOR * ( E.VALOR_COFINS / D.VALOR_ITEM ) ) ELSE 0 END, 0)
	                      - ISNULL(CASE WHEN F.ABATER_PIS_NO_MEDIO = 1 THEN ( A.VALOR * ( E.VALOR_PIS / D.VALOR_ITEM ) ) ELSE 0 END, 0)
	                   ELSE
	                      0
	                   END
	                ELSE
	                   0
	                END
	                ) + (
	                CASE WHEN @UTILIZA_FRETE_SEGURO = 1 THEN
	                   + (
	                   CASE WHEN ISNULL(C.VALOR_TOTAL, 0) <> 0 THEN
	                      ISNULL(( A.VALOR * ( C.FRETE / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0) +
	                      ISNULL(( A.VALOR * ( C.SEGURO / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0) +
	                      ISNULL(( A.VALOR * (
	                               ISNULL(C.VALOR_FRETE_TRANSPORTADORA, 0) / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0)
	                   ELSE
	                      0
	                   END
	                   )
	                ELSE
	                   0
	                END
	                )
	             END ) ) / A.QTDE )
	          ELSE
	             0
	          END
	          )
	       END) AS CUSTO, ISNULL(B.NOME_CLIFOR, '') AS NOME_CLIFOR, ISNULL(C.FILIAL,'') AS DESTINO,
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'A' THEN 'RETORNO NORMAL  ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'B' THEN 'SOBRA DE OP     ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'C' THEN 'RET. SEMI-ACAB. ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'D' THEN 'SOBRA SEMI-ACAB ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'M' THEN 'ENTRADA DE N.F. ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'H' THEN '                ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'F' THEN '                ' END END END END END END END AS TIPO_SAIDA, '1.1' AS ORDEM,
	       VALOR = CONVERT(NUMERIC(14,2),
	                  CASE WHEN D.NF_ENTRADA IS NULL THEN
	                     A.VALOR +
	                     CASE WHEN (
	                        ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( C.FRETE + C.SEGURO + C.ENCARGO - C.DESCONTO - C.ICMS_VALOR ) +
	                        CASE WHEN IMPORTACAO = 1 THEN
	                           ( C.IMPORTACAO_IMPOSTO + C.IMPORTACAO_ICMS + C.IMPORTACAO_IPI + C.IMPORTACAO_ALFANDEGA + C.IMPORTACAO_OUTRAS_DESPESAS +
	                           C.IMPORTACAO_FRETE + C.IMPORTACAO_SEGURO + C.IMPORTACAO_DESEMBARACO )
	                        ELSE
	                           0
	                        END
	                        ) = 0 ) THEN 0
	                     ELSE
	                        ( 1.000 * ( A.VALOR - CONVERT(NUMERIC(14,2), ( ( A.VALOR * F.IPI ) / ( F.IPI + 100 ) )) ) /
	                        ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( C.FRETE + C.SEGURO + C.ENCARGO - C.DESCONTO - C.ICMS_VALOR ) +
	                        CASE WHEN IMPORTACAO = 1 THEN
	                           ( C.IMPORTACAO_IMPOSTO + C.IMPORTACAO_ICMS + C.IMPORTACAO_IPI + C.IMPORTACAO_ALFANDEGA + C.IMPORTACAO_OUTRAS_DESPESAS +
	                           C.IMPORTACAO_FRETE + C.IMPORTACAO_SEGURO + C.IMPORTACAO_DESEMBARACO )
	                        ELSE
	                           0
	                        END
	                        ))
	                     END - (
	                     CASE WHEN F.ABATER_COFINS_NO_MEDIO = 1 THEN
	                        ( CASE WHEN C.EMISSAO > '20040229' THEN ( A.VALOR * 0.076 ) ELSE ( A.VALOR * 0.03 ) END )
	                     ELSE
	                        0
	                     END ) - (
	                     CASE WHEN F.ABATER_PIS_NO_MEDIO = 1 THEN
	                        ( CASE WHEN C.EMISSAO > '20030228' THEN ( A.VALOR * 0.0165 ) ELSE ( A.VALOR * 0.01 ) END )
	                     ELSE
	                        0
	                     END )
	                  ELSE
	                     A.VALOR + (
	                     CASE WHEN D.VALOR_ITEM <> 0 THEN
	                        ISNULL(( A.VALOR * ( D.VALOR_ENCARGOS / D.VALOR_ITEM ) ), 0) -
	                        ISNULL(( A.VALOR * ( D.VALOR_DESCONTOS / D.VALOR_ITEM ) ), 0) +
	                        ISNULL(( A.VALOR * ( D.VALOR_ENCARGOS_IMPORTACAO / D.VALOR_ITEM ) ), 0) -
	                        CASE WHEN F.ABATER_ICMS_NO_MEDIO = 1 THEN
	                           ISNULL(( A.VALOR * ( E.VALOR_IMPOSTO_DESTACAR / D.VALOR_ITEM ) ), 0)
	                        ELSE
	                           0
	                        END -
	                        CASE WHEN F.ABATER_IPI_NO_MEDIO = 1 THEN
	                           ISNULL(( A.VALOR * ( E.VALOR_IMPOSTO_AGREGAR / D.VALOR_ITEM ) ), 0)
	                        ELSE
	                           0
	                        END -
	                        CASE WHEN F.ABATER_COFINS_NO_MEDIO = 1 THEN
	                           ISNULL(( A.VALOR * ( E.VALOR_COFINS / D.VALOR_ITEM ) ), 0)
	                        ELSE
	                           0
	                        END -
	                        CASE WHEN F.ABATER_PIS_NO_MEDIO = 1 THEN
	                           ISNULL(( A.VALOR * ( E.VALOR_PIS / D.VALOR_ITEM ) ), 0)
	                        ELSE
	                           0
	                        END
	                     END
	                     )
	                  END),
	       FRETE_SEGURO_ENCARGO =	CONVERT(NUMERIC(14,2),
	                                 CASE WHEN D.NF_ENTRADA IS NULL THEN
	                                    CASE WHEN ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( C.FRETE + C.SEGURO + C.ENCARGO ) ) = 0 THEN
	                                       0
	                                    ELSE
	                                       ( 1.000 * ( A.VALOR - CONVERT(NUMERIC(14,2), A.VALOR * F.IPI / ( F.IPI + 100 ) ) )
	                                       / ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( C.FRETE + C.SEGURO + C.ENCARGO ) ) )
	                                    END
	                                 ELSE
	                                    ISNULL(( CASE WHEN D.VALOR_ITEM <> 0 THEN ( A.VALOR * ( D.VALOR_ENCARGOS / D.VALOR_ITEM ) ) ELSE 0 END ), 0)
	                                 END),
	       DESCONTO = CONVERT(NUMERIC(14,2),
	                     CASE WHEN D.NF_ENTRADA IS NULL THEN
	                        CASE WHEN ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( C.DESCONTO ) ) = 0 THEN
	                           0
	                        ELSE
	                           ( 1.000 * ( A.VALOR - CONVERT(NUMERIC(14,2), A.VALOR * F.IPI / ( F.IPI + 100 ) ) )
	                           / ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( C.DESCONTO ) ))
	                        END
	                     ELSE
	                        ISNULL(( CASE WHEN D.VALOR_ITEM <> 0 THEN ( A.VALOR * ( D.VALOR_DESCONTOS / D.VALOR_ITEM ) ) ELSE 0 END ), 0)
	                     END),
	       ICMS_VALOR = CONVERT(NUMERIC(14,2),
	                       CASE WHEN D.NF_ENTRADA IS NULL THEN
	                          CASE WHEN ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( ICMS_VALOR ) ) = 0 THEN
	                             0
	                          ELSE
	                             ( 1.000 * ( A.VALOR - CONVERT(NUMERIC(14,2), A.VALOR * F.IPI / ( F.IPI + 100 ) ) )
	                             / ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( ICMS_VALOR ) ) )
	                          END
	                       ELSE
	                          ISNULL((
	                             CASE WHEN F.ABATER_ICMS_NO_MEDIO = 1 AND D.VALOR_ITEM <> 0 THEN
	                                ( A.VALOR * ( E.VALOR_IMPOSTO_DESTACAR / D.VALOR_ITEM ) )
	                             ELSE
	                                0
	                             END )
	                          , 0)
	                       END),
	       IPI_VALOR = CONVERT(NUMERIC(14,2),
	                      CASE WHEN D.NF_ENTRADA IS NULL THEN
	                         CASE WHEN ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( IPI_VALOR ) ) = 0 THEN
	                            0
	                         ELSE
	                            ( 1.000 * ( A.VALOR - CONVERT(NUMERIC(14,2), A.VALOR * F.IPI / ( F.IPI + 100 ) ) )
	                            / ( C.VALOR_TOTAL - C.IPI_VALOR ) * ( ( IPI_VALOR ) ) )
	                         END
	                      ELSE
	                         ISNULL((
	                            CASE WHEN F.ABATER_IPI_NO_MEDIO = 1 AND D.VALOR_ITEM <> 0 THEN
	                               ( A.VALOR * ( E.VALOR_IMPOSTO_AGREGAR / D.VALOR_ITEM ) )
	                            ELSE
	                               0
	                            END
	                         ), 0)
	                      END),
	       COFINS_VALOR = CONVERT(NUMERIC(14,2),
	                         CASE WHEN D.NF_ENTRADA IS NULL THEN (
	                            CASE WHEN F.ABATER_COFINS_NO_MEDIO = 1 THEN
	                               ( CASE WHEN C.EMISSAO > '20040229' THEN ( A.VALOR * 0.076 ) ELSE ( A.VALOR * 0.03 ) END )
	                            ELSE
	                               0
	                            END )
	                         ELSE
	                            ISNULL((
	                               CASE WHEN F.ABATER_COFINS_NO_MEDIO = 1 AND D.VALOR_ITEM <> 0 THEN
	                                  ( A.VALOR * ( E.VALOR_COFINS / D.VALOR_ITEM ) )
	                               ELSE
	                                  0
	                               END )
	                            , 0)
	                         END),
	       PIS_VALOR = CONVERT(NUMERIC(14,2),
	                      CASE WHEN D.NF_ENTRADA IS NULL THEN (
	                         CASE WHEN F.ABATER_PIS_NO_MEDIO = 1 THEN
	                            ( CASE WHEN C.EMISSAO > '20030228' THEN ( A.VALOR * 0.0165 ) ELSE ( A.VALOR * 0.01 ) END )
	                         ELSE
	                            0
	                         END )
	                      ELSE
	                         ISNULL((
	                           CASE WHEN F.ABATER_PIS_NO_MEDIO = 1 AND D.VALOR_ITEM <> 0 THEN
	                               ( A.VALOR * ( E.VALOR_PIS / D.VALOR_ITEM ) )
	                            ELSE
	                               0
	                            END )
	                         , 0)
	                      END),
	       DESP_IMPORT = CONVERT(NUMERIC(14,2),
	                        CASE WHEN D.NF_ENTRADA IS NULL THEN
	                           CASE WHEN
	                              ( C.VALOR_TOTAL - C.IPI_VALOR ) * (
	                              CASE WHEN IMPORTACAO=1 THEN
	                                 ( C.IMPORTACAO_IMPOSTO + C.IMPORTACAO_ICMS + C.IMPORTACAO_IPI + C.IMPORTACAO_ALFANDEGA +
	                                 C.IMPORTACAO_OUTRAS_DESPESAS + C.IMPORTACAO_FRETE + C.IMPORTACAO_SEGURO + C.IMPORTACAO_DESEMBARACO )
	                              ELSE
	                                 0
	                              END ) = 0
	                           THEN
	                              0
	                           ELSE
	                              ( 1.000 * ( A.VALOR - CONVERT(NUMERIC(14,2), A.VALOR * F.IPI / ( F.IPI + 100 ) ) )
	                              / ( C.VALOR_TOTAL - C.IPI_VALOR ) * (
	                             CASE WHEN IMPORTACAO = 1 THEN
	                                ( C.IMPORTACAO_IMPOSTO + C.IMPORTACAO_ICMS + C.IMPORTACAO_IPI + C.IMPORTACAO_ALFANDEGA +
	                                C.IMPORTACAO_OUTRAS_DESPESAS + C.IMPORTACAO_FRETE + C.IMPORTACAO_SEGURO + C.IMPORTACAO_DESEMBARACO )
	                             ELSE
	                                0
	                             END ) )
	                           END
	                        ELSE
	                           ISNULL(( CASE WHEN D.VALOR_ITEM <> 0 THEN ( A.VALOR * ( D.VALOR_ENCARGOS_IMPORTACAO / D.VALOR_ITEM ) ) ELSE 0 END ), 0)
	                        END), M.CONTA_CONTABIL_COMPRA, M.CONTA_CONTABIL, D.CONTA_CONTABIL_MOVIMENTO, D.RATEIO_CENTRO_CUSTO, D.RATEIO_FILIAL,
	       N.NATUREZA, N.DESC_NATUREZA, TTO.CTB_TIPO_OPERACAO, TTO.DESC_TIPO_OPERACAO, TGO.TIPO_OPERACAO, TGO.DESC_GRUPO_TIPO_OPERACAO, C.NF_ENTRADA,
	       C.SERIE_NF_ENTRADA, C.ESPECIE_SERIE, M.UNID_ESTOQUE, M.CLASSIF_FISCAL, D.CODIGO_FISCAL_OPERACAO, 'E' AS ES
	FROM ESTOQUE_RET1_MAT AS A (NOLOCK)
	     INNER JOIN ESTOQUE_RET_MAT AS B (NOLOCK) ON A.REQ_MATERIAL = B.REQ_MATERIAL AND
	                                                 A.FILIAL = B.FILIAL
	     INNER JOIN MATERIAIS AS M (NOLOCK) ON M.MATERIAL = A.MATERIAL
	     LEFT JOIN CLASSIF_FISCAL AS F (NOLOCK) ON F.CLASSIF_FISCAL = M.CLASSIF_FISCAL
	     LEFT JOIN ENTRADAS AS C (NOLOCK) ON C.NOME_CLIFOR = B.NOME_CLIFOR AND
	                                         C.NF_ENTRADA = B.NF_ENTRADA AND
	                                         C.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA
	     LEFT JOIN NATUREZAS_ENTRADAS AS N (NOLOCK) ON N.NATUREZA=C.NATUREZA
	     LEFT JOIN CTB_LX_TIPO_OPERACAO AS TTO (NOLOCK) ON TTO.CTB_TIPO_OPERACAO = N.CTB_TIPO_OPERACAO
	     LEFT JOIN CTB_LX_GRUPO_TIPO_OPERACAO AS TGO (NOLOCK) ON TTO.TIPO_OPERACAO = TGO.TIPO_OPERACAO
	     LEFT JOIN ( SELECT A.NOME_CLIFOR, A.NF_ENTRADA, A.SERIE_NF_ENTRADA, A.ITEM_IMPRESSAO, A.CONTA_CONTABIL AS CONTA_CONTABIL_MOVIMENTO,
	                        A.RATEIO_CENTRO_CUSTO, A.RATEIO_FILIAL, A.CODIGO_FISCAL_OPERACAO, SUM(A.VALOR_ITEM) AS VALOR_ITEM,
	                        SUM(A.VALOR_ENCARGOS) AS VALOR_ENCARGOS, SUM(A.VALOR_DESCONTOS) AS VALOR_DESCONTOS,
	                        SUM(VALOR_ENCARGOS_IMPORTACAO) AS VALOR_ENCARGOS_IMPORTACAO
	                 FROM ENTRADAS_ITEM AS A (NOLOCK)
	                      INNER JOIN ENTRADAS AS B (NOLOCK) ON A.NOME_CLIFOR = B.NOME_CLIFOR AND
	                                                           A.NF_ENTRADA = B.NF_ENTRADA AND
	                                                           A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA
	                 WHERE A.COD_TABELA_FILHA = 'M' AND
	                       @PUTILIZA_FISCAL = 1
	                 GROUP BY A.NOME_CLIFOR, A.NF_ENTRADA, A.SERIE_NF_ENTRADA, A.ITEM_IMPRESSAO, A.CONTA_CONTABIL, A.RATEIO_CENTRO_CUSTO,
	                 A.RATEIO_FILIAL, A.CODIGO_FISCAL_OPERACAO ) AS D ON D.NOME_CLIFOR = B.NOME_CLIFOR AND
	                                                                     D.NF_ENTRADA = B.NF_ENTRADA AND
	                                                                     D.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA AND
	                                                                     D.ITEM_IMPRESSAO = A.ITEM_IMPRESSAO
	     LEFT JOIN ( SELECT A.NOME_CLIFOR, A.NF_ENTRADA, A.SERIE_NF_ENTRADA, A.ITEM_IMPRESSAO, SUM(A.VALOR_ITEM) AS VALOR_ITEM,
	                        SUM(( CASE WHEN C.ID_IMPOSTO IN ( 1 ) THEN C.VALOR_IMPOSTO_ESPELHO ELSE 0 END )) AS VALOR_IMPOSTO_DESTACAR,
	                        SUM(( CASE WHEN C.ID_IMPOSTO IN ( 2 ) THEN C.VALOR_IMPOSTO_ESPELHO ELSE 0 END )) AS VALOR_IMPOSTO_AGREGAR,
	                        SUM(( CASE WHEN C.ID_IMPOSTO IN ( 6 ) THEN C.VALOR_IMPOSTO_ESPELHO ELSE 0 END )) AS VALOR_COFINS,
	                        SUM(( CASE WHEN C.ID_IMPOSTO IN ( 5 ) THEN C.VALOR_IMPOSTO_ESPELHO ELSE 0 END )) AS VALOR_PIS
	                 FROM ENTRADAS_ITEM AS A (NOLOCK)
	                      INNER JOIN ENTRADAS AS B (NOLOCK) ON A.NOME_CLIFOR = B.NOME_CLIFOR AND
	                                                           A.NF_ENTRADA = B.NF_ENTRADA AND
	                                                           A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA
	                      INNER JOIN ENTRADAS_IMPOSTO AS C ON C.NOME_CLIFOR = A.NOME_CLIFOR AND
	                                                          C.NF_ENTRADA = A.NF_ENTRADA AND
	                                                          C.SERIE_NF_eNTRADA = A.SERIE_NF_ENTRADA AND
	                                                          C.ITEM_IMPRESSAO = A.ITEM_IMPRESSAO AND
	                                                          C.SUB_ITEM_TAMANHO = A.SUB_ITEM_TAMANHO
	                 WHERE A.COD_TABELA_FILHA = 'M' AND
	                       @PUTILIZA_FISCAL = 1
	                 GROUP BY A.NOME_CLIFOR, A.NF_ENTRADA, A.SERIE_NF_ENTRADA, A.ITEM_IMPRESSAO ) AS E ON E.NOME_CLIFOR = D.NOME_CLIFOR AND
                                                                                                         E.NF_ENTRADA = D.NF_ENTRADA AND
                                                                                                         E.SERIE_NF_ENTRADA = D.SERIE_NF_ENTRADA AND
                                                                                                         E.ITEM_IMPRESSAO = D.ITEM_IMPRESSAO
	     WHERE A.MATERIAL LIKE RTRIM(@PMATERIAL) AND
	           A.COR_MATERIAL LIKE RTRIM(@PCOR_MATERIAL) AND
	           A.FILIAL LIKE RTRIM(@PFILIAL) AND
	           CASE WHEN @PDATA IS NULL THEN 1 ELSE ISNULL(ISNULL(C.RECEBIMENTO, B.RECEBIMENTO), B.EMISSAO) END <= ISNULL(@PDATA, 1)

	UNION ALL

	SELECT RTRIM(B.REQ_MATERIAL) + CASE WHEN ISNULL(B.NF_SAIDA, '') = '' THEN '' ELSE '/' END + RTRIM(ISNULL(B.NF_SAIDA, '')) AS DOCUMENTO, B.FILIAL,
	       B.EMISSAO, 'OP:' + RTRIM(ISNULL(A.ORDEM_PRODUCAO, '')) + '/PED:' + RTRIM(ISNULL(A.PEDIDO, '')) + '/OS:'
	       + RTRIM(ISNULL(B.ORDEM_SERVICO, '')) AS ORDEM_PRODUCAO, B.RESPONSAVEL, A.MATERIAL, A.COR_MATERIAL, 'SAIDA' AS TIPO,
	       -(A.QTDE_AUX) AS Q_AUX, -(A.QTDE) AS QTDE, A.CUSTO AS CUSTO, B.NOME_CLIFOR, B.FILIAL_DESTINO AS DESTINO,
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'A' THEN 'SAIDA NORMAL   ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'B' THEN 'SAIDA P/ OP    ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'C' THEN 'TRANSF. DE MP  ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'D' THEN 'VENDAS DE MP   ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'E' THEN 'DEVOLUCAO DE MP' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'F' THEN 'SAIDA PARA OF  ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'H' THEN 'TRANSF. POR OS ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'I' THEN 'SAIDA STQ.TERC.' END END END END END END END END AS TIPO_SAIDA, '2.1' AS ORDEM,
	       A.VALOR, 0 AS FRETE_SEGURO_ENCARGO, 0 AS DESCONTO, 0 AS ICMS_VALOR, 0 AS IPI_VALOR, 0 AS COFINS_VALOR, 0 AS PIS_VALOR,
	       0 AS DESP_IMPORT, M.CONTA_CONTABIL_COMPRA, M.CONTA_CONTABIL, F.CONTA_CONTABIL AS CONTA_CONTABIL_MOVIMENTO, F.RATEIO_CENTRO_CUSTO,
	       F.RATEIO_FILIAL, NS.NATUREZA_SAIDA AS NATUREZA, NS.DESC_NATUREZA, CTO.CTB_TIPO_OPERACAO, CTO.DESC_TIPO_OPERACAO,
	       GTO.TIPO_OPERACAO, GTO.DESC_GRUPO_TIPO_OPERACAO, B.NF_SAIDA, B.SERIE_NF, NULL AS ESPECIE_SERIE, M.UNID_ESTOQUE, M.CLASSIF_FISCAL, 
	       F.CODIGO_FISCAL_OPERACAO, 'S' AS ES
	FROM ESTOQUE_SAI1_MAT AS A (NOLOCK)
	     INNER JOIN ESTOQUE_SAI_MAT AS B (NOLOCK) ON A.REQ_MATERIAL = B.REQ_MATERIAL AND
	                                                 A.FILIAL = B.FILIAL
	     INNER JOIN MATERIAIS AS M ON A.MATERIAL = M.MATERIAL
	     LEFT JOIN ( SELECT F.NF_SAIDA, F.SERIE_NF, F.FILIAL, F.RATEIO_CENTRO_CUSTO, F.RATEIO_FILIAL, F.NATUREZA_SAIDA, FI.ITEM_IMPRESSAO, 
	                        FI.CODIGO_FISCAL_OPERACAO, FI.CONTA_CONTABIL
	                 FROM FATURAMENTO AS F
	                      INNER JOIN FATURAMENTO_ITEM AS FI ON F.NF_SAIDA = FI.NF_SAIDA AND
	                                                           F.SERIE_NF = FI.SERIE_NF AND
	                                                           F.FILIAL = FI.FILIAL
	               ) AS F ON B.NF_SAIDA = F.NF_SAIDA AND 
	                         B.FILIAL_FATURAMENTO = F.FILIAL AND 
	                         B.SERIE_NF = F.SERIE_NF AND
	                         A.ITEM_IMPRESSAO = F.ITEM_IMPRESSAO
	     LEFT JOIN NATUREZAS_SAIDAS AS NS ON F.NATUREZA_SAIDA = NS.NATUREZA_SAIDA
	     LEFT JOIN CTB_LX_TIPO_OPERACAO AS CTO ON NS.CTB_TIPO_OPERACAO = CTO.CTB_TIPO_OPERACAO
	     LEFT JOIN CTB_LX_GRUPO_TIPO_OPERACAO AS GTO ON ISNULL(CTO.TIPO_OPERACAO, NS.TIPO_OPERACAO) = GTO.TIPO_OPERACAO
	WHERE B.NF_PENDENTE = 0 AND
	      A.MATERIAL LIKE RTRIM(@PMATERIAL) AND
	      A.COR_MATERIAL LIKE RTRIM(@PCOR_MATERIAL) AND
	      A.FILIAL LIKE RTRIM(@PFILIAL) AND
	      CASE WHEN @PDATA IS NULL THEN 1 ELSE B.EMISSAO END <= ISNULL(@PDATA, 1)

	UNION ALL

	SELECT RTRIM(B.REQ_MATERIAL) + CASE WHEN ISNULL(B.NF_SAIDA, '') = '' THEN '' ELSE '/' END + RTRIM(ISNULL(B.NF_SAIDA, '')) AS DOCUMENTO, B.FILIAL,
	       B.EMISSAO, 'OP:' + RTRIM(ISNULL(A.ORDEM_PRODUCAO, '')) + '/PED:' + RTRIM(ISNULL(A.PEDIDO, '')) + '/OS:' +
	       RTRIM(ISNULL(B.ORDEM_SERVICO, '')) AS ORDEM_PRODUCAO, B.RESPONSAVEL, A.MATERIAL, A.COR_MATERIAL, 'SAIDA PENDENTE' AS TIPO,
	       -(A.QTDE_AUX) AS Q_AUX, -(A.QTDE) AS QTDE, A.CUSTO AS CUSTO, B.NOME_CLIFOR, B.FILIAL_DESTINO AS DESTINO,
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'A' THEN 'SAIDA NORMAL   ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'B' THEN 'SAIDA P/ OP    ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'C' THEN 'TRANSF. DE MP  ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'D' THEN 'VENDAS DE MP   ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'E' THEN 'DEVOLUCAO DE MP' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'F' THEN 'SAIDA PARA OF  ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'H' THEN 'TRANSF. POR OS ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'I' THEN 'SAIDA STQ.TERC.' END END END END END END END END AS TIPO_SAIDA, '2.2' AS ORDEM,
	       A.VALOR, 0 AS FRETE_SEGURO_ENCARGO, 0 AS DESCONTO, 0 AS ICMS_VALOR, 0 AS IPI_VALOR, 0 AS COFINS_VALOR, 0 AS PIS_VALOR,
	       0 AS DESP_IMPORT, M.CONTA_CONTABIL_COMPRA, M.CONTA_CONTABIL, M.CONTA_CONTABIL AS CONTA_CONTABIL_MOVIMENTO,
	       NULL AS RATEIO_CENTRO_CUSTO, NULL AS RATEIO_FILIAL, NULL AS NATUREZA, NULL AS DESC_NATUREZA, NULL AS CTB_TIPO_OPERACAO,
	       NULL AS DESC_TIPO_OPERACAO, NULL AS TIPO_OPERACAO, NULL AS DESC_GRUPO_TIPO_OPERACAO, NULL AS NOTA_FISCAL, NULL AS SERIE_NF, 
	       NULL AS ESPECIE_SERIE, M.UNID_ESTOQUE, M.CLASSIF_FISCAL, NULL AS CODIGO_FISCAL_OPERACAO, 'S' AS ES
	FROM ESTOQUE_SAI1_MAT AS A (NOLOCK)
	     INNER JOIN ESTOQUE_SAI_MAT AS B (NOLOCK) ON A.REQ_MATERIAL = B.REQ_MATERIAL AND
	                                                 A.FILIAL = B.FILIAL
	     INNER JOIN MATERIAIS AS M (NOLOCK) ON A.MATERIAL=M.MATERIAL
	WHERE B.NF_PENDENTE = 1 AND
	      A.MATERIAL LIKE RTRIM(@PMATERIAL) AND
	      A.COR_MATERIAL LIKE RTRIM(@PCOR_MATERIAL) AND
	      A.FILIAL LIKE RTRIM(@PFILIAL) AND
	      CASE WHEN @PDATA IS NULL THEN 1 ELSE B.EMISSAO END <= ISNULL(@PDATA, 1)

	UNION ALL

	SELECT RTRIM(B.REQ_MATERIAL) + CASE WHEN ISNULL(B.NF_SAIDA, '') = '' THEN '' ELSE '/' END + RTRIM(ISNULL(B.NF_SAIDA, '')) AS DOCUMENTO, B.FILIAL,
	       B.EMISSAO, 'OP:' + RTRIM(ISNULL(A.ORDEM_PRODUCAO, '')) + '/PED:' + RTRIM(ISNULL(A.PEDIDO, '')) + '/OS:' +
	       RTRIM(ISNULL(B.ORDEM_SERVICO, '')) AS ORDEM_PRODUCAO, B.RESPONSAVEL, A.MATERIAL, A.COR_MATERIAL, 'PERDA NA SAIDA' AS TIPO,
	       CONVERT(NUMERIC(20,3),0) AS Q_AUX, -(A.PERDA) AS QTDE, A.CUSTO AS CUSTO, B.NOME_CLIFOR, B.FILIAL_DESTINO AS DESTINO,
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'A' THEN 'SAIDA NORMAL   ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'B' THEN 'SAIDA P/ OP    ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'C' THEN 'TRANSF. DE MP  ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'D' THEN 'VENDAS DE MP   ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'E' THEN 'DEVOLUCAO DE MP' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'F' THEN 'SAIDA PARA OF  ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'H' THEN 'TRANSF. POR OS ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'I' THEN 'SAIDA STQ.TERC.' END END END END END END END END AS TIPO_SAIDA, '2.3' AS ORDEM, A.VALOR,
	       0 AS FRETE_SEGURO_ENCARGO, 0 AS DESCONTO, 0 AS ICMS_VALOR, 0 AS IPI_VALOR, 0 AS COFINS_VALOR, 0 AS PIS_VALOR,
	       0 AS DESP_IMPORT, M.CONTA_CONTABIL_COMPRA, M.CONTA_CONTABIL, M.CONTA_CONTABIL AS CONTA_CONTABIL_MOVIMENTO,
	       NULL AS RATEIO_CENTRO_CUSTO, NULL AS RATEIO_FILIAL, NULL AS NATUREZA, NULL AS DESC_NATUREZA, NULL AS CTB_TIPO_OPERACAO,
	       NULL AS DESC_TIPO_OPERACAO, NULL AS TIPO_OPERACAO, NULL AS DESC_GRUPO_TIPO_OPERACAO, B.NF_ENTRADA, B.SERIE_NF_ENTRADA, NULL AS ESPECIE_SERIE,
	       M.UNID_ESTOQUE, M.CLASSIF_FISCAL, NULL AS CODIGO_FISCAL_OPERACAO, 'S' AS ES
	FROM ESTOQUE_SAI1_MAT AS A (NOLOCK)
	     INNER JOIN ESTOQUE_SAI_MAT AS B (NOLOCK) ON A.REQ_MATERIAL = B.REQ_MATERIAL AND
	                                                 A.FILIAL = B.FILIAL
	     INNER JOIN MATERIAIS AS M (NOLOCK) ON A.MATERIAL=M.MATERIAL
	WHERE A.PERDA <> 0 AND
	      A.MATERIAL LIKE RTRIM(@PMATERIAL) AND
	      A.COR_MATERIAL LIKE RTRIM(@PCOR_MATERIAL) AND
	      A.FILIAL LIKE RTRIM(@PFILIAL) AND
	      CASE WHEN @PDATA IS NULL THEN 1 ELSE B.EMISSAO END <= ISNULL(@PDATA, 1)

	UNION ALL

	SELECT RTRIM(B.REQ_MATERIAL) + CASE WHEN ISNULL(B.NF_ENTRADA, '') = '' THEN '' ELSE '/' END + RTRIM(ISNULL(B.NF_ENTRADA, '')) AS DOCUMENTO,
	       B.FILIAL, ISNULL(ISNULL(C.RECEBIMENTO, B.RECEBIMENTO), B.EMISSAO) AS EMISSAO, A.ORDEM_PRODUCAO, B.RESPONSAVEL,
	       A.MATERIAL, A.COR_MATERIAL, CASE WHEN C.NF_ENTRADA IS NOT NULL THEN 'PERDA NA ENTRADA N.F.' ELSE 'PERDA NO RETORNO' END AS TIPO,
	       CONVERT(NUMERIC(20,3),0) AS Q_AUX, -(A.PERDA) AS QTDE,
	       (
	       CASE WHEN ISNULL(B.TIPO_MOVIMENTACAO, ' ') IN ( 'C', ' ' ) THEN
	          A.CUSTO_ULT_SAIDA
	       ELSE
	          (
	          CASE WHEN A.QTDE > 0 THEN
	             ( ( A.VALOR + (
	             CASE WHEN D.NF_ENTRADA IS NULL THEN
	                - (
	                CASE WHEN F.ABATER_ICMS_NO_MEDIO = 1 THEN
	                   CASE WHEN ISNULL(C.VALOR_TOTAL, 0) <> 0 THEN
	                      A.VALOR / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) * C.ICMS_BASE
	                      * ( CASE WHEN ISNULL(C.ICMS_BASE, 0) <> 0 THEN ( C.ICMS_VALOR / C.ICMS_BASE ) ELSE 0 END )
	                   ELSE
	                      0
	                   END
	                ELSE
	                   0
	                END
	                ) + ( CASE WHEN F.ABATER_IPI_NO_MEDIO = 1 THEN ( A.VALOR * ( F.IPI / 100.0000 ) ) ELSE 0 END ) + (
	                CASE WHEN @UTILIZA_FRETE_SEGURO = 1 THEN
	                   + (
	                   CASE WHEN ISNULL(C.VALOR_TOTAL, 0) <> 0 THEN
	                      ISNULL(( A.VALOR * ( C.FRETE / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0) +
	                      ISNULL(( A.VALOR * ( C.SEGURO / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0) +
	                      ISNULL(( A.VALOR * (
	                               ISNULL(C.VALOR_FRETE_TRANSPORTADORA, 0) / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0)
	                   ELSE
	                      0
	                   END
	                   )
	                ELSE
	                   0
	                END
	                ) + (
	                CASE WHEN ISNULL(C.VALOR_TOTAL, 0) <> 0 THEN
	                   ISNULL(( A.VALOR * ( C.ENCARGO / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0)
	                   - ISNULL(( A.VALOR * ( C.DESCONTO / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0)
	                ELSE
	                   0
	                END
	                )
	             ELSE
	                + (
	                CASE WHEN ISNULL(D.VALOR_ITEM, 0) <> 0 THEN
	                   ISNULL(( A.VALOR * ( D.VALOR_ENCARGOS / D.VALOR_ITEM ) ), 0) -
	                   ISNULL(( A.VALOR * ( D.VALOR_DESCONTOS / D.VALOR_ITEM ) ), 0) +
	                   ISNULL(( A.VALOR * ( D.VALOR_ENCARGOS_IMPORTACAO / D.VALOR_ITEM ) ), 0) +
	                   CASE WHEN C.IMPORTACAO = 0 THEN
	                      - ISNULL(CASE WHEN F.ABATER_ICMS_NO_MEDIO = 1 THEN ( A.VALOR * ( E.VALOR_IMPOSTO_DESTACAR / D.VALOR_ITEM ) ) ELSE 0 END, 0)
	                      - ISNULL(CASE WHEN F.ABATER_IPI_NO_MEDIO = 1 THEN ( A.VALOR * ( E.VALOR_IMPOSTO_AGREGAR / D.VALOR_ITEM ) ) ELSE 0 END, 0)
	                      - ISNULL(CASE WHEN F.ABATER_COFINS_NO_MEDIO = 1 THEN ( A.VALOR * ( E.VALOR_COFINS / D.VALOR_ITEM ) ) ELSE 0 END, 0)
	                      - ISNULL(CASE WHEN F.ABATER_PIS_NO_MEDIO = 1 THEN ( A.VALOR * ( E.VALOR_PIS / D.VALOR_ITEM ) ) ELSE 0 END, 0)
	                   ELSE
	                      0
	                   END
	                ELSE
	                   0
	                END
	                ) + (
	                CASE WHEN @UTILIZA_FRETE_SEGURO = 1 THEN
	                   + (
	                   CASE WHEN ISNULL(C.VALOR_TOTAL, 0) <> 0 THEN
	                      ISNULL(( A.VALOR * ( C.FRETE / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0) +
	                      ISNULL(( A.VALOR * ( C.SEGURO / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0) +
	                      ISNULL(( A.VALOR * (
	                               ISNULL(C.VALOR_FRETE_TRANSPORTADORA, 0) / ( C.VALOR_TOTAL + C.DESCONTO - C.ENCARGO - C.FRETE - C.SEGURO ) ) ), 0)
	                   ELSE
	                      0
	                   END
	                   )
	                ELSE
	                   0
	                END
	                )
	             END ) ) / A.QTDE )
	          ELSE
	             0
	          END
	          )
	       END) AS CUSTO, ISNULL(B.NOME_CLIFOR, '') AS NOME_CLIFOR, ISNULL(C.FILIAL,'') AS DESTINO,
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'A' THEN 'RETORNO NORMAL  ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'B' THEN 'SOBRA DE OP     ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'C' THEN 'RET. SEMI-ACAB. ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'D' THEN 'SOBRA SEMI-ACAB ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'M' THEN 'ENTRADA DE N.F. ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'H' THEN '                ' ELSE
	       CASE WHEN B.TIPO_MOVIMENTACAO = 'F' THEN '                ' END END END END END END END AS TIPO_SAIDA, '1.2' AS ORDEM,
	       A.VALOR, 0 AS FRETE_SEGURO_ENCARGO, 0 AS DESCONTO, 0 AS ICMS_VALOR, 0 AS IPI_VALOR, 0 AS COFINS_VALOR, 0 AS PIS_VALOR,
	       0 AS DESP_IMPORT, M.CONTA_CONTABIL_COMPRA, M.CONTA_CONTABIL, M.CONTA_CONTABIL AS CONTA_CONTABIL_MOVIMENTO,
	       NULL AS RATEIO_CENTRO_CUSTO, NULL AS RATEIO_FILIAL, NULL AS NATUREZA, NULL AS DESC_NATUREZA, NULL AS CTB_TIPO_OPERACAO,
	       NULL AS DESC_TIPO_OPERACAO, NULL AS TIPO_OPERACAO, NULL AS DESC_GRUPO_TIPO_OPERACAO, C.NF_ENTRADA, C.SERIE_NF_ENTRADA, C.ESPECIE_SERIE,
	       M.UNID_ESTOQUE, M.CLASSIF_FISCAL, D.CODIGO_FISCAL_OPERACAO, 'E' AS ES
	FROM ESTOQUE_RET1_MAT AS A (NOLOCK)
	     INNER JOIN ESTOQUE_RET_MAT AS B (NOLOCK) ON A.REQ_MATERIAL = B.REQ_MATERIAL AND
	                                                 A.FILIAL = B.FILIAL
	     LEFT JOIN ENTRADAS AS C (NOLOCK) ON B.NF_ENTRADA = C.NF_ENTRADA AND
	                                         B.SERIE_NF_ENTRADA = C.SERIE_NF_ENTRADA AND
	                                         B.NOME_CLIFOR = C.NOME_CLIFOR
	     INNER JOIN MATERIAIS AS M (NOLOCK) ON A.MATERIAL = M.MATERIAL
	     INNER JOIN CLASSIF_FISCAL AS F (NOLOCK) ON M.CLASSIF_FISCAL = F.CLASSIF_FISCAL
	     LEFT JOIN ( SELECT A.NOME_CLIFOR, A.NF_ENTRADA, A.SERIE_NF_ENTRADA, A.ITEM_IMPRESSAO, A.CONTA_CONTABIL AS CONTA_CONTABIL_MOVIMENTO,
	                        A.RATEIO_CENTRO_CUSTO, A.RATEIO_FILIAL, A.CODIGO_FISCAL_OPERACAO, SUM(A.VALOR_ITEM) AS VALOR_ITEM,
	                        SUM(A.VALOR_ENCARGOS) AS VALOR_ENCARGOS, SUM(A.VALOR_DESCONTOS) AS VALOR_DESCONTOS,
	                        SUM(VALOR_ENCARGOS_IMPORTACAO) AS VALOR_ENCARGOS_IMPORTACAO
	                 FROM ENTRADAS_ITEM AS A (NOLOCK)
	                      INNER JOIN ENTRADAS AS B (NOLOCK) ON A.NOME_CLIFOR = B.NOME_CLIFOR AND
	                                                           A.NF_ENTRADA = B.NF_ENTRADA AND
	                                                           A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA
	                 WHERE A.COD_TABELA_FILHA = 'M' AND
	                       @PUTILIZA_FISCAL = 1
	                 GROUP BY A.NOME_CLIFOR, A.NF_ENTRADA, A.SERIE_NF_ENTRADA, A.ITEM_IMPRESSAO, A.CONTA_CONTABIL, A.RATEIO_CENTRO_CUSTO,
	                 A.RATEIO_FILIAL, A.CODIGO_FISCAL_OPERACAO ) AS D ON D.NOME_CLIFOR = B.NOME_CLIFOR AND
	                                                                     D.NF_ENTRADA = B.NF_ENTRADA AND
	                                                                     D.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA AND
	                                                                     D.ITEM_IMPRESSAO = A.ITEM_IMPRESSAO
	     LEFT JOIN ( SELECT A.NOME_CLIFOR, A.NF_ENTRADA, A.SERIE_NF_ENTRADA, A.ITEM_IMPRESSAO, SUM(A.VALOR_ITEM) AS VALOR_ITEM,
	                        SUM(( CASE WHEN C.ID_IMPOSTO IN ( 1 ) THEN C.VALOR_IMPOSTO_ESPELHO ELSE 0 END )) AS VALOR_IMPOSTO_DESTACAR,
	                        SUM(( CASE WHEN C.ID_IMPOSTO IN ( 2 ) THEN C.VALOR_IMPOSTO_ESPELHO ELSE 0 END )) AS VALOR_IMPOSTO_AGREGAR,
	                        SUM(( CASE WHEN C.ID_IMPOSTO IN ( 6 ) THEN C.VALOR_IMPOSTO_ESPELHO ELSE 0 END )) AS VALOR_COFINS,
	                        SUM(( CASE WHEN C.ID_IMPOSTO IN ( 5 ) THEN C.VALOR_IMPOSTO_ESPELHO ELSE 0 END )) AS VALOR_PIS
	                 FROM ENTRADAS_ITEM AS A (NOLOCK)
	                      INNER JOIN ENTRADAS AS B (NOLOCK) ON A.NOME_CLIFOR = B.NOME_CLIFOR AND
	                                                           A.NF_ENTRADA = B.NF_ENTRADA AND
	                                                           A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA
	                      INNER JOIN ENTRADAS_IMPOSTO AS C ON C.NOME_CLIFOR = A.NOME_CLIFOR AND
	                                                          C.NF_ENTRADA = A.NF_ENTRADA AND
	                                                          C.SERIE_NF_eNTRADA = A.SERIE_NF_ENTRADA AND
	                                                          C.ITEM_IMPRESSAO = A.ITEM_IMPRESSAO AND
	                                                          C.SUB_ITEM_TAMANHO = A.SUB_ITEM_TAMANHO
	                 WHERE A.COD_TABELA_FILHA = 'M' AND
	                       @PUTILIZA_FISCAL = 1
	                 GROUP BY A.NOME_CLIFOR, A.NF_ENTRADA, A.SERIE_NF_ENTRADA, A.ITEM_IMPRESSAO ) AS E ON E.NOME_CLIFOR = D.NOME_CLIFOR AND
                                                                                                         E.NF_ENTRADA = D.NF_ENTRADA AND
                                                                                                         E.SERIE_NF_ENTRADA = D.SERIE_NF_ENTRADA AND
                                                                                                         E.ITEM_IMPRESSAO = D.ITEM_IMPRESSAO
	WHERE A.PERDA <> 0 AND
	      A.MATERIAL LIKE RTRIM(@PMATERIAL) AND
	      A.COR_MATERIAL LIKE RTRIM(@PCOR_MATERIAL) AND
	      A.FILIAL LIKE RTRIM(@PFILIAL) AND
	      CASE WHEN @PDATA IS NULL THEN 1 ELSE ISNULL(ISNULL(C.RECEBIMENTO, B.RECEBIMENTO), B.EMISSAO) END <= ISNULL(@PDATA, 1)

	UNION ALL

	SELECT B.NF_SAIDA, A.FILIAL, B.EMISSAO, '' AS ORDEM_PRODUCAO, '' AS RESPONSAVEL, A.MATERIAL, A.COR_MATERIAL, 'FAT. DEV.' AS TIPO, 
	       ( A.QTDE_AUX * -1 ), ( A.QTDE * -1 ), A.CUSTO, B.NOME_CLIFOR, '' AS DESTINO, 'FAT. DEV.' AS TIPO_SAIDA, '3.0' AS ORDEM,
	       0 AS VALOR, 0 AS FRETE_SEGURO_ENCARGO, 0 AS DESCONTO, 0 AS ICMS_VALOR, 0 AS IPI_VALOR, 0 AS COFINS_VALOR, 0 AS PIS_VALOR, 
	       0 AS DESP_IMPORT, NULL AS CONTA_CONTABIL_COMPRA, NULL AS CONTA_CONTABIL, NULL AS CONTA_CONTABIL_MOVIMENTO, NULL AS RATEIO_CENTRO_CUSTO, 
	       NULL AS RATEIO_FILIAL, NULL AS NATUREZA, NULL AS DESC_NATUREZA, NULL AS CTB_TIPO_OPERACAO, NULL AS DESC_TIPO_OPERACAO, 
	       NULL AS TIPO_OPERACAO, NULL AS DESC_GRUPO_TIPO_OPERACAO, NULL AS NOTA_FISCAL, NULL AS SERIE_NF, NULL AS ESPECIE_SERIE, 
	       '' AS UNID_ESTOQUE, '' AS CLASSIF_FISCAL, NULL AS CODIGO_FISCAL_OPERACAO, 'S' AS ES
	FROM FATURAM_DEV_MAT A
	INNER JOIN FATURAMENTO B ON A.FILIAL = B.FILIAL AND
	                            A.NF_SAIDA = B.NF_SAIDA AND
	                            A.SERIE_NF = B.SERIE_NF
	WHERE A.MATERIAL LIKE RTRIM(@PMATERIAL) AND
	      A.COR_MATERIAL LIKE RTRIM(@PCOR_MATERIAL) AND
	      A.FILIAL LIKE RTRIM(@PFILIAL) AND
	      CASE WHEN @PDATA IS NULL THEN 1 ELSE B.EMISSAO END <= ISNULL(@PDATA, 1)

	UNION ALL

	SELECT B.NOME_CONTAGEM AS DOCUMENTO, B.FILIAL, B.DATA_AJUSTE AS EMISSAO, '' AS ORDEM_PRODUCAO, B.RESPONSAVEL, A.MATERIAL, A.COR_MATERIAL,
	       'AJUSTE' AS TIPO, A.AJUSTE_ESTOQUE_AUX AS Q_AUX, A.AJUSTE_ESTOQUE AS QTDE, CONVERT(NUMERIC(17,5),0) AS CUSTO, '' AS NOME_CLIFOR,
	       '' AS DESTINO, 'AJUSTE' AS TIPO_SAIDA, '3.1' AS ORDEM, 0.00 AS VALOR, 0 AS FRETE_SEGURO_ENCARGO, 0 AS DESCONTO, 0 AS ICMS_VALOR,
	       0 AS IPI_VALOR, 0 AS COFINS_VALOR, 0 AS PIS_VALOR, 0 AS DESP_IMPORT, M.CONTA_CONTABIL_COMPRA, M.CONTA_CONTABIL,
	       M.CONTA_CONTABIL AS CONTA_CONTABIL_MOVIMENTO, NULL AS RATEIO_CENTRO_CUSTO, NULL AS RATEIO_FILIAL, NULL AS NATUREZA, NULL AS DESC_NATUREZA,
	       NULL AS CTB_TIPO_OPERACAO, NULL AS DESC_TIPO_OPERACAO, NULL AS TIPO_OPERACAO, NULL AS DESC_GRUPO_TIPO_OPERACAO, NULL AS NOTA_FISCAL,
	       NULL AS SERIE_NF, NULL AS ESPECIE_SERIE, M.UNID_ESTOQUE, M.CLASSIF_FISCAL, NULL AS CODIGO_FISCAL_OPERACAO, 'A' AS ES
	FROM ESTOQUE_MAT_CTG_ITENS AS A (NOLOCK)
	     INNER JOIN ESTOQUE_MAT_CONTAGEM AS B (NOLOCK) ON A.NOME_CONTAGEM = B.NOME_CONTAGEM
	     INNER JOIN MATERIAIS AS M (NOLOCK) ON A.MATERIAL = M.MATERIAL
	WHERE ( AJUSTE_ESTOQUE <> 0 OR AJUSTE_ESTOQUE_AUX <> 0 ) AND
	      A.MATERIAL LIKE RTRIM(@PMATERIAL) AND
	      A.COR_MATERIAL LIKE RTRIM(@PCOR_MATERIAL) AND
	      B.FILIAL LIKE RTRIM(@PFILIAL) AND
	      CASE WHEN @PDATA IS NULL THEN 1 ELSE B.DATA_AJUSTE END <= ISNULL(@PDATA, 1)
	ORDER BY 6, 7, 3, 1, 15

	OPEN CURCARDEXTEMP

	FETCH NEXT FROM CURCARDEXTEMP INTO @DOCUMENTO, @FILIAL, @EMISSAO, @ORDEM_PRODUCAO, @RESPONSAVEL, @MATERIAL, @COR_MATERIAL, @TIPO, @Q_AUX, @QTDE,
	                                   @CUSTO, @NOME_CLIFOR, @DESTINO, @TIPO_SAIDA, @ORDEM, @VALOR, @FRETE_SEGURO_ENCARGO, @DESCONTO, @ICMS_VALOR,
	                                   @IPI_VALOR, @COFINS_VALOR, @PIS_VALOR, @DESP_IMPORT, @CONTA_CONTABIL_COMPRA, @CONTA_CONTABIL,
	                                   @CONTA_CONTABIL_MOVIMENTO, @RATEIO_CENTRO_CUSTO, @RATEIO_FILIAL, @NATUREZA, @DESC_NATUREZA, @CTB_TIPO_OPERACAO,
	                                   @DESC_TIPO_OPERACAO, @TIPO_OPERACAO, @DESC_GRUPO_TIPO_OPERACAO, @NOTA_FISCAL, @SERIE_NF, @ESPECIE_SERIE,
	                                   @UNIDADE, @CLASSIF_FISCAL, @CFOP, @ES

	SELECT @SALDO_CALC = 0, @SALDO_AUX_CALC = 0, @SEQUENCIA = 1, @Z_MATERIAL = '', @Z_COR_MATERIAL = '', @Z_FILIAL = ''

	WHILE @@FETCH_STATUS = 0
	BEGIN

		IF @Z_MATERIAL <> @MATERIAL OR @Z_COR_MATERIAL <> @COR_MATERIAL OR @Z_FILIAL <> @FILIAL
		BEGIN

			SELECT @SALDO_CALC = 0, @SALDO_AUX_CALC = 0, @Z_MATERIAL = @MATERIAL, @Z_COR_MATERIAL = @COR_MATERIAL,
			       @Z_FILIAL = @FILIAL

		END

		SELECT @SALDO_CALC = ( @SALDO_CALC + @QTDE ), @SALDO_AUX_CALC = ( @SALDO_AUX_CALC + @Q_AUX )

		INSERT INTO @RETCARDEX ( DOCUMENTO, FILIAL, EMISSAO, ORDEM_PRODUCAO, RESPONSAVEL, MATERIAL, COR_MATERIAL, TIPO, Q_AUX, QTDE, CUSTO, SALDO,
	                            SALDO_AUX, NOME_CLIFOR, DESTINO, TIPO_SAIDA, VALOR, FRETE_SEGURO_ENCARGO, DESCONTO, ICMS_VALOR, IPI_VALOR, COFINS_VALOR,
	                            PIS_VALOR, DESP_IMPORT, CONTA_CONTABIL_COMPRA, CONTA_CONTABIL, CONTA_CONTABIL_MOVIMENTO, RATEIO_CENTRO_CUSTO,
	                            RATEIO_FILIAL, NATUREZA, DESC_NATUREZA, CTB_TIPO_OPERACAO, DESC_TIPO_OPERACAO, TIPO_OPERACAO, DESC_GRUPO_TIPO_OPERACAO,
	                            NF_ENTRADA, SERIE_NF, ESPECIE_SERIE, UNIDADE, CLASSIF_FISCAL, CFOP, ES, SEQUENCIA )
		VALUES ( @DOCUMENTO, @FILIAL, @EMISSAO, @ORDEM_PRODUCAO, @RESPONSAVEL, @MATERIAL, @COR_MATERIAL, @TIPO, @Q_AUX, @QTDE, @CUSTO, @SALDO_CALC,
	            @SALDO_AUX_CALC, @NOME_CLIFOR, @DESTINO, @TIPO_SAIDA, @VALOR, @FRETE_SEGURO_ENCARGO, @DESCONTO, @ICMS_VALOR, @IPI_VALOR, @COFINS_VALOR,
	            @PIS_VALOR, @DESP_IMPORT, @CONTA_CONTABIL_COMPRA, @CONTA_CONTABIL, @CONTA_CONTABIL_MOVIMENTO, @RATEIO_CENTRO_CUSTO, @RATEIO_FILIAL,
	            @NATUREZA, @DESC_NATUREZA, @CTB_TIPO_OPERACAO, @DESC_TIPO_OPERACAO, @TIPO_OPERACAO, @DESC_GRUPO_TIPO_OPERACAO, @NOTA_FISCAL, @SERIE_NF,
	            @ESPECIE_SERIE, @UNIDADE, @CLASSIF_FISCAL, @CFOP, @ES, @SEQUENCIA )

		SELECT @SEQUENCIA = ( @SEQUENCIA + 1 )

		FETCH NEXT FROM CURCARDEXTEMP INTO @DOCUMENTO, @FILIAL, @EMISSAO, @ORDEM_PRODUCAO, @RESPONSAVEL, @MATERIAL, @COR_MATERIAL, @TIPO, @Q_AUX, @QTDE,
		                                   @CUSTO, @NOME_CLIFOR, @DESTINO, @TIPO_SAIDA, @ORDEM, @VALOR, @FRETE_SEGURO_ENCARGO, @DESCONTO, @ICMS_VALOR,
		                                   @IPI_VALOR, @COFINS_VALOR, @PIS_VALOR, @DESP_IMPORT, @CONTA_CONTABIL_COMPRA, @CONTA_CONTABIL,
		                                   @CONTA_CONTABIL_MOVIMENTO, @RATEIO_CENTRO_CUSTO, @RATEIO_FILIAL, @NATUREZA, @DESC_NATUREZA, @CTB_TIPO_OPERACAO,
		                                   @DESC_TIPO_OPERACAO, @TIPO_OPERACAO, @DESC_GRUPO_TIPO_OPERACAO, @NOTA_FISCAL, @SERIE_NF, @ESPECIE_SERIE,
		                                   @UNIDADE, @CLASSIF_FISCAL, @CFOP, @ES

	END -- @@FETCH_STATUS = 0 // CURCARDEXTEMP

	CLOSE CURCARDEXTEMP
	DEALLOCATE CURCARDEXTEMP

	RETURN

END
