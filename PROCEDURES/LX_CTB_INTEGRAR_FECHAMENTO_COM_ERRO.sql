USE [DRVAREJO]
GO

/****** Object:  StoredProcedure [dbo].[LX_CTB_INTEGRAR_FECHAMENTO]    Script Date: 01/30/2015 10:26:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[LX_CTB_INTEGRAR_FECHAMENTO] @EMPRESA           INT = NULL, 
                                                    @LANCAMENTO        INT = NULL, 
                                                    @DATA_INICIAL      DATETIME = NULL, 
                                                    @DATA_FINAL        DATETIME = NULL, 
                                                    @LANCAMENTO_PADRAO INT = NULL 

--21/10/2014 - DANIEL/ADRIANO	   - TP 6608081   - 03.14.000 - #11# - CORREÇÃO NO ITEM PARA GERAR O IMPOSTO PARA A FATURA CORRETA
--07/10/2014 - DANIEL/ADRIANO	   - TP 6608081   - 03.14.000 - #10# - CORREÇÃO PARA GERAÇÃO DOS LANCAMENTOS VERIFICANDO POR ITEM.
--12/09/2014 - WENDEL CRESPIGIO  - TP 5101115   - 02.14.002 - #9# - CRIAÇÃO DE INDICES & MELHORIA DE PERFORMANCE.
--01/08/2014 - CARLOS ALBERTO    - TP 5054656   - 02.14.001 - #8# - INCLUSÃO DE BUSCA DE RATEIO DE CENTRO DE CUSTO E FILIAL PELA GRIFE DOS PRODUTOS DA LOJA.
--28/03/2014 - WENDEL CRESPIGIO  - TP 5152303   - 02.14 - #7# - ALTERAÇÃO PARA QUE SEJA FEITO FECHAMENTO COM NOTA MAIS SERIE DE ATE 25 CARACTERES (TAMANHO DE FATURA = 20)
--04/10/2013 - WENDEL CRESPIGIO  - TP 4403144   - #6# - ALTERAÇÃO DO TAMANHO DA SERIE DE 4 PARA 6.
--13/09/2013 - DANIEL GONCALVES  - TP 4260968   - #5# - ALTERADO TAMANHO DO CAMPO SERIE_NF DE 3 PARA 6.
--15/05/2013 - WENDEL CRESPIGIO  - TP 3631035   - #4# - ALTERAÇÃO FEITO POR MARCELO FUSTINI NA FUNCTION FX_ID_ARRECADACAO PASSOU A SOLICITAR MAIS PARÂMETRO FOI PASSADO NULL NA CHAMADA DA FUNCTION.      
--15/04/2013 - WENDEL CRESPIGIO  - TP 3631035   - #3# - ALTERAÇÃO DA FORMA DE INTEGRAÇÃO PASSOU A FAZER A VALIDAÇÃO ANTES DE INTEGRAR , PARA QUE SEJA INTEGRADO DE UMA VEZ SÓ APARTIR DE UMA TEMPORARIA
--27/09/2012 - ALEX BORTOTO      - TP 2628601   - #2# -  ALTERADO PARA BUSCAR A DATA DE EMISSÃO DA NOTA, E INFORMAR NA DATA DE EMISSÃO DO TÍTULO DE RETENÇÃO DE IMPOSTO    
--23/07/2012 - WENDEL CRESPIGIO  - TP 2819858   - #1# - ALTERAÇÃO DO TAMANHO DA NF\SERIE\FATURA\NOTA FISCAL SERIE MINIMO 3
--15/09/2011 - ADRIANO RODRIGUES -  [1652308]         - POSSIBILIDADE DE TER MAIS DE UM RATEIO NA NF, VERIFICAR O RATEIO CENTRO DE CUSTO E DE FILIAL PELO ITEM DA NOTA DE SAIDA
--14/09/2001 - ADRIANO RODRIGUES - ALTERAR @EMPRESA DE TINYINT PARA INT  
--26/04/2011 - DEBORAH - ALTERAÇÃO NAS SELECTS DE ENTRADA E FATURAMENTO, ALTERADO JOIN DE CTB_LANCAMENTO_ITEM PARA CTB_LANCAMENTO      
--14/02/2011 - LETÍCIA - INSERIDO PARÂMETRO @CODIGO_ARRECADACAO NA CHAMADA DA FUNCTION FX_ID_ARRECADACAO      
--13/12/2010 - DEBORAH  - INCLUSÃO CAMPO DATA_APURACAO = @DATA_CONTABIL  
--29/10/2010 - ADRIANO RODRIGUES - PARA NOTAS DE SAIDA ENVIAR A SERIE DA NOTA PARA OS TITULOS GERADOS
--08/06/2010 - DEBORAH    - JOIN COM CTB_LANCAMENTO_ITEM NA SELECT DO CTB_A_PAGAR_FATURA PARA RATEIO DE FILIAIS COM VALORES IGUAIS
--18/01/2010 - JOAO RICARDO - TRATAMENTO DE BUSCA DO CÓDIGO DE ARRECADAÇÃO DA EXCEÇÃO DA NOTA   
--30/11/2009 - JOAO RICARDO - VERIFICANDO O CAMPO ERRADO NO TIPO DE PESSOA  
--27/11/2009 - JOAO RICARDO - ENVIAR O TIPO DE PESSOA PARA A FUNÇÃO FX_ID_ARRECADACAO         
--06/11/2009 - JOAO RICARDO - BUSCAR CODIGO DE ARRECADACAO FIXO         
--11/03/2009 - JOAO RICARDO - TRATAMENTO DE ERRO QUANDO O NR. DO ERRO FORM MENOR QUE 130000       
--04/12/2008 - JOAO RICARDO - CORREÇÃO PARA GERAR O LTC POR TERCEIRO  
--03/12/2008 - JOAO RICARDO - RETIRADO O ENVIO DO EMAIL   
--23/10/2008 - JOAO RICARDO - RETIRADA ALGUMAS OPÇÕES DA GERAÇÃO DA CONTRAPARTIDA         
--18/08/2008 - JOAO RICARDO - QUANDO ESTOURA ORÇAMENTO MARCAR LANÇAMENTO COM 9 NO GERADO_INTEGRACAO
--18/07/2008 - JOAO RICARDO - QUANDO GERAR ITP DE IMPOSTO VERIFICAR SE JÁ EXISTE UM GERADO E BAIXADO 
--13/05/2008 - JOAO RICARDO - QUANDO O IMPOSTO FOR 103 GERAR O ITR NO TERCEIRO DO LANÇAMENTO PADRÃO
--08/05/2008 - JOAO RICARDO - CORRIGIDO PROBLEMA PARA GERAR O ITP DE IMPOSTO   
--29/01/2008 - JOAO RICARDO - GRAVAR O ID_DADOS_ARRECADACAO NO ITP GERADO   
--28/01/2008 - JOAO RICARDO - PROBLEMA PARA ITP DE IMPOSTO QUANDO JÁ EXISTE OUTRO ITP DE IMPOSTO BAIXADO. 
--06/11/2007 - JOAO RICARDO - SE NO LANÇAMENTO PADRÃO ESTIVER INDICANDO QUE O RATEIO DE FILIAL É FIXO COLOCAR A FILIAL DO DOCUMENTO 
--06/11/2007 - JOAO RICARDO - UTILIZAR O TERCEIRO DA LOJA TAMBÉM PARA IRS e IRE   
--06/11/2007 - JOAO RICARDO - QUANDO FOR DVC E A CONTA EXIGIR TERCEIRO COLOCAR DDD  
--06/11/2007 - JOAO RICARDO - COLOCADO UM DISTINCT NOS CLIENTE DE LOJAS  
--12/09/2007 - JOAO RICARDO - NO UPDATE NÃO ESTAVA GRAVANDO CORRETAMENTE OS CAMPOS CREDITO_MOEDA E DEBITO_MOEDA
--17/08/2007 - SERGIO    - RETIRAR FUNCAO SYSTEM_USER  
--07/08/2007 - ADRIANO    - COLOCAR A TRANSAÇÃO FORA DO WHILE, NO CASO DE ALGUM ERRO DAR ROLLBACK EM TODOS LANÇAMENTOS
--18/06/2007 - JOAO RICARDO - COLOCAR NOVO PARAMETRO DA FUNÇÃO FX_ID_ARRECADACAO   
--01/06/2007 - JOAO RICARDO - GERAR ITP DE IMPOSTO QUANDO A NOTA É DE FATURAMENTO   
--09/05/2007 - JOAO RICARDO - GRAVAR A CIDADE QUANDO INCLUI O TERCEIRO   
--18/04/2007 - JOAO RICARDO - NO UPDATE ESTAVA PERDENDO O VALOR ANTERIOR   
--06/11/2006 - JOAO RICARDO - TRATAMENTO DPARA NOVA TABELA LOJA_NOTA_FISCAL   
--17/08/2006 - JOAO RICARDO - PROBLEMA PARA GERAR O ITR - NÃO ENCONTRAVA O COD_CLIFOR  
--16/08/2006 - JOAO RICARDO - BUSCA DO TÍTULO DE IMPOSTO BAIXADO TAMBÉM POR VALOR PARA NÃO OCORRER DUPLICIDADE 
--08/08/2006 - JOAO RICARDO - GRAVAR O CAMPO FATURA_SERIE NO ITP DE IMPOSTO  
--24/07/2006 - JOAO RICARDO - NÃO VERIFICAR SE O LANÇAMENTO PADRÃO ESTÁ INATIVO   
--20/05/2006 - JOAO RICARDO - AUMENTAR A VARIAVEL @CHISTORICO PARA 250   
--16/05/2006 - JOAO RICARDO - GERAR ITR DE IMPOSTO PARA COBRA DO CLIENTE  
--14/03/2006 - joao ricardo - nas notas de entrada estava pegando o rateio_filial da cabeça e não do item da nota. 
--01/03/2006 = JOAO RICARDO - INCLUIR O PERMITE ALTERAÇÃO NOS TÍTULOS DE IMPOSTO   
--15/02/2006 - JOAO RICARDO - O CMT NÃO ESTAVA GERANDO NO TERCEIRO CORRETO   
--13/02/2006 - JOAO RICARDO - CADASTRAR TERCEIRO QUANDO VMS INDICA CADASTRAR   
--09/02/2006 - JOAO RICARDO - NUMERO DA FATURA DO IMPOSTO COMO FATURA+SEQUENCIAL  
--04/01/2006 - JOAO RICARDO - OUTRA MELHORA DE PERFORMANCE   
--04/01/2006 - JOAO RICARDO - MELHORA DE PERFORMANCE   
--13/12/2005 - JOAO RICARDO - PROBLEMA NO RESULTADO DA VARIAVEL @CRESULT, QUANDO NÃO RODAVA A PROCEDURE MANTINHA O VALOR ANTERIOR  
--16/11/2005 - JOAO RICARDO - BUSCAR BASE DO VENCIMENTO DO TÍTULO DE IMPOSTO POR EMISSÃO CONFORME OPÇÃO NA TABELA LF_DADOS_ARRECADACAO.TIPO_BASE_VENCIMENTO = 4 
--10/10/2005 - JOAO RICARDO - QUANDO A CONTA NÃO ERA DIFERENTE DA MOEDA_PADRAO ESTAVA MANTENDO A DA CONTA ANTERIOR 
--04/10/2005 - JOAO RICARDO - TRATAR QUANDO GERAR O ITP DE IMPOSTO DATA BASE A DATA DE VENCIMENTO DA PRIMEIRA PARCELA
--15/09/2005 - JOAO RICARDO - VERIFICAR O TIPO DE CONTA SE EXIGE TERCEIRO E MUDAR O TIPO DE LANÇAMENTO QUE ESTÁ VINDO NO LANÇAMENTO PADRÃO 
--13/09/2005 - JOAO RICARDO - GRAVAR O CAMPO INDICA_SACADO_PRINCIPAL NA TABELA CTB_AVISO_LANCAMENTO
--13/09/2005 - JOAO RICARDO - GRAVAR O CAMPO INDICA_SACADO_PRINCIPAL NA TABELA CTB_A_PAGAR_FATURA 
--12/09/2005 - JOAO RICARDO - GRAVAR O ITP DE IMPOSTOS COM O CODIGO SACADO NO LANÇAMENTO CONTÁBIL 
--08/09/2005 - JOAO RICARDO - GERAR AVISO DE DEBITO PARA IMPOSTOS   
--06/09/2005 - JOAO RICARDO - ERRO NO SELECT PARA FAZER O TRATAMENTO DO TIPO DA CONTA   
--06/09/2005 - JOAO RICARDO - QUANDO FORM CMS E O TIPO DE CONTA EXIGIR TERCEIRO USAR O TIPO DE LANCAMENTO CMT 
--25/08/2005 - joão ricardo - ERRO NO TRATAMENTO DA MOEDA   
--24/08/2005 - JOÃO RICRADO - TRATAMENTO DE MOEDAS QUANDO A CONTA ESTÁ  EM DOLAR  
--15/08/2005 - JOÃO RICARDO - COLOCAR LEFT JOIN COM A TABELA DE CTB_HIST_PADRAO   
--10/08/2005 - JOÃO RICARDO - MUDAR A ORDEM NA TROCA DA VARIAVEIS DAS FORMULAS   
--09/08/2005 - JOÃO RICARDO - INCLUIR O CAMPO COD_CLIFOR DE  LANCAMENTO PADRAO ITEM   
--08/07/2005 - JOÃO RICARDO - INCLUIR O CAMPO CONTA_CONTABIL_MOVIMENTO PARA BUSCAR O IMPOSTO DA LOJA POR CONTA
--30/06/2005 - JOÃO RICARDO - NO ITP DE IMPOSTO INCLUIR CONTA PORTADOR IGUAL A CONTA CONTABIL   
--17/06/2005 - JOÃO RICARDO - NÃO RECRIAR ITP DO IMPOSTO SE JÁ EXISTIR  
--15/06/2005 - joão ricardo - FX_ID_ARRECADACAO - alteração nos parametros  
--06/06/2005 - SERGIO    - RETIRADO COMANDO SELECT @ID_IMPOSTO_LANC_PADRAO, QUE CAUSAVA UM UPDATE CONFLICT AO CANCELAR NFS NO CLIENTE PASMANIK
--18/05/2005 - JOÃO RICARDO - SENÃO EXISTIR CONTA NO LANÇAMENTO PADRÃO , BUSCAR A CONTA DO DADOS ARRECADAÇÃO PARA GERAR ITP DE IMPOSTO  
--15/04/2005 - JOÃO RICARDO - PARA ATUALIZAR A TABELA DE ENTRADAS COMO O LANÇAMENTO DE ITP DOS IMPOSTOS  
--29/03/2005 - SERGIO    - ALTERAÇÃO NO COLLATE PARA DATABASE_DEFAULT  
--14/02/2005 - JOÃO RICARDO - PROBLEMA PARA BUSCAR O IMPOSTO POR TERCEIRO  
--08/12/2004 - JOÃO RICARDO - ESTAVA DUPLICANDO O LANCAMENTO PADRÃO  
--03/12/2004 - JOÃO RICARDO - NÃO ESTAVA BUSCANDO POR NUMERO_CONFERFENCIA  
--03/12/2004 - JOÃO RICARDO - DIMINUIR O TAMANHO DAS VARIAVEIS DAS FORMULAS  
--02/12/2004 - JOÃO RICARDO - INCLUSÃO DO TRATAMENTO DO RATEIO DE FILIAL NAS FORMULAS   
--30/11/2004 - JOÃO RICARDO - PROBLEMA QUANDO TINHA LANCAMENTO PADRÃO DE IMPOSTOS COM A MESMA CONTA
--17/11/2004 - JoÃO RICARDO - NÃO GERAR CONTRAPARTIDA DE LANCAMENTOS QUE TENHAM O LOTE COM TIPO_LOTE = 01
--17/11/2004 - JoÃO RICARDO - PROBLEMA NO HISTORICO NA INCLUSÃO DO ITP DO IMPOSTO AUTOMATICO  
--12/11/2004 - JoÃO RICARDO - INCLUSÃO DO ITP DO IMPOSTO AUTOMATICO  
--27/10/2004 - JOÃO RICARDO - NÃO ESTAVA PEGANDO O CENTRO DE CUSTO DA TABELA FATURAMENTO , PARA DIVIDIR EM VÁRIAS CONTRAPARTIDAS POR CENTRO DE CUSTO
--15/10/2004 - JOÃO RICARDO - MELHORA DE PERFORMANCE  
--09/09/2004 - JOÃO RICARDO - NÃO TRAZER NOTA CANCELADA  
--30/08/2004 - JOÃO RICARDO - AJUSTE PARA O LANÇAMENTO COM TERCEIRO.  
--17/08/2004 - JOÃO RICARDO - FAZER POR TERCEIRO QUANDO O TIPO DE LANÇAMENTO EXIGIR  
--10/08/2004 - JOÃO RICARDO - PROBLEMA NA TROCA DAS VARIAVEIS DA FORMULA.  
--23/07/2004 - JOÃO RICARDO - NÃO ESTAVA BUSCANDO PELO RATEIO QUANDO BUSCAVA O ITEM PARA FAZER O LANÇAMENTO.
--16/07/2004 - JOÃO RICARDO - QUANDO TROCAVA A FORMULA ESTAVA MANDANDO OS CAMPOS CONTA_CONTABIL E RATEIO_CENTRO_CUSTO COMO NUMERICO, EXEMPLO VINHA O RATEIO 002 E QUANDO MANDAVA PARA FUNCTION MANDAVA 2.
--01/07/2004 - JOÃO RICARDO - PROBLEMA PARA TROCAR AS VARIÁVEIS QUANDO ESTAVA NULL  
--21/06/2004 - FELIPE     - TRATAMENTO DO RATEIO CENTRO CUSTO POR ITEM  
--21/06/2004 - FELIPE     - AS FORMULAS TB PODEM RECEBER PARAMETROS ABREVIADOS  
-- @EMP      = EMPRESA  
-- @LANC    = LANCAMENTO  
-- @CONTA_CTB  = CONTA CONTABIL  
-- @RAT_CC    = RATERIO CENTRO CUSTO  
-- @IMP      = IMPOSTO  
--20/02/2004 - FELIPE     - TRATAMENTO DO NUMERO CONFERENCIA  
--26/01/2004 - JOÃO RICARDO - INCLUIR FILTRO POR DATA DE LANCAMENTO, LANCAMENTO_PADRAO   
--20/01/2004 - JOÃO RICARDO - ANTES DE GERAR O LANCAMENTO LVZ, VERIFICAR NA TABELA FATURAMENTO_IMPOSTO SE EXISTE O IMPOSTO 15 
--20/01/2004 - JOÃO RICARDO - @CLX_TIPO_LANCAMENTO = 'LVZ' ACEITAR LANCAMENTO ITEM COM VALOR ZERO (ESPANHA)
--03/12/2003 - JOÃO RICARDO - NO SELECT DO CURSOR COLOQUEI UMA VALIDAÇÃO9 COMA A TABELA CTB_LANCAMENTO_ITEM, 
--                    ESTAVA TENTANDO RODAR O BATCH E NEM EXITIA O LANCAMENTO_ITEM  
--20/09/2003 - ALTERADO A FORMA DE CALCULO DE ITENS ABERTO POR CONTA_CONTABIL  
--01/09/2003 - FELIPE     - RETIRADA A REFERENCIA A IMPOSTO LANCAMENTO  
--20/08/2003 - ALESSANDRO   - PROBLEMA COM O ITEM CONTÁBIL E O CAMPO RATEIO_FILIAL  
--04/07/2003 - FELIPE  
--VERSAO 28/03/2003 - FELIPE  
AS 
    SET NOCOUNT ON; 

    DECLARE @NLANCAMENTO                      INT, 
            @NEMPRESA                         INT, 
            @NLANCAMENTO_PADRAO               INT, 
            @NTIPO_MOVIMENTO                  TINYINT, 
            @CLX_TIPO_LANCAMENTO              CHAR(3), 
            @CCONTA_CONTABIL                  CHAR(20), 
            @CCODIGO_HISTORICO                CHAR(4), 
            @CRATEIO_CENTRO_CUSTO             VARCHAR(15), 
            @NPERMITE_ALTERACAO               TINYINT, 
            @CFORMULA                         NVARCHAR(1000), 
            @CFORMULA_ITEM                    NVARCHAR(1000), 
            @CCREDITO_DEBITO                  CHAR(1), 
            @NINDICA_ID_CONTABIL_TERCEIRO     TINYINT, 
            @CCOD_CLIFOR                      CHAR(6), 
            @NCREDITO                         NUMERIC(14, 2), 
            @NDEBITO                          NUMERIC(14, 2), 
            @NCAMBIO                          REAL, 
            @CHISTORICO                       VARCHAR(250), 
            @CMOEDA                           CHAR(6), 
            @NDEBITO_MOEDA                    NUMERIC(14, 2), 
            @NCREDITO_MOEDA                   NUMERIC(14, 2), 
            @NVALOR                           NUMERIC(14, 2), 
            @CRESULT                          NVARCHAR(1000), 
            @CMOEDA_PADRAO                    CHAR(6), 
            @NFATOR                           TINYINT, 
            @NITEM                            SMALLINT, 
            @NITEM_CUR                        SMALLINT, 
            @CRATEIO_FILIAL                   VARCHAR(15), 
            @MOVIMENTO_PADRAO                 TINYINT, 
            @TIPO_MOVIMENTO_LANC              TINYINT, 
            @ID_CONTRAPARTIDA                 TINYINT, 
            @CTIPOLANCPRINCIPAL               CHAR(3), 
            @ID_IMPOSTO_LANC_PADRAO           INT, 
            @FILIAL_NOTA                      VARCHAR(25), 
            @UF                               VARCHAR(2), 
            @COD_MATRIZ_FISCAL_CUR            VARCHAR(6), 
            @ID_DADOS_ARRECADACAO_CUR         INT, 
            @LX_TIPO_DOCUMENTO                VARCHAR(3), 
            @COD_CLIFOR_ARRECADACAO           VARCHAR(6), 
            @COD_CLIFOR_SACADO_CUR            VARCHAR(6), 
            @DATA_CONTABIL                    DATETIME, 
            @IMPOSTO                          VARCHAR(40), 
            --@FATURA                  VARCHAR(12),#1#  
            @FATURA                           VARCHAR(25),/*#7#*/ 
            --@FATURA_OLD                VARCHAR(12),#1#  
            @FATURA_OLD                       VARCHAR(25),/*#7#*/ 
            @CONTA_CONTABIL                   VARCHAR(20), 
            @CONTRAPARTIDA                    VARCHAR(20), 
            @TIPO_VENCIMENTO                  VARCHAR(2), 
            @CODIGO_ARRECADACAO               VARCHAR(20), 
            @VENCIMENTO_CUR                   DATETIME, 
            @DIAS_UTEIS                       INT, 
            @NOME_CLIFOR_IMPOSTO              VARCHAR(25), 
            @RATEIO_FILIAL_CUR                VARCHAR(15), 
            @CONTA_MOVIMENTO_CUR              VARCHAR(20), 
            @COD_FILIAL_LANC                  VARCHAR(6), 
            @MOEDA_PADRAO                     VARCHAR(6), 
            @DATA_CAMBIO                      DATETIME, 
            @MOEDA_CONTA                      VARCHAR(6), 
            @CAMBIO                           DECIMAL(19, 6), 
            @INDICA_SACADO_PRINCIPAL          BIT, 
            @TIPO_BASE_VENCIMENTO             TINYINT, 
            @VENC_TIT                         DATETIME, 
            @EMISSAO_NOTA                     DATETIME, 
            @SEQ_FATURA_IMPOSTO               INT, 
            @CADASTRAR_TERCEIRO_CUR           BIT, 
            @CODIGO_CLIENTE_CUR               VARCHAR(14), 
            @COD_CLIFOR_NOVO                  VARCHAR(6), 
            @ESTADO_PADRAO                    VARCHAR(2), 
            @TIPO_VAREJO                      VARCHAR(30), 
            @COND_PGTO_PADRAO                 VARCHAR(3), 
            @REGIAO_PADRAO                    VARCHAR(25), 
            @TRANSPORTADORA_PADRAO            VARCHAR(25), 
            @CONCEITO_PADRAO                  VARCHAR(25), 
            @TIPO_PADRAO                      VARCHAR(25), 
            @TIPO_BLOQUEIO_PADRAO             VARCHAR(25), 
            @FILIAL_PADRAO                    VARCHAR(25), 
            @PONTUALIDADE_PADRAO              VARCHAR(30), 
            @CONTA_CONTABIL_CLI               VARCHAR(20), 
            @PAIS_PADRAO                      VARCHAR(30), 
            @SEQUENCIA                        VARCHAR(20), 
            @INDICADOR_FISCAL_TERCEIRO_VAREJO TINYINT, 
            @FILIAL                           VARCHAR(25), 
            @FATURA_SERIE                     VARCHAR(6),-- #6#  
            @ENTRADA_SAIDA                    VARCHAR(1), 
            @LXUSUARIO                        VARCHAR(25), 
            @INDICA_RATEIO_FIXO_CUR           BIT, 
            @RATEIO_FILIAL_FILTRO             VARCHAR(15), 
            @MESSAGE                          VARCHAR(1000), 
            @ERROR_NR                         INT, 
            @ID_DADOS_ARRECADACAO_LANC_CUR    INT, 
            @TIPO_PESSOA                      CHAR(1), 
            @EMISSAO_NF                       DATETIME,--#2#  
            @USA_RATEIO_GRIFFE_FAT_ENT        BIT; 

    --#8#  
    SELECT @USA_RATEIO_GRIFFE_FAT_ENT = 0; 

    SELECT @USA_RATEIO_GRIFFE_FAT_ENT = CASE 
                                          WHEN ISNULL(VALOR_ATUAL, '.F.') = '.T.' THEN 1 
                                          ELSE 0 
                                        END 
    FROM   PARAMETROS 
    WHERE  PARAMETRO = 'USA_RATEIO_GRIFFE_FAT_ENT'; 

    SELECT @LXUSUARIO = USUARIO 
    FROM   USERS 
    WHERE  LX_SYSTEM_USER = SYSTEM_USER; --#3#  

    SELECT @MOVIMENTO_PADRAO = CONVERT(TINYINT, VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'MOVIMENTO_PADRAO'; 

    SELECT @MOEDA_PADRAO = MOEDA 
    FROM   MOEDAS (NOLOCK) 
    WHERE  INDICA_PADRAO = 1; 

    SELECT @SEQ_FATURA_IMPOSTO = 0; 

    SELECT @CONTA_CONTABIL_CLI = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'CONTA_CONTABIL_CLI'; --#3#  
    SELECT @TIPO_VAREJO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'TIPO_VAREJO_IMPORTA'; --#3#  
    SELECT @COND_PGTO_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'cond_atac_pgto_padrao'; --#3#  
    SELECT @REGIAO_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'REGIAO_PADRAO'; --#3#  
    SELECT @TRANSPORTADORA_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'TRANSPORTADORA_PADRAO'; --#3#  
    SELECT @CONCEITO_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'CONCEITO_CLI_ATAC_PADRAO'; --#3#  
    SELECT @TIPO_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'TIPO_CLI_ATAC_PADRAO'; --#3#  
    SELECT @TIPO_BLOQUEIO_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'TIPO_BLOQUEIO_PADRAO'; --#3#  
    SELECT @FILIAL_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'FILIAL_PADRAO'; --#3#  
    SELECT @PONTUALIDADE_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'PONTUALIDADE_PADRAO'; --#3#  
    SELECT @ESTADO_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'ESTADO_PADRAO'; --#3#  
    SELECT @PAIS_PADRAO = Rtrim(VALOR_ATUAL) 
    FROM   PARAMETROS (NOLOCK) 
    WHERE  PARAMETRO = 'PAIS_PADRAO'; --#3#  

; 
    IF (SELECT Object_id('TEMPDB..#CADASTRO_CLI_FOR')) IS NOT NULL 
      BEGIN 
          DROP TABLE #CADASTRO_CLI_FOR 
      END; 

; 
    CREATE TABLE [DBO].#CADASTRO_CLI_FOR 
      ( 
         [NOME_CLIFOR]                 [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [CARTEIRA]                    [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [BANCO]                       [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [CONTA_CONTABIL]              [CHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [CLIFOR]                      [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [CGC_CPF]                     [VARCHAR](19) COLLATE DATABASE_DEFAULT NULL, 
         [RAZAO_SOCIAL]                [VARCHAR](90) COLLATE DATABASE_DEFAULT NULL, 
         [PJ_PF]                       [BIT] NULL, 
         [RG_IE]                       [VARCHAR](19) COLLATE DATABASE_DEFAULT NULL, 
         [CEP]                         [VARCHAR](9) COLLATE DATABASE_DEFAULT NULL, 
         [ENDERECO]                    [VARCHAR](90) COLLATE DATABASE_DEFAULT NULL, 
         [BAIRRO]                      [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [CIDADE]                      [VARCHAR](35) COLLATE DATABASE_DEFAULT NULL, 
         [UF]                          [CHAR](2) COLLATE DATABASE_DEFAULT NULL, 
         [TELEFONE1]                   [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [PAIS]                        [VARCHAR](35) COLLATE DATABASE_DEFAULT NULL, 
         [DDI]                         [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [TELEFONE2]                   [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [FAX]                         [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [DDD1]                        [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [RAMAL1]                      [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [RAMAL2]                      [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [DDD2]                        [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_ENDERECO]           [VARCHAR](90) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_CIDADE]             [VARCHAR](35) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_BAIRRO]             [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [DDDFAX]                      [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_UF]                 [CHAR](2) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_CEP]                [VARCHAR](9) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_TELEFONE]           [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_ENDERECO]            [VARCHAR](90) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_CIDADE]              [VARCHAR](35) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_UF]                  [CHAR](2) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_BAIRRO]              [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_CEP]                 [VARCHAR](9) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_TELEFONE]            [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_DDD]                [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [CONTATO]                     [VARCHAR](40) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_CGC]                [VARCHAR](19) COLLATE DATABASE_DEFAULT NULL, 
         [CADASTRAMENTO]               [DATETIME] NULL, 
         [COBRANCA_IE]                 [VARCHAR](19) COLLATE DATABASE_DEFAULT NULL, 
         [ANIVERSARIO]                 [DATETIME] NULL, 
         [INDICA_FORNECEDOR]           [BIT] NULL, 
         [INDICA_CLIENTE]              [BIT] NULL, 
         [IND_REPRESENTANTE]           [BIT] NULL, 
         [INDICA_FILIAL]               [BIT] NULL, 
         [ENTREGA_DDD]                 [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_CGC]                 [VARCHAR](19) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_IE]                  [VARCHAR](19) COLLATE DATABASE_DEFAULT NULL, 
         [CC_AGENCIA]                  [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [CC_CONTA]                    [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [CC_NOME_AGENCIA]             [VARCHAR](30) COLLATE DATABASE_DEFAULT NULL, 
         [REF_ANTERIOR]                [CHAR](7) COLLATE DATABASE_DEFAULT NULL, 
         [ATUALIZACAO_EXPORTAR]        [DATETIME] NULL, 
         [DATA_EXPORTACAO]             [DATETIME] NULL, 
         [EMAIL]                       [VARCHAR](100) COLLATE DATABASE_DEFAULT NULL, 
         [STATUS_ENVIO]                [CHAR](1) COLLATE DATABASE_DEFAULT NULL, 
         [INATIVO]                     [BIT] NULL, 
         [DATA_PARA_TRANSFERENCIA]     [DATETIME] NULL, 
         [ENTREGA_PAIS]                [VARCHAR](35) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_PAIS]               [VARCHAR](35) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_DDI]                 [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_DDI]                [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [OBS_DE_FATURAMENTO]          [TEXT] NULL, 
         [ISENTO_IPI]                  [BIT] NULL, 
         [ISENTO_ICMS]                 [BIT] NULL, 
         [IRRF]                        [NUMERIC](8, 5) NULL, 
         [MESES_SEM_VENCIMENTO]        [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [DATA_FIXA_PGTO]              [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [ACEITA_AGRUPAR_FATURA]       [SMALLINT] NULL, 
         [PASSWEB]                     [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [VENCIMENTO_PASSWEB]          [DATETIME] NULL, 
         [NUMERO_VIAS_FATURA]          [SMALLINT] NULL, 
         [REPORT_FATURA]               [CHAR](9) COLLATE DATABASE_DEFAULT NULL, 
         [DIAS_ANTECIPACAO_PGTO]       [SMALLINT] NULL, 
         [POSSUI_RECARGO]              [TINYINT] NULL, 
         [CODIGO_CHAVE]                [CHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [TIPO_RELACAO_COMERCIAL]      [SMALLINT] NULL, 
         [ID_CLASIF_CLIFOR]            [INT] NULL, 
         [ENTREGA_RAZAO_SOCIAL]        [VARCHAR](90) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_RAZAO_SOCIAL]       [VARCHAR](90) COLLATE DATABASE_DEFAULT NULL, 
         [ACEITA_DIAS_FIXO]            [BIT] NULL, 
         [COD_CLIFOR]                  [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [CTB_CONTA_CONTABIL]          [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [INDICADOR_FISCAL_TERCEIRO]   [TINYINT] NULL, 
         [ID_EXCECAO_GRUPO]            [INT] NULL, 
         [AGRUPAMENTO_ITENS]           [SMALLINT] NULL, 
         [CODIGO_CONTATO]              [CHAR](8) COLLATE DATABASE_DEFAULT NULL, 
         [IM]                          [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL, 
         [IM_ENTREGA]                  [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL, 
         [IM_COBRANCA]                 [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL, 
         [CADASTRO_CLI_FOR]            [CHAR](9) COLLATE DATABASE_DEFAULT NULL, 
         [INSCRICAO_SUFRAMA]           [CHAR](9) COLLATE DATABASE_DEFAULT NULL, 
         [NUMERO]                      [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [COMPLEMENTO]                 [VARCHAR](60) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_NUMERO]             [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [COBRANCA_COMPLEMENTO]        [VARCHAR](60) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_NUMERO]              [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [ENTREGA_COMPLEMENTO]         [VARCHAR](60) COLLATE DATABASE_DEFAULT NULL, 
         [CNAE]                        [VARCHAR](7) COLLATE DATABASE_DEFAULT NULL, 
         [IEST]                        [VARCHAR](14) COLLATE DATABASE_DEFAULT NULL, 
         [INCL_AUTO_GRP_ECON]          [BIT] NULL, 
         [COD_MUNICIPIO_IBGE]          [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [COD_MUNICIPIO_IBGE_COBRANCA] [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [COD_MUNICIPIO_IBGE_ENTREGA]  [VARCHAR](10) COLLATE DATABASE_DEFAULT NULL, 
         [EMAIL_NFE]                   [VARCHAR](100) COLLATE DATABASE_DEFAULT NULL, 
         [CODIGO_SPC]                  [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [ENVIADO_SPC]                 [BIT] NULL, 
         [LX_STATUS_REGISTRO]          [INT] NULL 
      ); 

    --Wendel - Criação de index nas temps melhoria de performance. #9#  
    CREATE NONCLUSTERED INDEX [IDX_VILA_CLIFOR1] 
      ON [DBO].#CADASTRO_CLI_FOR ( [NOME_CLIFOR] ASC, [UF] ASC, [CLIFOR] ASC, [COD_CLIFOR] ASC, [CTB_CONTA_CONTABIL] ASC )
      WITH FILLFACTOR = 100; 

    CREATE UNIQUE NONCLUSTERED INDEX [XAK1CADASTRO_CLI_FOR1] 
      ON [DBO].#CADASTRO_CLI_FOR ( [CLIFOR] ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE UNIQUE NONCLUSTERED INDEX [XAK2CADASTRO_CLI_FOR1] 
      ON [DBO].#CADASTRO_CLI_FOR ( [COD_CLIFOR] ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XAK3CADASTRO_CLI_FOR1] 
      ON [DBO].#CADASTRO_CLI_FOR ( [CLIFOR] ASC, [UF] ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XI11_CADASTRO_CLI_FOR1] 
      ON [DBO].#CADASTRO_CLI_FOR ( [COD_CLIFOR] ASC, [CGC_CPF] ASC, [RAZAO_SOCIAL] ASC, [RG_IE] ASC, [ENDERECO] ASC )
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE1CADASTRO_CLI_FOR1] 
      ON [DBO].#CADASTRO_CLI_FOR ( [RAZAO_SOCIAL] ASC) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE2CADASTRO_CLI_FOR1] 
      ON [DBO].#CADASTRO_CLI_FOR ( [RG_IE] ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE3CADASTRO_CLI_FOR1] 
      ON [DBO].#CADASTRO_CLI_FOR ( [CGC_CPF] ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE5_COVER_CADASTRO_CLIFOR1] 
      ON [DBO].#CADASTRO_CLI_FOR ( [NOME_CLIFOR] ASC, [UF] ASC, [PAIS] ASC, [COD_CLIFOR] ASC ) 
      WITH FILLFACTOR = 100; 

    --2º #3#  
    IF (SELECT Object_id('TEMPDB..#CLIENTES_ATACADO')) IS NOT NULL 
      BEGIN 
          DROP TABLE #CLIENTES_ATACADO 
      END; 

    CREATE TABLE [DBO].#CLIENTES_ATACADO 
      ( 
         [CLIENTE_ATACADO]               [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [COD_CLIENTE]                   [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [CONDICAO_PGTO]                 [CHAR](3) COLLATE DATABASE_DEFAULT NULL, 
         [REGIAO]                        [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [MATRIZ_CLIENTE]                [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [FILIAL]                        [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [PONTUALIDADE]                  [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [TRANSPORTADORA]                [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [CONCEITO]                      [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [TIPO]                          [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [TIPO_BLOQUEIO]                 [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [CGC_CPF]                       [VARCHAR](19) COLLATE DATABASE_DEFAULT NULL, 
         [CLIFOR]                        [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [FRETE_A_PAGAR]                 [TINYINT] NULL, 
         [PRIORIDADE]                    [INT] NULL, 
         [SEM_CREDITO]                   [BIT] NULL, 
         [LIMITE_CREDITO]                [NUMERIC](14, 2) NULL, 
         [BLOQUEIO_EXPEDICAO]            [DATETIME] NULL, 
         [BLOQUEIO_FATURAMENTO]          [DATETIME] NULL, 
         [ACEITA_JUNTAR_PED]             [BIT] NULL, 
         [BLOQUEIO_PEDIDOS]              [DATETIME] NULL, 
         [NUMERO_PEDIDOS]                [INT] NULL, 
         [DATA_MAIOR_PEDIDO]             [DATETIME] NULL, 
         [MAIOR_PEDIDO]                  [NUMERIC](14, 2) NULL, 
         [DATA_MAIOR_QTDE_PEDIDO]        [DATETIME] NULL, 
         [MAIOR_QTDE_PEDIDO]             [INT] NULL, 
         [MAIOR_SALDO]                   [NUMERIC](14, 2) NULL, 
         [DATA_MAIOR_SALDO]              [DATETIME] NULL, 
         [NUMERO_ATRASOS]                [INT] NULL, 
         [MAIOR_ATRASO]                  [INT] NULL, 
         [PGTOS_CARTORIO]                [INT] NULL, 
         [NUMERO_DEVOLUCOES]             [INT] NULL, 
         [DATA_MAIOR_DEVOLUCAO]          [DATETIME] NULL, 
         [MAIOR_DEVOLUCAO]               [NUMERIC](14, 2) NULL, 
         [DATA_MAIOR_QTDE_DEV]           [DATETIME] NULL, 
         [MAIOR_QTDE_DEV]                [INT] NULL, 
         [NUMERO_PRORROGACOES]           [INT] NULL, 
         [MAIOR_PRORROGACAO]             [INT] NULL, 
         [DESCONTO_FATURAMENTO]          [NUMERIC](8, 5) NULL, 
         [OBS]                           [TEXT] NULL, 
         [INATIVO]                       [BIT] NULL, 
         [MOEDA]                         [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [DATA_PARA_TRANSFERENCIA]       [DATETIME] NULL, 
         [INDICA_FRANQUIA]               [SMALLINT] NULL, 
         [CODIGO_TAB_PRECO]              [CHAR](2) COLLATE DATABASE_DEFAULT NULL, 
         [FATOR_CUSTO_FRANQUIA]          [NUMERIC](8, 3) NULL, 
         [DESCONTO_PEDIDO_VENDA]         [NUMERIC](8, 4) NULL, 
         [SEGURO_NUMERO_CONTRATO]        [VARCHAR](12) COLLATE DATABASE_DEFAULT NULL, 
         [SEGURO_NUMERO_CLIENTE]         [VARCHAR](8) COLLATE DATABASE_DEFAULT NULL, 
         [SEGURO_VALIDADE]               [DATETIME] NULL, 
         [CONTA_CONTABIL]                [CHAR] (20) COLLATE DATABASE_DEFAULT NULL, 
         [MESES_SEM_VENCIMENTO]          [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [EXPEDICAO_COMPLETO_PEDIDO]     [BIT] NULL, 
         [EXPEDICAO_COMPLETO_PACK]       [BIT] NULL, 
         [EXPEDICAO_COMPLETO_TAMANHOS]   [BIT] NULL, 
         [EXPEDICAO_COMPLETO_COR]        [BIT] NULL, 
         [EXPEDICAO_COMPLETO_COORDENADO] [BIT] NULL, 
         [EXPEDICAO_COMPLETO_CARTELA]    [BIT] NULL, 
         [EXPEDICAO_PORCENTAGEM_MAIOR]   [INT] NULL, 
         [EXPEDICAO_PORCENTAGEM_MINIMA]  [INT] NULL, 
         [EXPEDICAO_PORCENTAGEM_TIPO]    [INT] NULL, 
         [EXPEDICAO_VALOR_MAXIMO]        [NUMERIC](14, 2) NULL, 
         [CONTA_CONTABIL_ANTECIPACAO]    [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [CONTA_CONTABIL_VENDAS_TIPO]    [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [TRANSPORTADORA2]               [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [TRANSP_REDESPACHO]             [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [CTB_CONTA_CONTABIL]            [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [DESCONTO_BRUTO]                [NUMERIC](8, 2) NULL, 
         [DESCONTO_BRUTO_1]              [NUMERIC](8, 2) NULL, 
         [DESCONTO_BRUTO_2]              [NUMERIC](8, 2) NULL, 
         [DESCONTO_BRUTO_3]              [NUMERIC](8, 2) NULL, 
         [DESCONTO_BRUTO_4]              [NUMERIC](8, 2) NULL, 
         [DESCONTO_SOBRE_1]              [NUMERIC](8, 2) NULL, 
         [DESCONTO_SOBRE_2]              [NUMERIC](8, 2) NULL, 
         [DESCONTO_SOBRE_3]              [NUMERIC](8, 2) NULL, 
         [DESCONTO_SOBRE_4]              [NUMERIC](8, 2) NULL, 
         [EXPEDICAO_COMPLETO_FAIXAS]     [BIT] NULL, 
         [EXPEDICAO_PORC_ADEQUACAO]      [NUMERIC](13, 10) NULL, 
         [EXPEDICAO_QTDE_ADEQUACAO]      [SMALLINT] NULL, 
         [EXPEDICAO_ADEQUACAO_COR]       [BIT] NULL, 
         [EXPEDICAO_ADEQUACAO_TAMANHO]   [BIT] NULL, 
         [MULTI_DESCONTO_ACUMULAR]       [BIT] NULL, 
         [INDICADOR_VENDA]               [CHAR](1) COLLATE DATABASE_DEFAULT NULL, 
         [DATA_MAIOR_ATRASO]             [DATETIME] NULL, 
         [DATA_MAIOR_VALOR_FATURADO]     [DATETIME] NULL, 
         [MAIOR_VALOR_FATURADO]          [NUMERIC](14, 2) NULL, 
         [DT_ULTIMA_VENDA]               [DATETIME] NULL, 
         [DT_PENULTIMA_VENDA]            [DATETIME] NULL, 
         [DT_ANTEPENULTIMA_VENDA]        [DATETIME] NULL, 
         [DT_PRIMEIRA_VENDA]             [DATETIME] NULL 
      ); 

    --Wendel - Criação de index nas temps melhoria de performance #9#  
    CREATE UNIQUE NONCLUSTERED INDEX [XAK1CLIENTES_ATACADO1] 
      ON [DBO].#CLIENTES_ATACADO ( [CLIFOR] ASC) 
      WITH FILLFACTOR = 100; 

    CREATE UNIQUE NONCLUSTERED INDEX [XAK2CLIENTES_ATACADO1] 
      ON [DBO].#CLIENTES_ATACADO ( [COD_CLIENTE] ASC) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE1CLIENTES_ATACADO1] 
      ON [DBO].#CLIENTES_ATACADO ( [CGC_CPF] ASC) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE2_CLIENTES_ATACADO1] 
      ON [DBO].#CLIENTES_ATACADO ( [CLIENTE_ATACADO] ASC, [CTB_CONTA_CONTABIL] ASC) 
      WITH FILLFACTOR = 100; 

--3º #3#  
; 
    IF (SELECT Object_id('TEMPDB..#CTB_LANCAMENTO_ITEM')) IS NOT NULL 
      BEGIN 
          DROP TABLE #CTB_LANCAMENTO_ITEM 
      END; 

; 
    CREATE TABLE [DBO].#CTB_LANCAMENTO_ITEM 
      ( 
         [CAMBIO_NA_DATA]          [NUMERIC](11, 6) NULL, 
         [CODIGO_HISTORICO]        [CHAR](4) COLLATE DATABASE_DEFAULT NULL, 
         [COD_CLIFOR]              [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [CONCILIADO]              [BIT] NULL, 
         [CONTA_CONTABIL]          [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [CREDITO]                 [NUMERIC](14, 2) NULL, 
         [CREDITO_MOEDA]           [NUMERIC](14, 2) NULL, 
         [DATA_DIGITACAO]          [DATETIME] NULL, 
         [DEBITO]                  [NUMERIC](14, 2) NULL, 
         [DEBITO_MOEDA]            [NUMERIC](14, 2) NULL, 
         [DISPARA_FORMULA]         [BIT] NULL, 
         [EMPRESA]                 [INT] NULL, 
         [GERADO_AUTOMATICO_TIPO]  [INT] NULL, 
         [HISTORICO]               [VARCHAR](250) COLLATE DATABASE_DEFAULT NULL, 
         [ID_CONTRAPARTIDA]        [TINYINT] NULL, 
         [ITEM]                    [SMALLINT] NULL, 
         [LANCAMENTO]              [INT] NULL, 
         [LX_TIPO_LANCAMENTO]      [CHAR](3) COLLATE DATABASE_DEFAULT NULL, 
         [MOEDA]                   [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [PERMITE_ALTERACAO]       [BIT] NULL, 
         [RATEIO_CENTRO_CUSTO]     [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL, 
         [RATEIO_FILIAL]           [VARCHAR](15) COLLATE DATABASE_DEFAULT NULL, 
         [VALOR_FINANCEIRO]        [NUMERIC](14, 2) NULL, 
         [VALOR_FINANCEIRO_PADRAO] [NUMERIC](14, 2) NULL, 
         [DATA_MOV]                [DATETIME] NULL, 
         [USUARIO_MOV]             [VARCHAR](60) COLLATE DATABASE_DEFAULT NULL, 
         [DOCUMENTO]               [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL 
      ); 

--Wendel - criação de index nas temps melhoria de performance #9#  
; 
    CREATE NONCLUSTERED INDEX [VIDX_CTB_LANCAMENTO_COVER1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [LANCAMENTO] ASC, [CONTA_CONTABIL] ASC, [EMPRESA] ASC, [ITEM] ASC, [LX_TIPO_LANCAMENTO] ASC )
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [VIDX_CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [COD_CLIFOR] ASC, [CONTA_CONTABIL] ASC, [RATEIO_CENTRO_CUSTO] ASC, [RATEIO_FILIAL] ASC )
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XI15CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [VALOR_FINANCEIRO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XI22CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [EMPRESA] ASC, [LANCAMENTO] ASC ) 
      INCLUDE ( [ITEM], [LX_TIPO_LANCAMENTO], [RATEIO_FILIAL], [VALOR_FINANCEIRO], [USUARIO_MOV], [DEBITO])WITH FILLFACTOR = 100;

; 
    CREATE NONCLUSTERED INDEX [XIE10CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [RATEIO_CENTRO_CUSTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE11CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [RATEIO_FILIAL] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE12CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [EMPRESA] ASC, [LANCAMENTO] ASC, [ID_CONTRAPARTIDA] ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE15CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [DATA_MOV] ASC, [USUARIO_MOV] ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE16CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [USUARIO_MOV] ASC, [DATA_MOV] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE1CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [LANCAMENTO] ASC, [ITEM] ASC, [EMPRESA] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE2CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [COD_CLIFOR] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE3CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [CONTA_CONTABIL] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE4CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [CREDITO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE5CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [DEBITO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE6CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [GERADO_AUTOMATICO_TIPO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE7CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [EMPRESA] ASC, [LANCAMENTO] ASC, [ITEM] ASC, [ID_CONTRAPARTIDA] ASC)
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE8CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [LX_TIPO_LANCAMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE9CTB_LANCAMENTO_ITEM1] 
      ON [DBO].#CTB_LANCAMENTO_ITEM ( [MOEDA] ASC ) 
      WITH FILLFACTOR = 100; 

--4º #3#  
; 
    IF (SELECT Object_id('TEMPDB..#CTB_A_PAGAR_FATURA')) IS NOT NULL 
      BEGIN 
          DROP TABLE #CTB_A_PAGAR_FATURA 
      END; 

; 
    CREATE TABLE [DBO].#CTB_A_PAGAR_FATURA 
      ( 
         [CAMBIO_NA_DATA_EMISSAO]  [NUMERIC](11, 6) NULL, 
         [COD_CLIFOR]              [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [COD_FILIAL]              [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [COMPLEMENTO_NOME]        [VARCHAR](40) COLLATE DATABASE_DEFAULT NULL, 
         [DATA_ENTRADA]            [DATETIME] NULL, 
         [DOCUMENTO]               [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [EMISSAO]                 [DATETIME] NULL, 
         [EMPRESA]                 [INT] NULL, 
         [ESPECIE_SERIE]           [INT] NULL, 
         [FATURA]                  [CHAR](25) COLLATE DATABASE_DEFAULT NULL,/*#7#*/ 
         [FATURA_OK]               [BIT] NULL, 
         [FATURA_SERIE]            [VARCHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [ITEM]                    [SMALLINT] NULL, 
         [LANCAMENTO]              [INT] NULL, 
         [LX_TIPO_DOCUMENTO]       [INT] NULL, 
         [MOEDA]                   [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [NUMERO_ENTRADA]          [INT] NULL, 
         [NUMERO_PARCELAS]         [TINYINT] NULL, 
         [POSSUI_ENTRADA]          [BIT] NULL, 
         [PROVISAO]                [BIT] NULL, 
         [TAXA_JUROS]              [NUMERIC](13, 10) NULL, 
         [TAXA_MULTA]              [NUMERIC](13, 10) NULL, 
         [USUARIO]                 [VARCHAR](25) COLLATE DATABASE_DEFAULT NULL, 
         [COD_CLIFOR_SACADO]       [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [VALOR_OUTRAS_ENTIDADES]  [NUMERIC](14, 2) NULL, 
         [INDICA_SACADO_PRINCIPAL] [BIT] NULL, 
         [ID_DADOS_ARRECADACAO]    [INT] NULL, 
         [DATA_APURACAO]           [DATETIME] NULL 
      ); 

--Wendel - criação de index nas temps melhoria de performance. #9#  
; 
    CREATE UNIQUE NONCLUSTERED INDEX [XAK1CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [FATURA] ASC, [FATURA_SERIE] ASC, [COD_CLIFOR_SACADO] ASC, [COD_CLIFOR] ASC )
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE10CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [ITEM] ASC, [LANCAMENTO] ASC, [EMPRESA] ASC, [MOEDA] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE1CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [COD_CLIFOR] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE2CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [COD_FILIAL] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE3CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [DATA_ENTRADA] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE4CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [DOCUMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE5CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [EMISSAO] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE6CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [LX_TIPO_DOCUMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE7CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [MOEDA] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE8CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [NUMERO_PARCELAS] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE9CTB_A_PAGAR_FATURA1] 
      ON [DBO].#CTB_A_PAGAR_FATURA ( [COD_CLIFOR_SACADO] ASC ) 
      WITH FILLFACTOR = 100; 

--5º #3#  
; 
    IF (SELECT Object_id('TEMPDB..#CTB_A_PAGAR_PARCELA')) IS NOT NULL 
      BEGIN 
          DROP TABLE #CTB_A_PAGAR_PARCELA 
      END; 

; 
    CREATE TABLE [DBO].#CTB_A_PAGAR_PARCELA 
      ( 
         [BANCO]                     [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [CAMBIO_FIXO_PGTO]          [NUMERIC](11, 6) NULL, 
         [CODIGO_BARRA]              [VARCHAR](50) COLLATE DATABASE_DEFAULT NULL, 
         [CONTA_PORTADOR]            [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [DATA_DESCONTO_VENC]        [DATETIME] NULL, 
         [DESCONTO_VENC]             [NUMERIC](13, 10) NULL, 
         [DIAS_PRORROGADOS]          [INT] NULL, 
         [EMPRESA]                   [INT] NULL, 
         [ID_ASSINATURA_APROVACAO]   [INT] NULL, 
         [ID_ASSINATURA_DOCUMENTO]   [INT] NULL, 
         [ID_PARCELA]                [CHAR](2) COLLATE DATABASE_DEFAULT NULL, 
         [ITEM]                      [SMALLINT] NULL, 
         [LANCAMENTO]                [INT] NULL, 
         [NUMERO_BANCARIO]           [CHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [PAGAMENTO_APROVADO]        [CHAR](1) COLLATE DATABASE_DEFAULT NULL, 
         [VALOR_A_PAGAR]             [NUMERIC](14, 2) NULL, 
         [VALOR_ORIGINAL]            [NUMERIC](14, 2) NULL, 
         [VALOR_ORIGINAL_PADRAO]     [NUMERIC](14, 2) NULL, 
         [VENCIMENTO]                [DATETIME] NULL, 
         [VENCIMENTO_REAL]           [DATETIME] NULL, 
         [VALOR_OUTRAS_ENTIDADES]    [NUMERIC](14, 2) NULL, 
         [VALOR_PREVISAO_IMPOSTO]    [NUMERIC](19, 2) NULL, 
         [LX_STATUS_CONCILIACAO]     [CHAR](2) COLLATE DATABASE_DEFAULT NULL, 
         [LX_TIPO_DOCUMENTO_PARCELA] [INT] NULL, 
         [CONCILIADO_DDA]            [BIT] NULL 
      ); 

; 
    CREATE NONCLUSTERED INDEX [XIE10CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [VENCIMENTO_REAL] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE1CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [VENCIMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE2CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [BANCO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE3CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [CODIGO_BARRA] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE4CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [CONTA_PORTADOR] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE5CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [DATA_DESCONTO_VENC] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE6CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [ID_ASSINATURA_APROVACAO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE7CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [ID_ASSINATURA_DOCUMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE8CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [NUMERO_BANCARIO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE9CTB_A_PAGAR_PARCELA1] 
      ON [DBO].#CTB_A_PAGAR_PARCELA ( [PAGAMENTO_APROVADO] ASC ) 
      WITH FILLFACTOR = 100; 

--6º #3#  
; 
    IF (SELECT Object_id('TEMPDB..#CTB_A_RECEBER_FATURA')) IS NOT NULL 
      BEGIN 
          DROP TABLE #CTB_A_RECEBER_FATURA 
      END; 

; 
    CREATE TABLE [DBO].#CTB_A_RECEBER_FATURA 
      ( 
         [CAMBIO_NA_DATA_EMISSAO]    [NUMERIC](11, 6) NULL, 
         [CODIGO_CONSUMIDOR]         [VARCHAR](14) COLLATE DATABASE_DEFAULT NULL, 
         [COD_CLIFOR]                [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [COD_EMISSOR]               [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [COD_REPRESENTANTE]         [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [COD_REPRESENTANTE_GERENTE] [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [COMISSAO]                  [NUMERIC](14, 2) NULL, 
         [COMISSAO_GERENTE]          [NUMERIC](14, 2) NULL, 
         [DOCUMENTO]                 [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [EMISSAO]                   [DATETIME] NULL, 
         [EMPRESA]                   [INT] NULL, 
         [FATURA]                    [CHAR](25) COLLATE DATABASE_DEFAULT NULL,/*#7#*/ 
         [FATURA_IMPRESSA]           [BIT] NULL, 
         [ITEM]                      [SMALLINT] NULL, 
         [JUROS_POR_ATRASO]          [NUMERIC](13, 10) NULL, 
         [LANCAMENTO]                [INT] NULL, 
         [LX_TIPO_DOCUMENTO]         [INT] NULL, 
         [MOEDA]                     [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [MULTA_POR_ATRASO]          [NUMERIC](13, 10) NULL, 
         [NUMERO_PARCELAS]           [TINYINT] NULL, 
         [PORCENTAGEM_ACERTO]        [NUMERIC](13, 10) NULL, 
         [POSSUI_SAIDA]              [BIT] NULL, 
         [SERIE]                     [CHAR](6) COLLATE DATABASE_DEFAULT NULL,--#5#  
         [INDICA_PROTESTO]           [BIT] NULL 
      ); 

; 
    CREATE UNIQUE NONCLUSTERED INDEX [XAK1CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( [COD_EMISSOR] ASC, [FATURA] ASC, [SERIE] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE10CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( [MOEDA] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE1CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( CODIGO_CONSUMIDOR ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE2CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( [COD_CLIFOR] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE3CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( [COD_EMISSOR] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE4CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( [COD_REPRESENTANTE] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE5CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( [COD_REPRESENTANTE_GERENTE] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE6CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( [DOCUMENTO] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE7CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( [EMISSAO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE9CTB_A_RECEBER_FATURA1] 
      ON [DBO].#CTB_A_RECEBER_FATURA ( [LX_TIPO_DOCUMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

--7º #3#  
; 
    IF (SELECT Object_id('TEMPDB..#CTB_A_RECEBER_PARCELA')) IS NOT NULL 
      BEGIN 
          DROP TABLE #CTB_A_RECEBER_PARCELA 
      END; 

; 
    CREATE TABLE [DBO].#CTB_A_RECEBER_PARCELA 
      ( 
         [AGENCIA]                     [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [CAMBIO_FIXO_PGTO]            [NUMERIC](11, 6) NULL, 
         [CONTA_PORTADOR]              [VARCHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [DATA_DESCONTO_VENC]          [DATETIME] NULL, 
         [DESCONTO_VENC]               [NUMERIC](13, 10) NULL, 
         [DIAS_PRORROGADOS]            [INT] NULL, 
         [EMPRESA]                     [INT] NULL, 
         [ID_PARCELA]                  [CHAR](2) COLLATE DATABASE_DEFAULT NULL, 
         [ITEM]                        [SMALLINT] NULL, 
         [LANCAMENTO]                  [INT] NULL, 
         [NUMERO_BANCARIO]             [CHAR](20) COLLATE DATABASE_DEFAULT NULL, 
         [VALOR_A_RECEBER]             [NUMERIC](14, 2) NULL, 
         [VALOR_ORIGINAL]              [NUMERIC](14, 2) NULL, 
         [VALOR_ORIGINAL_PADRAO]       [NUMERIC](14, 2) NULL, 
         [VENCIMENTO]                  [DATETIME] NULL, 
         [VENCIMENTO_REAL]             [DATETIME] NULL, 
         [BANCO]                       [CHAR](5) COLLATE DATABASE_DEFAULT NULL, 
         [INDICA_PROTESTO]             [BIT] NULL, 
         [DATA_PARA_TRANSFERENCIA]     [DATETIME] NULL, 
         [VALOR_JUROS_DESCONTO]        [NUMERIC](15, 2) NULL, 
         [EMPRESA_DESPESA_DESCONTO]    [INT] NULL, 
         [LANCAMENTO_DESPESA_DESCONTO] [INT] NULL, 
         [ITEM_DESPESA_DESCONTO]       [SMALLINT] NULL, 
         [LOJA_CHAVE]                  [VARCHAR](40) COLLATE DATABASE_DEFAULT NULL, 
         [INDICA_ESTORNO_COMISSAO]     [BIT] NULL, 
         [DATA_ENVIO_SCI]              [DATETIME] NULL, 
         [DATA_BAIXA_SCI]              [DATETIME] NULL, 
         [DATA_ENVIO_SERASA]           [DATETIME] NULL, 
         [DATA_BAIXA_SERASA]           [DATETIME] NULL, 
         [INDICA_NAO_ENVIO_BORDERO]    [BIT] NULL, 
         [CONTRATO_GRUPO]              [CHAR](4) COLLATE DATABASE_DEFAULT NULL 
      ); 

--#9#  
; 
    CREATE NONCLUSTERED INDEX [XIE1CTB_A_RECEBER_PARCELA1] 
      ON [DBO].#CTB_A_RECEBER_PARCELA ( [AGENCIA] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE2CTB_A_RECEBER_PARCELA1] 
      ON [DBO].#CTB_A_RECEBER_PARCELA ( [CONTA_PORTADOR] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE3CTB_A_RECEBER_PARCELA1] 
      ON [DBO].#CTB_A_RECEBER_PARCELA ( [DATA_DESCONTO_VENC] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE4CTB_A_RECEBER_PARCELA1] 
      ON [DBO].#CTB_A_RECEBER_PARCELA ( [NUMERO_BANCARIO] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE5CTB_A_RECEBER_PARCELA1] 
      ON [DBO].#CTB_A_RECEBER_PARCELA ( [VALOR_A_RECEBER] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE6CTB_A_RECEBER_PARCELA1] 
      ON [DBO].#CTB_A_RECEBER_PARCELA ( [VENCIMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE7CTB_A_RECEBER_PARCELA1] 
      ON [DBO].#CTB_A_RECEBER_PARCELA ( [VENCIMENTO_REAL] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE8CTB_A_RECEBER_PARCELA1] 
      ON [DBO].#CTB_A_RECEBER_PARCELA ( [BANCO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE9CTB_A_RECEBER_PARCELA1] 
      ON [DBO].#CTB_A_RECEBER_PARCELA ( [DIAS_PRORROGADOS] ASC, [VENCIMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

--8º #3#  
; 
    IF (SELECT Object_id('TEMPDB..#CTB_AVISO_LANCAMENTO')) IS NOT NULL 
      BEGIN 
          DROP TABLE #CTB_AVISO_LANCAMENTO 
      END; 

; 
    CREATE TABLE [DBO].#CTB_AVISO_LANCAMENTO 
      ( 
         [AVISO_LANCAMENTO]        [VARCHAR](40) COLLATE DATABASE_DEFAULT NULL, 
         [CAMBIO_FIXO_PGTO]        [NUMERIC](11, 6) NULL, 
         [CAMBIO_NA_DATA_EMISSAO]  [NUMERIC](11, 6) NULL, 
         [CODIGO_CONSUMIDOR]       [VARCHAR](14) COLLATE DATABASE_DEFAULT NULL, 
         [CODIGO_FISCAL_OPERACAO]  [CHAR] (4) COLLATE DATABASE_DEFAULT NULL, 
         [COD_CLIFOR]              [CHAR] (6) COLLATE DATABASE_DEFAULT NULL, 
         [DESCRICAO]               [VARCHAR](60) COLLATE DATABASE_DEFAULT NULL, 
         [DESC_AVISO_LANCAMENTO]   [VARCHAR](60) COLLATE DATABASE_DEFAULT NULL, 
         [EMISSAO]                 [DATETIME] NULL, 
         [EMPRESA]                 [INT] NULL, 
         [ID_ASSINATURA_DOCUMENTO] [INT] NULL, 
         [ITEM]                    [SMALLINT] NULL, 
         [LANCAMENTO]              [INT] NULL, 
         [LOJA_LANCAMENTO_CAIXA]   [CHAR](7) COLLATE DATABASE_DEFAULT NULL, 
         [LOJA_PARCELA]            [CHAR](2) COLLATE DATABASE_DEFAULT NULL, 
         [LOJA_TERMINAL]           [CHAR](7) COLLATE DATABASE_DEFAULT NULL, 
         [LX_TIPO_DOCUMENTO]       [INT] NULL, 
         [MOEDA]                   [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [PEDIDO_COMPRA]           [CHAR](8) COLLATE DATABASE_DEFAULT NULL, 
         [STATUS_APROVACAO]        [CHAR](1) COLLATE DATABASE_DEFAULT NULL, 
         [SUB_ITEM]                [SMALLINT] NULL, 
         [USUARIO]                 [VARCHAR](50) COLLATE DATABASE_DEFAULT NULL, 
         [VALOR_AVISO]             [NUMERIC](14, 2) NULL, 
         [VALOR_ORIGINAL]          [NUMERIC](14, 2) NULL, 
         [VALOR_ORIGINAL_PADRAO]   [NUMERIC](14, 2) NULL, 
         [VENCIMENTO]              [DATETIME] NULL, 
         [VENCIMENTO_REAL]         [DATETIME] NULL, 
         [DATA_PARA_TRANSFERENCIA] [DATETIME] NULL, 
         [COD_CLIFOR_SACADO]       [CHAR](6) COLLATE DATABASE_DEFAULT NULL, 
         [INDICA_SACADO_PRINCIPAL] [BIT] NULL, 
         [INDICA_FLUXO]            [BIT] NULL, 
         [LOJA_CHAVE]              [VARCHAR](40) COLLATE DATABASE_DEFAULT NULL, 
         [CAMBIO_NEGOCIADO]        [NUMERIC](11, 6) NULL 
      ); 

--Wendel - criação dos index melhoria de performance #9#  
; 
    CREATE NONCLUSTERED INDEX [XIE10CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([VENCIMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE11CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([VENCIMENTO_REAL] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE1CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([AVISO_LANCAMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE2CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([CODIGO_CONSUMIDOR] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE3CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([CODIGO_FISCAL_OPERACAO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE4CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([COD_CLIFOR] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE5CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([EMISSAO] ASC) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE6CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([ID_ASSINATURA_DOCUMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE7CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([LX_TIPO_DOCUMENTO] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE8CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([MOEDA] ASC ) 
      WITH FILLFACTOR = 100; 

; 
    CREATE NONCLUSTERED INDEX [XIE9CTB_AVISO_LANCAMENTO1] 
      ON [DBO].#CTB_AVISO_LANCAMENTO ([PEDIDO_COMPRA] ASC ) 
      WITH FILLFACTOR = 100; 

    --PRINT 'CRIA TABELA #ENTRADAS_ITEM '  
    ---------------------------------------------------------------------------------------------------------------------------  
    --DECLARE @ENTRADAS_ITEM TABLE   
    IF (SELECT Object_id('TEMPDB..#ENTRADAS_ITEM')) IS NOT NULL 
      BEGIN 
          DROP TABLE #ENTRADAS_ITEM 
      END; 

    CREATE TABLE #ENTRADAS_ITEM 
      ( 
         NF_ENTRADA          VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         SERIE_NF_ENTRADA    CHAR(6) COLLATE DATABASE_DEFAULT, 
         NOME_CLIFOR         VARCHAR(25) COLLATE DATABASE_DEFAULT, 
         RATEIO_CENTRO_CUSTO VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         RATEIO_FILIAL       VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         CONTA_CONTABIL      VARCHAR(25) COLLATE DATABASE_DEFAULT 
      ); 

    CREATE NONCLUSTERED INDEX [XIE1ENTRADAS_ITEM] 
      ON [DBO].#ENTRADAS_ITEM ( NF_ENTRADA ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE2ENTRADAS_ITEM] 
      ON [DBO].#ENTRADAS_ITEM (SERIE_NF_ENTRADA ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE3ENTRADAS_ITEM] 
      ON [DBO].#ENTRADAS_ITEM (NOME_CLIFOR ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE4ENTRADAS_ITEM] 
      ON [DBO].#ENTRADAS_ITEM (RATEIO_CENTRO_CUSTO ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE5ENTRADAS_ITEM] 
      ON [DBO].#ENTRADAS_ITEM (RATEIO_FILIAL ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE6ENTRADAS_ITEM] 
      ON [DBO].#ENTRADAS_ITEM ( CONTA_CONTABIL ASC ) 
      WITH FILLFACTOR = 100; 

    -------------------------------------------------------------------------------------------------  
    --DELETE @ENTRADAS_ITEM   
    --DECLARE @FATURAMENTO_ITEM TABLE   
    IF (SELECT Object_id('TEMPDB..#FATURAMENTO_ITEM')) IS NOT NULL 
      BEGIN 
          DROP TABLE #FATURAMENTO_ITEM 
      END; 

    --print 'cria tabela #FATURAMENTO_ITEM '  
    CREATE TABLE #FATURAMENTO_ITEM 
      ( 
         NF_SAIDA            VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         SERIE_NF            CHAR (6) COLLATE DATABASE_DEFAULT, 
         FILIAL              VARCHAR(25) COLLATE DATABASE_DEFAULT, 
         RATEIO_CENTRO_CUSTO VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         RATEIO_FILIAL       VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         CONTA_CONTABIL      VARCHAR(25) COLLATE DATABASE_DEFAULT 
      ); 

    --#9#        
    CREATE NONCLUSTERED INDEX [XIE1FATURAMENTO_ITEM] 
      ON [DBO].#FATURAMENTO_ITEM (NF_SAIDA ASC) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE2FATURAMENTO_ITEM] 
      ON [DBO].#FATURAMENTO_ITEM (SERIE_NF ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE3FATURAMENTO_ITEM] 
      ON [DBO].#FATURAMENTO_ITEM (FILIAL ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE4FATURAMENTO_ITEM] 
      ON [DBO].#FATURAMENTO_ITEM (RATEIO_CENTRO_CUSTO ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE5FATURAMENTO_ITEM] 
      ON [DBO].#FATURAMENTO_ITEM (RATEIO_FILIAL ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE6FATURAMENTO_ITEM] 
      ON [DBO].#FATURAMENTO_ITEM (CONTA_CONTABIL ASC ) 
      WITH FILLFACTOR = 100; 

    --#8#  
    IF (SELECT Object_id('TEMPDB..#LOJA_VENDA_PRODUTO')) IS NOT NULL 
      BEGIN 
          DROP TABLE #LOJA_VENDA_PRODUTO 
      END; 

    CREATE TABLE #LOJA_VENDA_PRODUTO 
      ( 
         FILIAL              VARCHAR(25) COLLATE DATABASE_DEFAULT, 
         RATEIO_CENTRO_CUSTO VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         RATEIO_FILIAL       VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         CONTA_CONTABIL      VARCHAR(25) COLLATE DATABASE_DEFAULT, 
         EMPRESA             INT, 
         LANCAMENTO          INT, 
      ); 

    CREATE NONCLUSTERED INDEX [XIE2LOJA_VENDA_PRODUTO] 
      ON [DBO].#LOJA_VENDA_PRODUTO (FILIAL ASC) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE3LOJA_VENDA_PRODUTO] 
      ON [DBO].#LOJA_VENDA_PRODUTO (RATEIO_CENTRO_CUSTO ASC) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE4LOJA_VENDA_PRODUTO] 
      ON [DBO].#LOJA_VENDA_PRODUTO (RATEIO_FILIAL ASC) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE5LOJA_VENDA_PRODUTO] 
      ON [DBO].#LOJA_VENDA_PRODUTO (EMPRESA ASC) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE6LOJA_VENDA_PRODUTO] 
      ON [DBO].#LOJA_VENDA_PRODUTO (LANCAMENTO ASC) 
      WITH FILLFACTOR = 100; 

    --#8#  
    --DELETE @FATURAMENTO_ITEM   
    --DECLARE @LOJA_NOTA_FISCAL_ITEM TABLE   
    IF (SELECT Object_id('TEMPDB..#LOJA_NOTA_FISCAL_ITEM')) IS NOT NULL 
      BEGIN 
          DROP TABLE #LOJA_NOTA_FISCAL_ITEM 
      END; 

    CREATE TABLE #LOJA_NOTA_FISCAL_ITEM 
      ( 
         NF_NUMERO           VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         SERIE_NF            CHAR (6) COLLATE DATABASE_DEFAULT, 
         CODIGO_FILIAL       VARCHAR(6) COLLATE DATABASE_DEFAULT, 
         RATEIO_CENTRO_CUSTO VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         RATEIO_FILIAL       VARCHAR(15) COLLATE DATABASE_DEFAULT, 
         CONTA_CONTABIL      VARCHAR(25) COLLATE DATABASE_DEFAULT, 
         EMPRESA             INT, 
         CTB_LANCAMENTO      INT, 
         CTB_ITEM            INT, 
         NOME_CLIFOR         VARCHAR(25) COLLATE DATABASE_DEFAULT, 
         FILIAL              VARCHAR(25) COLLATE DATABASE_DEFAULT 
      ); 

    --#9#        
    CREATE NONCLUSTERED INDEX [XIE1_LOJA_NOTA_FISCAL_ITEM] 
      ON [DBO].#LOJA_NOTA_FISCAL_ITEM ( [NF_NUMERO] ASC, [SERIE_NF] ASC, [CODIGO_FILIAL] ASC ) 
      WITH FILLFACTOR = 100; 

    CREATE NONCLUSTERED INDEX [XIE2_LOJA_NOTA_FISCAL_ITEM] 
      ON [DBO].#LOJA_NOTA_FISCAL_ITEM ( [NF_NUMERO] ASC, [SERIE_NF] ASC, [CODIGO_FILIAL] ASC ) 
      WITH FILLFACTOR = 100; 

    --DELETE @LOJA_NOTA_FISCAL_ITEM   
    --DECLARE @LOJAS_TERCEIRO TABLE   
    IF (SELECT Object_id('TEMPDB..#LOJAS_TERCEIRO')) IS NOT NULL 
      BEGIN 
          DROP TABLE #LOJAS_TERCEIRO 
      END; 

    CREATE TABLE #LOJAS_TERCEIRO 
      ( 
         CODIGO_CLIENTE VARCHAR(14) COLLATE DATABASE_DEFAULT, 
         CGC_CPF        VARCHAR(19) COLLATE DATABASE_DEFAULT, 
         COD_CLIFOR     VARCHAR(6) COLLATE DATABASE_DEFAULT 
      ); 

    CREATE NONCLUSTERED INDEX [XIE1_LOJAS_TERCEIRO] 
      ON [DBO].#LOJAS_TERCEIRO ( CODIGO_CLIENTE ASC, CGC_CPF ASC, COD_CLIFOR ASC ) 
      WITH FILLFACTOR = 100; 

    --DELETE @LOJAS_TERCEIRO  
    IF EXISTS(SELECT CODIGO_FILIAL 
              FROM   LOJA_CAIXA_LANCAMENTOS (NOLOCK)--#3#  
              WHERE  ( ( EMPRESA = @EMPRESA 
                          OR @EMPRESA IS NULL ) 
                       AND ( CTB_LANCAMENTO = @LANCAMENTO 
                              OR @LANCAMENTO IS NULL ) )) 
      BEGIN 
          INSERT #LOJAS_TERCEIRO 
                 (CODIGO_CLIENTE, 
                  CGC_CPF, 
                  COD_CLIFOR) 
          SELECT DISTINCT B.CODIGO_CLIENTE, 
                          C.CPF_CGC, 
                          COD_CLIFOR = (SELECT Max(COD_CLIFOR) 
                                        FROM   CADASTRO_CLI_FOR (NOLOCK) 
                                        WHERE  CGC_CPF = C.CPF_CGC) 
          FROM   (SELECT CODIGO_FILIAL, 
                         TERMINAL, 
                         DATA, 
                         EMPRESA, 
                         CTB_LANCAMENTO 
                  FROM   LOJA_CAIXA_LANCAMENTOS (NOLOCK) --#3#  
                  WHERE  ( ( EMPRESA = @EMPRESA 
                              OR @EMPRESA IS NULL ) 
                           AND ( CTB_LANCAMENTO = @LANCAMENTO 
                                  OR @LANCAMENTO IS NULL ) ) 
                  GROUP  BY CODIGO_FILIAL, 
                            TERMINAL, 
                            DATA, 
                            EMPRESA, 
                            CTB_LANCAMENTO)A 
                 JOIN LOJA_VENDA B (NOLOCK) 
                   ON A.CODIGO_FILIAL = B.CODIGO_FILIAL 
                      AND A.TERMINAL = B.TERMINAL 
                      AND A.DATA = B.DATA_VENDA 
                 JOIN CLIENTES_VAREJO C (NOLOCK) 
                   ON B.CODIGO_CLIENTE = C.CODIGO_CLIENTE; 
      END; 

    IF EXISTS(SELECT EMPRESA 
              FROM   ENTRADAS B (NOLOCK) 
              WHERE  B.CTB_LANCAMENTO IS NOT NULL 
                     AND ( B.EMPRESA = @EMPRESA 
                            OR @EMPRESA IS NULL ) 
                     AND ( B.CTB_LANCAMENTO = @LANCAMENTO 
                            OR @LANCAMENTO IS NULL )) 
      BEGIN 
          INSERT #ENTRADAS_ITEM 
                 (NF_ENTRADA, 
                  SERIE_NF_ENTRADA, 
                  NOME_CLIFOR, 
                  RATEIO_CENTRO_CUSTO, 
                  RATEIO_FILIAL, 
                  CONTA_CONTABIL) 
          SELECT A.NF_ENTRADA, 
                 A.SERIE_NF_ENTRADA, 
                 A.NOME_CLIFOR, 
                 A.RATEIO_CENTRO_CUSTO, 
                 A.RATEIO_FILIAL, 
                 A.CONTA_CONTABIL 
          FROM   ENTRADAS_ITEM A (NOLOCK) 
                 JOIN ENTRADAS B (NOLOCK) 
                   ON A.NF_ENTRADA = B.NF_ENTRADA 
                      AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                      AND A.NOME_CLIFOR = B.NOME_CLIFOR 
                 JOIN (SELECT A.EMPRESA, 
                              A.LANCAMENTO 
                       FROM   CTB_LANCAMENTO A (NOLOCK) 
                              JOIN CTB_LANC_PADRAO B (NOLOCK) 
                                ON A.LANCAMENTO_PADRAO = B.LANCAMENTO_PADRAO 
                              LEFT JOIN CTB_FILIAL_RATEIO K (NOLOCK) 
                                     ON A.COD_FILIAL = K.RATEIO_FILIAL 
                              JOIN (SELECT DISTINCT EMPRESA, 
                                                    LANCAMENTO 
                                    FROM   CTB_LANCAMENTO (NOLOCK) 
                                    WHERE  ( EMPRESA = @EMPRESA 
                                              OR @EMPRESA IS NULL ) 
                                           AND ( LANCAMENTO = @LANCAMENTO 
                                                  OR @LANCAMENTO IS NULL )) L 
                                ON A.EMPRESA = L.EMPRESA 
                                   AND A.LANCAMENTO = L.LANCAMENTO 
                       WHERE  A.GERADO_INTEGRACAO IN ( 1, 3 ) 
                              AND ( A.EMPRESA = @EMPRESA 
                                     OR @EMPRESA IS NULL ) 
                              AND ( A.LANCAMENTO = @LANCAMENTO 
                                     OR @LANCAMENTO IS NULL ) 
                              AND ( A.DATA_LANCAMENTO BETWEEN @DATA_INICIAL AND @DATA_FINAL 
                                     OR @DATA_INICIAL IS NULL ) 
                              AND ( A.LANCAMENTO_PADRAO = @LANCAMENTO_PADRAO 
                                     OR @LANCAMENTO_PADRAO IS NULL )) C 
                   ON B.EMPRESA = C.EMPRESA 
                      AND B.CTB_LANCAMENTO = C.LANCAMENTO 
          WHERE  B.CTB_LANCAMENTO IS NOT NULL 
                 AND ( B.EMPRESA = @EMPRESA 
                        OR @EMPRESA IS NULL ) 
                 AND ( B.CTB_LANCAMENTO = @LANCAMENTO 
                        OR @LANCAMENTO IS NULL ); 
      END; 

    IF EXISTS(SELECT EMPRESA 
              FROM   ENTRADAS B (NOLOCK) 
              WHERE  B.NUMERO_CONFERENCIA IS NOT NULL 
                     AND ( B.EMPRESA = @EMPRESA 
                            OR @EMPRESA IS NULL ) 
                     AND ( B.NUMERO_CONFERENCIA = @LANCAMENTO 
                            OR @LANCAMENTO IS NULL )) 
      BEGIN 
          INSERT #ENTRADAS_ITEM 
                 (NF_ENTRADA, 
                  SERIE_NF_ENTRADA, 
                  NOME_CLIFOR, 
                  RATEIO_CENTRO_CUSTO, 
                  RATEIO_FILIAL, 
                  CONTA_CONTABIL) 
          SELECT A.NF_ENTRADA, 
                 A.SERIE_NF_ENTRADA, 
                 A.NOME_CLIFOR, 
                 A.RATEIO_CENTRO_CUSTO, 
                 A.RATEIO_FILIAL, 
                 A.CONTA_CONTABIL 
          FROM   ENTRADAS_ITEM A (NOLOCK) 
                 JOIN ENTRADAS B (NOLOCK) 
                   ON A.NF_ENTRADA = B.NF_ENTRADA 
                      AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                      AND A.NOME_CLIFOR = B.NOME_CLIFOR 
                 JOIN (SELECT A.EMPRESA, 
                              A.LANCAMENTO 
                       FROM   CTB_LANCAMENTO A (NOLOCK) 
                              JOIN CTB_LANC_PADRAO B (NOLOCK) 
                                ON A.LANCAMENTO_PADRAO = B.LANCAMENTO_PADRAO 
                              LEFT JOIN CTB_FILIAL_RATEIO K (NOLOCK) 
                                     ON A.COD_FILIAL = K.RATEIO_FILIAL 
                              JOIN (SELECT DISTINCT EMPRESA, 
                                                    LANCAMENTO 
                                    FROM   CTB_LANCAMENTO (NOLOCK) 
                                    WHERE  ( EMPRESA = @EMPRESA 
                                              OR @EMPRESA IS NULL ) 
                                           AND ( LANCAMENTO = @LANCAMENTO 
                                                  OR @LANCAMENTO IS NULL )) L 
                                ON A.EMPRESA = L.EMPRESA 
                                   AND A.LANCAMENTO = L.LANCAMENTO 
                       WHERE  A.GERADO_INTEGRACAO IN ( 1, 3 ) 
                              AND ( A.EMPRESA = @EMPRESA 
                                     OR @EMPRESA IS NULL ) 
                              AND ( A.LANCAMENTO = @LANCAMENTO 
                                     OR @LANCAMENTO IS NULL ) 
                              AND ( A.DATA_LANCAMENTO BETWEEN @DATA_INICIAL AND @DATA_FINAL 
                                     OR @DATA_INICIAL IS NULL ) 
                              AND ( A.LANCAMENTO_PADRAO = @LANCAMENTO_PADRAO 
                                     OR @LANCAMENTO_PADRAO IS NULL )) C 
                   ON B.EMPRESA = C.EMPRESA 
                      AND B.NUMERO_CONFERENCIA = C.LANCAMENTO 
          WHERE  B.NUMERO_CONFERENCIA IS NOT NULL 
                 AND ( B.EMPRESA = @EMPRESA 
                        OR @EMPRESA IS NULL ) 
                 AND ( B.NUMERO_CONFERENCIA = @LANCAMENTO 
                        OR @LANCAMENTO IS NULL ); 
      END; 

    IF EXISTS(SELECT EMPRESA 
              FROM   FATURAMENTO B (NOLOCK) 
              WHERE  B.CTB_LANCAMENTO IS NOT NULL 
                     AND ( B.EMPRESA = @EMPRESA 
                            OR @EMPRESA IS NULL ) 
                     AND ( B.CTB_LANCAMENTO = @LANCAMENTO 
                            OR @LANCAMENTO IS NULL )) 
      BEGIN 
          INSERT #FATURAMENTO_ITEM 
                 (NF_SAIDA, 
                  SERIE_NF, 
                  FILIAL, 
                  RATEIO_CENTRO_CUSTO, 
                  RATEIO_FILIAL, 
                  CONTA_CONTABIL) 
          SELECT A.NF_SAIDA, 
                 A.SERIE_NF, 
                 A.FILIAL, 
                 A.RATEIO_CENTRO_CUSTO, 
                 A.RATEIO_FILIAL, 
                 A.CONTA_CONTABIL 
          FROM   FATURAMENTO_ITEM A (NOLOCK) 
                 JOIN FATURAMENTO B (NOLOCK) 
                   ON A.NF_SAIDA = B.NF_SAIDA 
                      AND A.SERIE_NF = B.SERIE_NF 
                      AND A.FILIAL = B.FILIAL 
                 JOIN (SELECT A.EMPRESA, 
                              A.LANCAMENTO 
                       FROM   CTB_LANCAMENTO A (NOLOCK) 
                              JOIN CTB_LANC_PADRAO B (NOLOCK) 
                                ON A.LANCAMENTO_PADRAO = B.LANCAMENTO_PADRAO 
                              LEFT JOIN CTB_FILIAL_RATEIO K (NOLOCK) 
                                     ON A.COD_FILIAL = K.RATEIO_FILIAL 
                              JOIN (SELECT DISTINCT EMPRESA, 
                                                    LANCAMENTO 
                                    FROM   CTB_LANCAMENTO (NOLOCK) 
                                    WHERE  ( EMPRESA = @EMPRESA 
                                              OR @EMPRESA IS NULL ) 
                                           AND ( LANCAMENTO = @LANCAMENTO 
                                                  OR @LANCAMENTO IS NULL )) L 
                                ON A.EMPRESA = L.EMPRESA 
                                   AND A.LANCAMENTO = L.LANCAMENTO 
                       WHERE  A.GERADO_INTEGRACAO IN ( 1, 3 ) 
                              AND ( A.EMPRESA = @EMPRESA 
                                     OR @EMPRESA IS NULL ) 
                              AND ( A.LANCAMENTO = @LANCAMENTO 
                                     OR @LANCAMENTO IS NULL ) 
                              AND ( A.DATA_LANCAMENTO BETWEEN @DATA_INICIAL AND @DATA_FINAL 
                                     OR @DATA_INICIAL IS NULL ) 
                              AND ( A.LANCAMENTO_PADRAO = @LANCAMENTO_PADRAO 
                                     OR @LANCAMENTO_PADRAO IS NULL )) C 
                   ON B.EMPRESA = C.EMPRESA 
                      AND B.CTB_LANCAMENTO = C.LANCAMENTO 
          WHERE  B.CTB_LANCAMENTO IS NOT NULL 
                 AND ( B.EMPRESA = @EMPRESA 
                        OR @EMPRESA IS NULL ) 
                 AND ( B.CTB_LANCAMENTO = @LANCAMENTO 
                        OR @LANCAMENTO IS NULL ); 
      END; 

    IF EXISTS(SELECT EMPRESA 
              FROM   FATURAMENTO B (NOLOCK) 
              WHERE  B.NUMERO_CONFERENCIA IS NOT NULL 
                     AND ( B.EMPRESA = @EMPRESA 
                            OR @EMPRESA IS NULL ) 
                     AND ( B.NUMERO_CONFERENCIA = @LANCAMENTO 
                            OR @LANCAMENTO IS NULL )) 
      BEGIN 
          INSERT #FATURAMENTO_ITEM 
                 (NF_SAIDA, 
                  SERIE_NF, 
                  FILIAL, 
                  RATEIO_CENTRO_CUSTO, 
                  RATEIO_FILIAL, 
                  CONTA_CONTABIL) 
          SELECT A.NF_SAIDA, 
                 A.SERIE_NF, 
                 A.FILIAL, 
                 A.RATEIO_CENTRO_CUSTO, 
                 A.RATEIO_FILIAL, 
                 A.CONTA_CONTABIL 
          FROM   FATURAMENTO_ITEM A (NOLOCK) 
                 JOIN FATURAMENTO B (NOLOCK) 
                   ON A.NF_SAIDA = B.NF_SAIDA 
                      AND A.SERIE_NF = B.SERIE_NF 
                      AND A.FILIAL = B.FILIAL 
                 JOIN (SELECT A.EMPRESA, 
                              A.LANCAMENTO 
                       FROM   CTB_LANCAMENTO A (NOLOCK) 
                              JOIN CTB_LANC_PADRAO B (NOLOCK) 
                                ON A.LANCAMENTO_PADRAO = B.LANCAMENTO_PADRAO 
                              LEFT JOIN CTB_FILIAL_RATEIO K (NOLOCK) 
                                     ON A.COD_FILIAL = K.RATEIO_FILIAL 
                              JOIN (SELECT DISTINCT EMPRESA, 
                                                    LANCAMENTO 
                                    FROM   CTB_LANCAMENTO (NOLOCK) 
                                    WHERE  ( EMPRESA = @EMPRESA 
                                              OR @EMPRESA IS NULL ) 
                                           AND ( LANCAMENTO = @LANCAMENTO 
                                                  OR @LANCAMENTO IS NULL )) L 
                                ON A.EMPRESA = L.EMPRESA 
                                   AND A.LANCAMENTO = L.LANCAMENTO 
                       WHERE  A.GERADO_INTEGRACAO IN ( 1, 3 ) 
                              AND ( A.EMPRESA = @EMPRESA 
                                     OR @EMPRESA IS NULL ) 
                              AND ( A.LANCAMENTO = @LANCAMENTO 
                                     OR @LANCAMENTO IS NULL ) 
                              AND ( A.DATA_LANCAMENTO BETWEEN @DATA_INICIAL AND @DATA_FINAL 
                                     OR @DATA_INICIAL IS NULL ) 
                              AND ( A.LANCAMENTO_PADRAO = @LANCAMENTO_PADRAO 
                                     OR @LANCAMENTO_PADRAO IS NULL )) C 
                   ON B.EMPRESA = C.EMPRESA 
                      AND B.NUMERO_CONFERENCIA = C.LANCAMENTO 
          WHERE  B.NUMERO_CONFERENCIA IS NOT NULL 
                 AND ( B.EMPRESA = @EMPRESA 
                        OR @EMPRESA IS NULL ) 
                 AND ( B.NUMERO_CONFERENCIA = @LANCAMENTO 
                        OR @LANCAMENTO IS NULL ); 
      END; 

    --#8#  
    IF @USA_RATEIO_GRIFFE_FAT_ENT = 1 
       AND EXISTS(SELECT I.EMPRESA 
                  FROM   CTB_LANCAMENTO_ITEM I 
                         JOIN (SELECT A.LOJA_LANCAMENTO_CAIXA, 
                                      A.LOJA_TERMINAL, 
                                      A.EMPRESA, 
                                      A.LANCAMENTO, 
                                      A.ITEM, 
                                      A.COD_FILIAL 
                               FROM   CTB_CHEQUE_CARTAO A 
                               UNION ALL 
                               SELECT A.LOJA_LANCAMENTO_CAIXA, 
                                      A.LOJA_TERMINAL, 
                                      A.EMPRESA, 
                                      A.LANCAMENTO, 
                                      A.ITEM, 
                                      A.COD_CLIFOR AS COD_FILIAL 
                               FROM   CTB_AVISO_LANCAMENTO A) A 
                           ON I.EMPRESA = A.EMPRESA 
                              AND I.LANCAMENTO = A.LANCAMENTO 
                              AND I.ITEM = A.ITEM 
                         JOIN FILIAIS F 
                           ON A.COD_FILIAL = F.COD_FILIAL 
                         JOIN LOJAS_VAREJO L 
                           ON F.FILIAL = L.FILIAL 
                         JOIN LOJA_VENDA_PGTO B 
                           ON A.LOJA_LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
                              AND A.LOJA_TERMINAL = B.TERMINAL 
                              AND L.CODIGO_FILIAL = B.CODIGO_FILIAL 
                         JOIN LOJA_VENDA V 
                           ON B.LANCAMENTO_CAIXA = V.LANCAMENTO_CAIXA 
                              AND B.TERMINAL = V.TERMINAL 
                              AND B.CODIGO_FILIAL = V.CODIGO_FILIAL 
                         JOIN LOJA_VENDA_PRODUTO P 
                           ON V.TICKET = P.TICKET 
                              AND V.DATA_VENDA = P.DATA_VENDA 
                              AND V.CODIGO_FILIAL = P.CODIGO_FILIAL 
                         JOIN PRODUTOS PROD 
                           ON P.PRODUTO = PROD.PRODUTO 
                         JOIN PRODUTOS_GRIFFES G 
                           ON PROD.GRIFFE = G.GRIFFE 
                  WHERE  I.EMPRESA = @EMPRESA 
                         AND I.LANCAMENTO = @LANCAMENTO) 
      BEGIN 
          INSERT #LOJA_VENDA_PRODUTO 
                 (FILIAL, 
                  RATEIO_CENTRO_CUSTO, 
                  RATEIO_FILIAL, 
                  CONTA_CONTABIL, 
                  EMPRESA, 
                  LANCAMENTO) 
          SELECT DISTINCT F.FILIAL, 
                          G.RATEIO_CENTRO_CUSTO, 
                          G.RATEIO_FILIAL, 
                          NULL, 
                          I.EMPRESA, 
                          I.LANCAMENTO 
          FROM   CTB_LANCAMENTO_ITEM I 
                 JOIN (SELECT A.LOJA_LANCAMENTO_CAIXA, 
                              A.LOJA_TERMINAL, 
                              A.EMPRESA, 
                              A.LANCAMENTO, 
                              A.ITEM, 
                              A.COD_FILIAL 
                       FROM   CTB_CHEQUE_CARTAO A 
                       UNION ALL 
                       SELECT A.LOJA_LANCAMENTO_CAIXA, 
                              A.LOJA_TERMINAL, 
                              A.EMPRESA, 
                              A.LANCAMENTO, 
                              A.ITEM, 
                              A.COD_CLIFOR AS COD_FILIAL 
                       FROM   CTB_AVISO_LANCAMENTO A) A 
                   ON I.EMPRESA = A.EMPRESA 
                      AND I.LANCAMENTO = A.LANCAMENTO 
                      AND I.ITEM = A.ITEM 
                 JOIN FILIAIS F 
                   ON A.COD_FILIAL = F.COD_FILIAL 
                 JOIN LOJAS_VAREJO L 
                   ON F.FILIAL = L.FILIAL 
                 JOIN LOJA_VENDA_PGTO B 
                   ON A.LOJA_LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
                      AND A.LOJA_TERMINAL = B.TERMINAL 
                      AND L.CODIGO_FILIAL = B.CODIGO_FILIAL 
                 JOIN LOJA_VENDA V 
                   ON B.LANCAMENTO_CAIXA = V.LANCAMENTO_CAIXA 
                      AND B.TERMINAL = V.TERMINAL 
                      AND B.CODIGO_FILIAL = V.CODIGO_FILIAL 
                 JOIN LOJA_VENDA_PRODUTO P 
                   ON V.TICKET = P.TICKET 
                      AND V.DATA_VENDA = P.DATA_VENDA 
                      AND V.CODIGO_FILIAL = P.CODIGO_FILIAL 
                 JOIN PRODUTOS PROD 
                   ON P.PRODUTO = PROD.PRODUTO 
                 JOIN PRODUTOS_GRIFFES G 
                   ON PROD.GRIFFE = G.GRIFFE 
          WHERE  I.EMPRESA = @EMPRESA 
                 AND I.LANCAMENTO = @LANCAMENTO 
      END; 

    --#8#  
    IF EXISTS(SELECT EMPRESA 
              FROM   LOJA_NOTA_FISCAL B (NOLOCK) 
              WHERE  B.CTB_LANCAMENTO IS NOT NULL 
                     AND ( B.EMPRESA = @EMPRESA 
                            OR @EMPRESA IS NULL ) 
                     AND ( B.CTB_LANCAMENTO = @LANCAMENTO 
                            OR @LANCAMENTO IS NULL )) 
      BEGIN 
          INSERT #LOJA_NOTA_FISCAL_ITEM 
                 (NF_NUMERO, 
                  SERIE_NF, 
                  CODIGO_FILIAL, 
                  RATEIO_CENTRO_CUSTO, 
                  RATEIO_FILIAL, 
                  CONTA_CONTABIL, 
                  EMPRESA, 
                  CTB_LANCAMENTO, 
                  CTB_ITEM, 
                  FILIAL, 
                  NOME_CLIFOR) 
          SELECT A.NF_NUMERO, 
                 A.SERIE_NF, 
                 A.CODIGO_FILIAL, 
                 NULL, 
                 G.COD_FILIAL, 
                 A.CONTA_CONTABIL, 
                 B.EMPRESA, 
                 B.CTB_LANCAMENTO, 
                 B.CTB_ITEM, 
                 G.FILIAL, 
                 E.NOME_CLIFOR 
          FROM   LOJA_NOTA_FISCAL_ITEM A (NOLOCK) 
                 JOIN LOJA_NOTA_FISCAL B (NOLOCK) 
                   ON A.CODIGO_FILIAL = B.CODIGO_FILIAL 
                      AND A.NF_NUMERO = B.NF_NUMERO 
                      AND A.SERIE_NF = B.SERIE_NF 
                 JOIN (SELECT A.EMPRESA, 
                              A.LANCAMENTO 
                       FROM   CTB_LANCAMENTO A (NOLOCK) 
                              JOIN CTB_LANC_PADRAO B (NOLOCK) 
                                ON A.LANCAMENTO_PADRAO = B.LANCAMENTO_PADRAO 
                              LEFT JOIN CTB_FILIAL_RATEIO K (NOLOCK) 
                                     ON A.COD_FILIAL = K.RATEIO_FILIAL 
                              JOIN (SELECT DISTINCT EMPRESA, 
                                                    LANCAMENTO 
                                    FROM   CTB_LANCAMENTO (NOLOCK) 
                                    WHERE  ( EMPRESA = @EMPRESA 
                                              OR @EMPRESA IS NULL ) 
                                           AND ( LANCAMENTO = @LANCAMENTO 
                                                  OR @LANCAMENTO IS NULL )) L 
                                ON A.EMPRESA = L.EMPRESA 
                                   AND A.LANCAMENTO = L.LANCAMENTO 
                       WHERE  A.GERADO_INTEGRACAO IN ( 1, 3 ) 
                              AND ( A.EMPRESA = @EMPRESA 
                                     OR @EMPRESA IS NULL ) 
                              AND ( A.LANCAMENTO = @LANCAMENTO 
                                     OR @LANCAMENTO IS NULL ) 
                              AND ( A.DATA_LANCAMENTO BETWEEN @DATA_INICIAL AND @DATA_FINAL 
                                     OR @DATA_INICIAL IS NULL ) 
                              AND ( A.LANCAMENTO_PADRAO = @LANCAMENTO_PADRAO 
                                     OR @LANCAMENTO_PADRAO IS NULL )) C 
                   ON B.EMPRESA = C.EMPRESA 
                      AND B.CTB_LANCAMENTO = C.LANCAMENTO 
                 JOIN CTB_LX_NATUREZAS_OPERACAO D (NOLOCK) 
                   ON A.CODIGO_FISCAL_OPERACAO = D.CODIGO_FISCAL_OPERACAO 
                 LEFT JOIN CADASTRO_CLI_FOR E (NOLOCK) 
                        ON B.COD_CLIFOR = E.COD_CLIFOR 
                 JOIN LOJAS_VAREJO F (NOLOCK) 
                   ON B.CODIGO_FILIAL = F.CODIGO_FILIAL 
                 JOIN FILIAIS G (NOLOCK) 
                   ON F.FILIAL = G.FILIAL 
          WHERE  B.CTB_LANCAMENTO IS NOT NULL 
                 AND ( B.EMPRESA = @EMPRESA 
                        OR @EMPRESA IS NULL ) 
                 AND ( B.CTB_LANCAMENTO = @LANCAMENTO 
                        OR @LANCAMENTO IS NULL ) 
                 AND B.NOTA_CANCELADA = 0; 
      END; 

    -- FIM TESTE PERFORMANCE   
    -------------------------------------------------------------------------------------------------------------------------------------------------------------------  
    BEGIN TRAN GERA_ITP_IMPOSTO; 

    -------------------------------------------------------------------------------------------------------------------------------------------------------------------  
    DECLARE CUR_LANC CURSOR FOR 
      SELECT A.EMPRESA, 
             A.LANCAMENTO, 
             A.LANCAMENTO_PADRAO, 
             A.TIPO_MOVIMENTO, 
             K.RATEIO_FILIAL 
      FROM   CTB_LANCAMENTO A (NOLOCK) 
             JOIN CTB_LANC_PADRAO B (NOLOCK) 
               ON A.LANCAMENTO_PADRAO = B.LANCAMENTO_PADRAO 
             LEFT JOIN CTB_FILIAL_RATEIO K 
                    ON A.COD_FILIAL = K.RATEIO_FILIAL 
             JOIN (SELECT DISTINCT EMPRESA, 
                                   LANCAMENTO 
                   FROM   CTB_LANCAMENTO (NOLOCK) 
                   WHERE  ( EMPRESA = @EMPRESA 
                             OR @EMPRESA IS NULL ) 
                          AND ( LANCAMENTO = @LANCAMENTO 
                                 OR @LANCAMENTO IS NULL )) L 
               ON A.EMPRESA = L.EMPRESA 
                  AND A.LANCAMENTO = L.LANCAMENTO 
             LEFT JOIN CTB_LOTE C (NOLOCK) 
                    ON A.LOTE_LANCAMENTO = C.LOTE_LANCAMENTO 
      WHERE  A.GERADO_INTEGRACAO IN ( 1, 3, 9 ) 
             AND ( A.EMPRESA = @EMPRESA 
                    OR @EMPRESA IS NULL ) 
             AND ( A.LANCAMENTO = @LANCAMENTO 
                    OR @LANCAMENTO IS NULL ) 
             AND ( A.DATA_LANCAMENTO BETWEEN @DATA_INICIAL AND @DATA_FINAL 
                    OR @DATA_INICIAL IS NULL ) 
             AND ( A.LANCAMENTO_PADRAO = @LANCAMENTO_PADRAO 
                    OR @LANCAMENTO_PADRAO IS NULL ) 
             AND ( C.TIPO_LOTE <> '01' 
                    OR C.TIPO_LOTE IS NULL ) 
      ORDER  BY A.EMPRESA, 
                A.LANCAMENTO; 

    OPEN CUR_LANC; 

    FETCH NEXT FROM CUR_LANC INTO @NEMPRESA, @NLANCAMENTO, @NLANCAMENTO_PADRAO, @TIPO_MOVIMENTO_LANC, @CRATEIO_FILIAL;

    WHILE @@FETCH_STATUS = 0 
      BEGIN 
          DECLARE CUR_LANC_PADRAO CURSOR FOR 
            SELECT A.TIPO_MOVIMENTO, 
                   LX_TIPO_LANCAMENTO = CASE 
                                          WHEN B.LX_TIPO_LANCAMENTO NOT IN ( 'CMS', 'DVC' ) THEN
                                            CASE 
                                              WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 0 
                                                   AND C.INDICA_ID_CONTABIL_TERCEIRO = 0 THEN B.LX_TIPO_LANCAMENTO
                                              WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 1 
                                                   AND C.INDICA_ID_CONTABIL_TERCEIRO = 1 THEN B.LX_TIPO_LANCAMENTO
                                              WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 1 
                                                   AND C.INDICA_ID_CONTABIL_TERCEIRO = 0 THEN 
                                                CASE 
                                                  WHEN C.CREDITO_DEBITO = 'D' THEN 'LTD' 
                                                  ELSE 'LTC' 
                                                END 
                                              WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 0 
                                                   AND C.INDICA_ID_CONTABIL_TERCEIRO = 1 THEN 
                                                CASE 
                                                  WHEN C.CREDITO_DEBITO = 'D' THEN 'LMD' 
                                                  ELSE 'LMC' 
                                                END 
                                              ELSE B.LX_TIPO_LANCAMENTO 
                                            END 
                                          ELSE 
                                            CASE 
                                              WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 1 THEN 
                                                CASE 
                                                  WHEN B.LX_TIPO_LANCAMENTO = 'CMS' THEN 'CMT' 
                                                  ELSE 'DDD' 
                                                END 
                                              ELSE B.LX_TIPO_LANCAMENTO 
                                            END 
                                        END, 
                   CONTA_CONTABIL = ISNULL(B.CONTA_CONTABIL, F.CONTA_CONTABIL), 
                   B.CODIGO_HISTORICO, 
                   D.HISTORICO_PADRAO, 
                   RATEIO_CENTRO_CUSTO = ISNULL(B.RATEIO_CENTRO_CUSTO, F.RATEIO_CENTRO_CUSTO), 
                   B.PERMITE_ALTERACAO, 
                   FORMULA = ISNULL(B.FORMULA, '0'), 
                   C.CREDITO_DEBITO, 
                   C.INDICA_ID_CONTABIL_TERCEIRO, 
                   B.ID_CONTRAPARTIDA, 
                   A.LX_TIPO_LANCAMENTO, 
                   COD_CLIFOR = CASE 
                                  WHEN C.INDICA_ID_CONTABIL_TERCEIRO = 1 THEN 
                                    CASE 
                                      WHEN B.LX_TIPO_LANCAMENTO IN ( 'VMS', 'IRE', 'IRS' ) 
                                           AND B.CADASTRAR_TERCEIRO = 1 
                                           AND B.COD_CLIFOR IS NULL THEN J.COD_CLIFOR 
                                      ELSE ISNULL(G.COD_CLIFOR, B.COD_CLIFOR) 
                                    END 
                                  ELSE 
                                    CASE 
                                      WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 1 
                                           AND B.LX_TIPO_LANCAMENTO = 'CMS' THEN ISNULL(G.COD_CLIFOR, B.COD_CLIFOR)
                                      ELSE NULL 
                                    END 
                                END, 
                   B.ID_IMPOSTO, 
                   FILIAL = CASE 
                              WHEN C.INDICA_ID_CONTABIL_TERCEIRO = 1 THEN F.FILIAL 
                              ELSE NULL 
                            END, 
                   RATEIO_FILIAL = CASE 
                                     WHEN B.INDICA_RATEIO_FILIAL_FIXO = 1 THEN L.COD_FILIAL 
                                     ELSE ISNULL(B.RATEIO_FILIAL, F.RATEIO_FILIAL) 
                                   END, 
                   B.CONTA_CONTABIL_MOVIMENTO, 
                   CADASTRAR_TERCEIRO = CASE 
                                          WHEN B.LX_TIPO_LANCAMENTO IN ( 'VMS', 'IRE', 'IRS' ) 
                                               AND B.CADASTRAR_TERCEIRO = 1 
                                               AND B.COD_CLIFOR IS NULL THEN 1 
                                          ELSE 0 
                                        END, 
                   CODIGO_CLIENTE = CASE 
                                      WHEN B.LX_TIPO_LANCAMENTO IN ( 'VMS', 'IRE', 'IRS' ) 
                                           AND B.CADASTRAR_TERCEIRO = 1 
                                           AND B.COD_CLIFOR IS NULL THEN J.CODIGO_CLIENTE 
                                      ELSE NULL 
                                    END, 
                   B.INDICA_RATEIO_FILIAL_FIXO, 
                   B.ID_DADOS_ARRECADACAO, 
                   F.CTB_ITEM 
            FROM   CTB_LANC_PADRAO A (NOLOCK) 
                   JOIN CTB_LANC_PADRAO_ITEM B (NOLOCK) 
                     ON A.LANCAMENTO_PADRAO = B.LANCAMENTO_PADRAO 
                   JOIN CTB_LX_LANCAMENTO_TIPO C (NOLOCK) 
                     ON C.LX_TIPO_LANCAMENTO = B.LX_TIPO_LANCAMENTO 
                   LEFT JOIN CTB_HIST_PADRAO D (NOLOCK) 
                          ON D.CODIGO_HISTORICO = B.CODIGO_HISTORICO 
                   LEFT JOIN (SELECT FILIAL, 
                                     NOME_CLIFOR, 
                                     CONTA_CONTABIL, 
                                     RATEIO_CENTRO_CUSTO, 
                                     RATEIO_FILIAL, 
                                     CTB_ITEM, 
                                     TIPO 
                              FROM   ( 
                                     --LANCAMENTO  
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     A.RATEIO_CENTRO_CUSTO, 
                                                     A.RATEIO_FILIAL, 
                                                     B.CTB_ITEM, 
                                                     TIPO = 1 
                                     FROM   #ENTRADAS_ITEM A (NOLOCK) 
                                            JOIN ENTRADAS B (NOLOCK) 
                                              ON A.NOME_CLIFOR = B.NOME_CLIFOR 
                                                 AND A.NF_ENTRADA = B.NF_ENTRADA 
                                                 AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     ISNULL(A.RATEIO_CENTRO_CUSTO, B.RATEIO_CENTRO_CUSTO) AS RATEIO_CENTRO_CUSTO,
                                                     ISNULL(A.RATEIO_FILIAL, B.RATEIO_FILIAL)             AS RATEIO_FILIAL,
                                                     B.CTB_ITEM, 
                                                     TIPO = 1 
                                     FROM   #FATURAMENTO_ITEM A 
                                            JOIN FATURAMENTO B (NOLOCK) 
                                              ON A.FILIAL = B.FILIAL 
                                                 AND A.NF_SAIDA = B.NF_SAIDA 
                                                 AND A.SERIE_NF = B.SERIE_NF 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT A.FILIAL, 
                                                     A.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     A.RATEIO_CENTRO_CUSTO, 
                                                     A.RATEIO_FILIAL, 
                                                     A.CTB_ITEM, 
                                                     TIPO = 1 
                                     FROM   #LOJA_NOTA_FISCAL_ITEM A 
                                     WHERE  A.EMPRESA = @NEMPRESA 
                                            AND A.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                     --A.NOTA_CANCELADA   = 0  
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     NULL, 
                                                     A.RATEIO_FILIAL, 
                                                     B.CTB_ITEM, 
                                                     TIPO = 2 
                                     FROM   #ENTRADAS_ITEM A 
                                            JOIN ENTRADAS B (NOLOCK) 
                                              ON A.NOME_CLIFOR = B.NOME_CLIFOR 
                                                 AND A.NF_ENTRADA = B.NF_ENTRADA 
                                                 AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     NULL, 
                                                     ISNULL(A.RATEIO_FILIAL, B.RATEIO_FILIAL) AS RATEIO_FILIAL,
                                                     B.CTB_ITEM, 
                                                     TIPO = 2 
                                     FROM   #FATURAMENTO_ITEM A 
                                            JOIN FATURAMENTO B (NOLOCK) 
                                              ON A.FILIAL = B.FILIAL 
                                                 AND A.NF_SAIDA = B.NF_SAIDA 
                                                 AND A.SERIE_NF = B.SERIE_NF 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT A.FILIAL, 
                                                     A.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     NULL, 
                                                     A.RATEIO_FILIAL, 
                                                     A.CTB_ITEM, 
                                                     TIPO = 2 
                                     FROM   #LOJA_NOTA_FISCAL_ITEM A 
                                     WHERE  A.EMPRESA = @NEMPRESA 
                                            AND A.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                     --A.NOTA_CANCELADA   = 0  
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     NULL, 
                                                     NULL, 
                                                     A.RATEIO_FILIAL, 
                                                     B.CTB_ITEM, 
                                                     TIPO = 6 
                                     FROM   #ENTRADAS_ITEM A 
                                            JOIN ENTRADAS B (NOLOCK) 
                                              ON A.NOME_CLIFOR = B.NOME_CLIFOR 
                                                 AND A.NF_ENTRADA = B.NF_ENTRADA 
                                                 AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND 
                                            --A.CONTA_CONTABIL    IS NULL     AND   
                                            B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     NULL, 
                                                     NULL, 
                                                     ISNULL(A.RATEIO_FILIAL, B.RATEIO_FILIAL) AS RATEIO_FILIAL,
                                                     B.CTB_ITEM, 
                                                     TIPO = 6 
                                     FROM   #FATURAMENTO_ITEM A 
                                            JOIN FATURAMENTO B (NOLOCK) 
                                              ON A.FILIAL = B.FILIAL 
                                                 AND A.NF_SAIDA = B.NF_SAIDA 
                                                 AND A.SERIE_NF = B.SERIE_NF 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND 
                                            --A.CONTA_CONTABIL  IS NULL       AND   
                                            B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT A.FILIAL, 
                                                     A.NOME_CLIFOR, 
                                                     NULL, 
                                                     NULL, 
                                                     A.RATEIO_FILIAL, 
                                                     A.CTB_ITEM, 
                                                     TIPO = 6 
                                     FROM   #LOJA_NOTA_FISCAL_ITEM A 
                                     WHERE  A.EMPRESA = @NEMPRESA 
                                            AND A.CTB_LANCAMENTO = @NLANCAMENTO 
                                     --A.CONTA_CONTABIL  IS NULL  
                                     --A.NOTA_CANCELADA   = 0  
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     NULL, 
                                                     A.RATEIO_CENTRO_CUSTO, 
                                                     A.RATEIO_FILIAL, 
                                                     B.CTB_ITEM, 
                                                     TIPO = 9 
                                     FROM   #ENTRADAS_ITEM A 
                                            JOIN ENTRADAS B (NOLOCK) 
                                              ON A.NOME_CLIFOR = B.NOME_CLIFOR 
                                                 AND A.NF_ENTRADA = B.NF_ENTRADA 
                                                 AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     NULL, 
                                                     ISNULL(A.RATEIO_CENTRO_CUSTO, B.RATEIO_CENTRO_CUSTO) AS RATEIO_CENTRO_CUSTO,
                                                     ISNULL(A.RATEIO_FILIAL, B.RATEIO_FILIAL)             AS RATEIO_FILIAL,
                                                     B.CTB_ITEM, 
                                                     TIPO = 9 
                                     FROM   #FATURAMENTO_ITEM A 
                                            JOIN FATURAMENTO B (NOLOCK) 
                                              ON A.FILIAL = B.FILIAL 
                                                 AND A.NF_SAIDA = B.NF_SAIDA 
                                                 AND A.SERIE_NF = B.SERIE_NF 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.CTB_LANCAMENTO = @NLANCAMENTO 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT A.FILIAL, 
                                                     A.NOME_CLIFOR, 
                                                     NULL, 
                                                     A.RATEIO_CENTRO_CUSTO, 
                                                     A.RATEIO_FILIAL, 
                                                     A.CTB_ITEM, 
                                                     TIPO = 9 
                                     FROM   #LOJA_NOTA_FISCAL_ITEM A 
                                     WHERE  A.EMPRESA = @NEMPRESA 
                                            AND A.CTB_LANCAMENTO = @NLANCAMENTO 
                                     --#8#  
                                     UNION ALL 
                                     SELECT DISTINCT A.FILIAL, 
                                                     '', 
                                                     NULL, 
                                                     A.RATEIO_CENTRO_CUSTO, 
                                                     A.RATEIO_FILIAL, 
                                                     0 AS CTB_ITEM, 
                                                     TIPO = 9 
                                     FROM   #LOJA_VENDA_PRODUTO A 
                                     WHERE  A.EMPRESA = @EMPRESA 
                                            AND A.LANCAMENTO = @LANCAMENTO 
                                     --#8#  
                                     UNION ALL 
                                     --NUMERO_CONFERENCIA  
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     A.RATEIO_CENTRO_CUSTO, 
                                                     A.RATEIO_FILIAL, 
                                                     B.CTB_ITEM, 
                                                     TIPO = 1 
                                     FROM   #ENTRADAS_ITEM A 
                                            JOIN ENTRADAS B (NOLOCK) 
                                              ON A.NOME_CLIFOR = B.NOME_CLIFOR 
                                                 AND A.NF_ENTRADA = B.NF_ENTRADA 
                                                 AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.NUMERO_CONFERENCIA = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     ISNULL(A.RATEIO_CENTRO_CUSTO, B.RATEIO_CENTRO_CUSTO) AS RATEIO_CENTRO_CUSTO,
                                                     ISNULL(A.RATEIO_FILIAL, B.RATEIO_FILIAL)             AS RATEIO_FILIAL,
                                                     B.CTB_ITEM, 
                                                     TIPO = 1 
                                     FROM   #FATURAMENTO_ITEM A 
                                            JOIN FATURAMENTO B (NOLOCK) 
                                              ON A.FILIAL = B.FILIAL 
                                                 AND A.NF_SAIDA = B.NF_SAIDA 
                                                 AND A.SERIE_NF = B.SERIE_NF 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.NUMERO_CONFERENCIA = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     -----  
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     NULL, 
                                                     A.RATEIO_FILIAL, 
                                                     B.CTB_ITEM, 
                                                     TIPO = 2 
                                     FROM   #ENTRADAS_ITEM A 
                                            JOIN ENTRADAS B (NOLOCK) 
                                              ON A.NOME_CLIFOR = B.NOME_CLIFOR 
                                                 AND A.NF_ENTRADA = B.NF_ENTRADA 
                                                 AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.NUMERO_CONFERENCIA = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     A.CONTA_CONTABIL, 
                                                     NULL, 
                                                     ISNULL(A.RATEIO_FILIAL, B.RATEIO_FILIAL) AS RATEIO_FILIAL,
                                                     B.CTB_ITEM, 
                                                     TIPO = 2 
                                     FROM   #FATURAMENTO_ITEM A 
                                            JOIN FATURAMENTO B (NOLOCK) 
                                              ON A.FILIAL = B.FILIAL 
                                                 AND A.NF_SAIDA = B.NF_SAIDA 
                                                 AND A.SERIE_NF = B.SERIE_NF 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.NUMERO_CONFERENCIA = @NLANCAMENTO 
                                            AND A.CONTA_CONTABIL IS NOT NULL 
                                            AND B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     NULL, 
                                                     NULL, 
                                                     A.RATEIO_FILIAL, 
                                                     B.CTB_ITEM, 
                                                     TIPO = 6 
                                     FROM   #ENTRADAS_ITEM A 
                                            JOIN ENTRADAS B (NOLOCK) 
                                              ON A.NOME_CLIFOR = B.NOME_CLIFOR 
                                                 AND A.NF_ENTRADA = B.NF_ENTRADA 
                                                 AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.NUMERO_CONFERENCIA = @NLANCAMENTO 
                                            AND 
                                            --A.CONTA_CONTABIL    IS NULL       AND   
                                            B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     NULL, 
                                                     NULL, 
                                                     ISNULL(A.RATEIO_FILIAL, B.RATEIO_FILIAL) AS RATEIO_FILIAL,
                                                     B.CTB_ITEM, 
                                                     TIPO = 6 
                                     FROM   #FATURAMENTO_ITEM A 
                                            JOIN FATURAMENTO B (NOLOCK) 
                                              ON A.FILIAL = B.FILIAL 
                                                 AND A.NF_SAIDA = B.NF_SAIDA 
                                                 AND A.SERIE_NF = B.SERIE_NF 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.NUMERO_CONFERENCIA = @NLANCAMENTO 
                                            AND 
                                            --A.CONTA_CONTABIL    IS NULL         AND   
                                            B.NOTA_CANCELADA = 0 
                                     UNION ALL 
                                     SELECT DISTINCT B.FILIAL, 
                                                     B.NOME_CLIFOR, 
                                                     NULL, 
                                                     A.RATEIO_CENTRO_CUSTO, 
                                                     A.RATEIO_FILIAL, 
                                                     B.CTB_ITEM, 
                                                     TIPO = 9 
                                     FROM   #ENTRADAS_ITEM A 
                                            JOIN ENTRADAS B (NOLOCK) 
                                              ON A.NOME_CLIFOR = B.NOME_CLIFOR 
                                                 AND A.NF_ENTRADA = B.NF_ENTRADA 
                                                 AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA 
                                     WHERE  B.EMPRESA = @NEMPRESA 
                                            AND B.NUMERO_CONFERENCIA = @NLANCAMENTO 
                                            AND B.NOTA_CANCELADA = 0 
                                      UNION ALL 
                                      SELECT DISTINCT B.FILIAL, 
                                                      B.NOME_CLIFOR, 
                                                      NULL, 
                                                      ISNULL(A.RATEIO_CENTRO_CUSTO, B.RATEIO_CENTRO_CUSTO) AS RATEIO_CENTRO_CUSTO,
                                                      ISNULL(A.RATEIO_FILIAL, B.RATEIO_FILIAL)             AS RATEIO_FILIAL,
                                                      B.CTB_ITEM, 
                                                      TIPO = 9 
                                      FROM   #FATURAMENTO_ITEM A 
                                             JOIN FATURAMENTO B (NOLOCK) 
                                               ON A.FILIAL = B.FILIAL 
                                                  AND A.NF_SAIDA = B.NF_SAIDA 
                                                  AND A.SERIE_NF = B.SERIE_NF 
                                      WHERE  B.EMPRESA = @NEMPRESA 
                                             AND B.NUMERO_CONFERENCIA = @NLANCAMENTO 
                                             AND B.NOTA_CANCELADA = 0) A 
                              GROUP  BY FILIAL, 
                                        NOME_CLIFOR, 
                                        CONTA_CONTABIL, 
                                        RATEIO_CENTRO_CUSTO, 
                                        RATEIO_FILIAL, 
                                        CTB_ITEM, 
                                        TIPO) F 
                          ON ( B.CONTA_CONTABIL IS NULL 
                               AND B.RATEIO_CENTRO_CUSTO IS NULL 
                               AND B.RATEIO_FILIAL IS NULL 
                               AND F.TIPO = 1 ) 
                              OR ( B.CONTA_CONTABIL IS NULL 
                                   AND B.RATEIO_CENTRO_CUSTO IS NOT NULL 
                                   AND B.RATEIO_FILIAL IS NULL 
                                   AND F.TIPO = 2 ) 
                              OR 
                             --(B.CONTA_CONTABIL IS NULL   AND B.RATEIO_CENTRO_CUSTO IS NULL     AND B.RATEIO_FILIAL  IS NOT NULL AND F.TIPO = 3)     OR 
                             --(B.CONTA_CONTABIL IS NULL   AND B.RATEIO_CENTRO_CUSTO IS NOT NULL   AND B.RATEIO_FILIAL  IS NOT NULL AND F.TIPO = 4)     OR 
                             --(B.CONTA_CONTABIL IS NOT NULL  AND B.RATEIO_CENTRO_CUSTO IS NOT NULL   AND B.RATEIO_FILIAL  IS NOT NULL AND F.TIPO = 5)     OR 
                             ( B.CONTA_CONTABIL IS NOT NULL 
                               AND B.RATEIO_CENTRO_CUSTO IS NOT NULL 
                               AND B.RATEIO_FILIAL IS NULL 
                               AND F.TIPO = 6 ) 
                              OR 
                             --(B.CONTA_CONTABIL IS NOT NULL  AND B.RATEIO_CENTRO_CUSTO IS NULL     AND B.RATEIO_FILIAL  IS NOT NULL AND F.TIPO = 7)     OR 
                             ( B.CONTA_CONTABIL IS NOT NULL 
                               AND B.RATEIO_CENTRO_CUSTO IS NULL 
                               AND B.RATEIO_FILIAL IS NULL 
                               AND F.TIPO = 9 ) 
                   --OR (F.CONTA_CONTABIL IS NULL     AND F.RATEIO_CENTRO_CUSTO IS NULL     AND F.RATEIO_FILIAL IS NULL AND F.TIPO = 8 AND B.CONTA_CONTABIL IS NOT NULL AND B.RATEIO_CENTRO_CUSTO IS NOT NULL )
                   LEFT JOIN CADASTRO_CLI_FOR G (NOLOCK) 
                          ON G.NOME_CLIFOR = F.NOME_CLIFOR 
                   LEFT JOIN CTB_CONTA_PLANO H (NOLOCK) 
                          ON H.CONTA_CONTABIL = ISNULL(B.CONTA_CONTABIL, F.CONTA_CONTABIL) 
                   LEFT JOIN CTB_CONTA_TIPO I (NOLOCK) 
                          ON I.TIPO_CONTA = H.TIPO_CONTA 
                   LEFT JOIN #LOJAS_TERCEIRO J 
                          ON B.LX_TIPO_LANCAMENTO IN ( 'VMS', 'IRE', 'IRS' ) 
                             AND B.CADASTRAR_TERCEIRO = 1 
                             AND B.COD_CLIFOR IS NULL 
                   LEFT JOIN FILIAIS L (NOLOCK) 
                          ON F.FILIAL = L.FILIAL 
            WHERE  A.LANCAMENTO_PADRAO = @NLANCAMENTO_PADRAO 
            GROUP  BY A.TIPO_MOVIMENTO, 
                      CASE 
                        WHEN B.LX_TIPO_LANCAMENTO NOT IN ( 'CMS', 'DVC' ) THEN 
                          CASE 
                            WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 0 
                                 AND C.INDICA_ID_CONTABIL_TERCEIRO = 0 THEN B.LX_TIPO_LANCAMENTO
                            WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 1 
                                 AND C.INDICA_ID_CONTABIL_TERCEIRO = 1 THEN B.LX_TIPO_LANCAMENTO
                            WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 1 
                                 AND C.INDICA_ID_CONTABIL_TERCEIRO = 0 THEN 
                              CASE 
                                WHEN C.CREDITO_DEBITO = 'D' THEN 'LTD' 
                                ELSE 'LTC' 
                              END 
                            WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 0 
                                 AND C.INDICA_ID_CONTABIL_TERCEIRO = 1 THEN 
                              CASE 
                                WHEN C.CREDITO_DEBITO = 'D' THEN 'LMD' 
                                ELSE 'LMC' 
                              END 
                            ELSE B.LX_TIPO_LANCAMENTO 
                          END 
                        ELSE 
                          CASE 
                            WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 1 THEN 
                              CASE 
                                WHEN B.LX_TIPO_LANCAMENTO = 'CMS' THEN 'CMT' 
                                ELSE 'DDD' 
                              END 
                            ELSE B.LX_TIPO_LANCAMENTO 
                          END 
                      END, 
                      ISNULL(B.CONTA_CONTABIL, F.CONTA_CONTABIL), 
                      B.CODIGO_HISTORICO, 
                      D.HISTORICO_PADRAO, 
                      ISNULL(B.RATEIO_CENTRO_CUSTO, F.RATEIO_CENTRO_CUSTO), 
                      B.PERMITE_ALTERACAO, 
                      ISNULL(B.FORMULA, '0'), 
                      C.CREDITO_DEBITO, 
                      C.INDICA_ID_CONTABIL_TERCEIRO, 
                      B.ID_CONTRAPARTIDA, 
                      A.LX_TIPO_LANCAMENTO, 
                      CASE 
                        WHEN C.INDICA_ID_CONTABIL_TERCEIRO = 1 THEN 
                          CASE 
                            WHEN B.LX_TIPO_LANCAMENTO IN ( 'VMS', 'IRE', 'IRS' ) 
                                 AND B.CADASTRAR_TERCEIRO = 1 
                                 AND B.COD_CLIFOR IS NULL THEN J.COD_CLIFOR 
                            ELSE ISNULL(G.COD_CLIFOR, B.COD_CLIFOR) 
                          END 
                        ELSE 
                          CASE 
                            WHEN I.INDICA_ID_CONTABIL_TERCEIRO = 1 
                                 AND B.LX_TIPO_LANCAMENTO = 'CMS' THEN ISNULL(G.COD_CLIFOR, B.COD_CLIFOR)
                            ELSE NULL 
                          END 
                      END, 
                      SEQUENCIA_PROCESSAR, 
                      LANCAMENTO_PADRAO_ITEM, 
                      B.ID_IMPOSTO, 
                      F.FILIAL, 
                      CASE 
                        WHEN B.INDICA_RATEIO_FILIAL_FIXO = 1 THEN L.COD_FILIAL 
                        ELSE ISNULL(B.RATEIO_FILIAL, F.RATEIO_FILIAL) 
                      END, 
                      B.CONTA_CONTABIL_MOVIMENTO, 
                      CASE 
                        WHEN B.LX_TIPO_LANCAMENTO IN ( 'VMS', 'IRE', 'IRS' ) 
                             AND B.CADASTRAR_TERCEIRO = 1 
                             AND B.COD_CLIFOR IS NULL THEN 1 
                        ELSE 0 
                      END, 
                      CASE 
                        WHEN B.LX_TIPO_LANCAMENTO IN ( 'VMS', 'IRE', 'IRS' ) 
                             AND B.CADASTRAR_TERCEIRO = 1 
                             AND B.COD_CLIFOR IS NULL THEN J.CODIGO_CLIENTE 
                        ELSE NULL 
                      END, 
                      B.INDICA_RATEIO_FILIAL_FIXO, 
                      B.ID_DADOS_ARRECADACAO, 
                      F.CTB_ITEM 
            ORDER  BY SEQUENCIA_PROCESSAR, 
                      LANCAMENTO_PADRAO_ITEM 

          OPEN CUR_LANC_PADRAO 

          FETCH NEXT FROM CUR_LANC_PADRAO INTO @NTIPO_MOVIMENTO, @CLX_TIPO_LANCAMENTO, @CCONTA_CONTABIL, @CCODIGO_HISTORICO, @CHISTORICO,
          @CRATEIO_CENTRO_CUSTO, @NPERMITE_ALTERACAO, @CFORMULA, @CCREDITO_DEBITO, @NINDICA_ID_CONTABIL_TERCEIRO, @ID_CONTRAPARTIDA,
          @CTIPOLANCPRINCIPAL, 
          @CCOD_CLIFOR, @ID_IMPOSTO_LANC_PADRAO, @FILIAL_NOTA, @RATEIO_FILIAL_CUR, @CONTA_MOVIMENTO_CUR, @CADASTRAR_TERCEIRO_CUR, @CODIGO_CLIENTE_CUR,
          @INDICA_RATEIO_FIXO_CUR, @ID_DADOS_ARRECADACAO_LANC_CUR, @NITEM_CUR; 

          WHILE @@FETCH_STATUS = 0 
            BEGIN 
                IF @INDICA_RATEIO_FIXO_CUR = 1 
                  SELECT @RATEIO_FILIAL_FILTRO = NULL 
                ELSE 
                  SELECT @RATEIO_FILIAL_FILTRO = @RATEIO_FILIAL_CUR; 

                SELECT @CFORMULA = Replace(@CFORMULA, '@EMPRESA', ISNULL(@NEMPRESA, '''' + '' + ''''));

                SELECT @CFORMULA = Replace(@CFORMULA, '@LANCAMENTO', ISNULL(@NLANCAMENTO, '''' + '' + ''''));

                SELECT @CFORMULA = Replace(@CFORMULA, '@ITEM', ISNULL(@NITEM_CUR, '''' + '' + ''''));

                SELECT @CFORMULA = Replace(@CFORMULA, '@CONTA_CONTABIL', ISNULL('''' + @CCONTA_CONTABIL + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@RATEIO_CENTRO_CUSTO', ISNULL('''' + @CRATEIO_CENTRO_CUSTO + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@RATEIO_FILIAL', ISNULL('''' + @RATEIO_FILIAL_FILTRO + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@COD_CLIFOR', ISNULL('''' + @CCOD_CLIFOR + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@EMP', ISNULL(@NEMPRESA, '''' + '' + ''''));

                SELECT @CFORMULA = Replace(@CFORMULA, '@LANC', ISNULL(@NLANCAMENTO, '''' + '' + ''''));

                SELECT @CFORMULA = Replace(@CFORMULA, '@CONTA_CTB', ISNULL('''' + @CCONTA_CONTABIL + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@RAT_CC', ISNULL('''' + @CRATEIO_CENTRO_CUSTO + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@RAT_F', ISNULL('''' + @RATEIO_FILIAL_FILTRO + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@CLIFOR', ISNULL('''' + @CCOD_CLIFOR + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@E', ISNULL(@NEMPRESA, '''' + '' + ''''));

                SELECT @CFORMULA = Replace(@CFORMULA, '@L', ISNULL(@NLANCAMENTO, '''' + '' + ''''));

                SELECT @CFORMULA = Replace(@CFORMULA, '@I', ISNULL(@NITEM_CUR, '''' + '' + ''''));

                SELECT @CFORMULA = Replace(@CFORMULA, '@CC', ISNULL('''' + @CRATEIO_CENTRO_CUSTO + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@CI', ISNULL('''' + @CONTA_MOVIMENTO_CUR + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@CV', ISNULL('''' + @CODIGO_CLIENTE_CUR + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@C', ISNULL('''' + @CCONTA_CONTABIL + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@F', ISNULL('''' + @RATEIO_FILIAL_FILTRO + '''', 'NULL'));

                SELECT @CFORMULA = Replace(@CFORMULA, '@TCF', ISNULL('''' + @CCOD_CLIFOR + '''', 'NULL'));

                -- SE O LX_TIPO_LANCAMENTO = LVZ VERIFICAR SE NO FATURAMENTO_IMPOSTO EXISTE O IMPOSTO 15 PARA QUALQUER NOTA DO LANCAMENTO  
                IF @CLX_TIPO_LANCAMENTO = 'LVZ' 
                  BEGIN 
                      IF (SELECT ISNULL(Count(*), 0) 
                          FROM   FATURAMENTO_IMPOSTO A (NOLOCK) 
                                 JOIN FATURAMENTO B (NOLOCK) 
                                   ON A.FILIAL = B.FILIAL 
                                      AND A.NF_SAIDA = B.NF_SAIDA 
                                      AND A.SERIE_NF = B.SERIE_NF 
                          WHERE  B.EMPRESA = @NEMPRESA 
                                 AND B.CTB_LANCAMENTO = @NLANCAMENTO 
                                 AND ID_IMPOSTO = 15) = 0 
                        GOTO PROXIMO; 
                  END; 

                --    SELECT @CCOD_CLIFOR = NULL, @NFATOR=1  
                SELECT @NFATOR = 1; 

                -- BUSCA NA TABELA CTB_LANCAMENTO_ITEM DADOS PARA FAZER A CONTRAPARTIDA  
                SELECT TOP 1 @CRATEIO_CENTRO_CUSTO = ISNULL(@CRATEIO_CENTRO_CUSTO, A.RATEIO_CENTRO_CUSTO),
                             @NCAMBIO = A.CAMBIO_NA_DATA, 
                             @CMOEDA = A.MOEDA, 
                             @CRATEIO_FILIAL = ISNULL(@RATEIO_FILIAL_CUR, ISNULL(A.RATEIO_FILIAL, @CRATEIO_FILIAL))
                FROM   CTB_LANCAMENTO_ITEM A (NOLOCK) 
                WHERE  A.EMPRESA = @NEMPRESA 
                       AND A.LANCAMENTO = @NLANCAMENTO 
                       AND A.GERADO_AUTOMATICO_TIPO = 1; 

                -- BUSCA NO CADSTRO DE CONTA CONTÁBIL O S DADOS PADrÕES  
                SELECT @CCODIGO_HISTORICO = ISNULL(@CCODIGO_HISTORICO, A.CODIGO_HISTORICO), 
                       @CHISTORICO = ISNULL(@CHISTORICO, B.HISTORICO_PADRAO), 
                       @CRATEIO_CENTRO_CUSTO = ISNULL(@CRATEIO_CENTRO_CUSTO, A.RATEIO_CENTRO_CUSTO),
                       @CMOEDA = A.MOEDA 
                FROM   CTB_CONTA_PLANO A (NOLOCK) 
                       JOIN CTB_HIST_PADRAO B (NOLOCK) 
                         ON B.CODIGO_HISTORICO = A.CODIGO_HISTORICO 
                WHERE  A.CONTA_CONTABIL = @CCONTA_CONTABIL; 

                SELECT @CRESULT = 0.00; 

                IF Rtrim(@CFORMULA) <> '' 
                  EXEC LX_EXEC_FUNCTION 
                    @CFORMULA, 
                    @CRESULT OUTPUT; 

                SELECT @NVALOR = ISNULL(CONVERT(NUMERIC(14, 2), @CRESULT), 0); 

                IF @CCREDITO_DEBITO = 'C' 
                  SELECT @NCREDITO = @NVALOR, 
                         @NDEBITO = 0 
                ELSE 
                  SELECT @NCREDITO = 0, 
                         @NDEBITO = @NVALOR; 

                SELECT @CMOEDA_PADRAO = MOEDA 
                FROM   MOEDAS (NOLOCK) 
                WHERE  INDICA_PADRAO = 1; 

                SELECT @CMOEDA = @CMOEDA_PADRAO 
                WHERE  @CMOEDA IS NULL; 

                IF @CMOEDA = @CMOEDA_PADRAO 
                  SELECT @NDEBITO_MOEDA = @NDEBITO, 
                         @NCREDITO_MOEDA = @NCREDITO; 
                ELSE 
                  BEGIN 
                      IF @NCAMBIO IS NULL 
                        BEGIN 
                            SELECT @NCAMBIO = CAMBIO_ATUAL, 
                                   @NFATOR = 1/*FATOR_CAMBIO*/ 
                            FROM   W_MOEDAS_CONVERSAO 
                            WHERE  MOEDA = @CMOEDA; 
                        END 

                      SELECT @NDEBITO_MOEDA = @NDEBITO / Power(@NCAMBIO, @NFATOR), 
                             @NCREDITO_MOEDA = @NCREDITO / Power(@NCAMBIO, @NFATOR); 
                  END; 

                IF (SELECT ISNULL(Count(*), 0) 
                    FROM   CTB_LX_LANCAMENTO_TIPO (NOLOCK) 
                    WHERE  LX_TIPO_LANCAMENTO = @CLX_TIPO_LANCAMENTO 
                           AND SOMENTE_LANC_CONTABIL = 1) > 0 
                  BEGIN 
                      SELECT @NITEM = 0; 

                      -- VERIFICA SE NO MOVIMENTO JÁ TEM UM LANCAMENTO ITEM COM ESTÁ CONTA E TIPO LANÇAMENTO    
                      SELECT @NITEM = ITEM 
                      FROM   CTB_LANCAMENTO_ITEM (NOLOCK) 
                      WHERE  EMPRESA = @NEMPRESA 
                             AND LANCAMENTO = @NLANCAMENTO 
                             AND LX_TIPO_LANCAMENTO = @CLX_TIPO_LANCAMENTO 
                             AND CONTA_CONTABIL = @CCONTA_CONTABIL 
                             AND RATEIO_CENTRO_CUSTO = @CRATEIO_CENTRO_CUSTO 
                             AND RATEIO_FILIAL = @RATEIO_FILIAL_CUR; 

                      IF Charindex('FX_IMP_SUM', @CFORMULA) > 0 
                        SELECT @NITEM = 0; 

                      SELECT @COD_FILIAL_LANC = COD_FILIAL, 
                             @DATA_CAMBIO = DATA_LANCAMENTO 
                      FROM   CTB_LANCAMENTO (NOLOCK) 
                      WHERE  EMPRESA = @NEMPRESA 
                             AND LANCAMENTO = @NLANCAMENTO; 

                      -- CADASTRAR CODIGO_CLIENTE DE LOJA NO CADASTRO_CLI_FOR  
                      IF @CADASTRAR_TERCEIRO_CUR = 1 
                         AND @CODIGO_CLIENTE_CUR IS NOT NULL 
                         AND @CCOD_CLIFOR IS NULL 
                        BEGIN 
                            IF (SELECT ISNULL(Count(*), 0) 
                                FROM   CADASTRO_CLI_FOR (NOLOCK) 
                                WHERE  CGC_CPF IN (SELECT CPF_CGC 
                                                   FROM   CLIENTES_VAREJO (NOLOCK) 
                                                   WHERE  CODIGO_CLIENTE = @CODIGO_CLIENTE_CUR)) = 0
                              BEGIN 
                                  -- BUSCA SEQUENCIA  
                                  SELECT @SEQUENCIA = NULL; 

                                  WHILE @SEQUENCIA IS NULL 
                                    BEGIN 
                                        EXEC LX_SEQUENCIAL 
                                          'CLIENTES_ATACADO.CLIFOR', 
                                          NULL, 
                                          @SEQUENCIA= @SEQUENCIA OUTPUT; 

                                        IF (SELECT ISNULL(Count(*), 0) 
                                            FROM   CADASTRO_CLI_FOR (NOLOCK) 
                                            WHERE  COD_CLIFOR = @SEQUENCIA) > 0 
                                          SELECT @SEQUENCIA = NULL; 
                                    END; 

                                  -- FIM BUSCA SEQUENCIA  
                                  -- INCLUSAO  
                                  SELECT @INDICADOR_FISCAL_TERCEIRO_VAREJO = NULL; 

                                  IF EXISTS(SELECT * 
                                            FROM   SYSOBJECTS 
                                            WHERE  NAME = 'FX_OBJ_BUSCA_INDICADOR_LOJA') 
                                    SELECT @INDICADOR_FISCAL_TERCEIRO_VAREJO = DBO.FX_OBJ_BUSCA_INDICADOR_LOJA(@CODIGO_CLIENTE_CUR);

                                  --1º insert --#3#  
                                  INSERT #CADASTRO_CLI_FOR 
                                         (NOME_CLIFOR, 
                                          CLIFOR, 
                                          CGC_CPF, 
                                          RAZAO_SOCIAL, 
                                          PJ_PF, 
                                          RG_IE, 
                                          UF, 
                                          COBRANCA_UF, 
                                          ENTREGA_UF, 
                                          CADASTRAMENTO, 
                                          COBRANCA_IE, 
                                          INDICA_FORNECEDOR, 
                                          INDICA_CLIENTE, 
                                          IND_REPRESENTANTE, 
                                          INDICA_FILIAL, 
                                          ENTREGA_CGC, 
                                          ENTREGA_IE, 
                                          INATIVO, 
                                          ISENTO_IPI, 
                                          ISENTO_ICMS, 
                                          ACEITA_DIAS_FIXO, 
                                          COD_CLIFOR, 
                                          INDICADOR_FISCAL_TERCEIRO, 
                                          COBRANCA_CGC, 
                                          PAIS, 
                                          COBRANCA_PAIS, 
                                          ENTREGA_PAIS, 
                                          CIDADE) 
                                  SELECT ISNULL(A.CPF_CGC, 'Z' + @SEQUENCIA), 
                                         @SEQUENCIA, 
                                         ISNULL(A.CPF_CGC, 'Z' + @SEQUENCIA), 
                                         A.CLIENTE_VAREJO, 
                                         CASE 
                                           WHEN PF_PJ = 1 THEN 0 
                                           ELSE 1 
                                         END, 
                                         ISNULL(A.RG_IE, 'Z' + @SEQUENCIA), 
                                         ISNULL(B.UF, ISNULL(@ESTADO_PADRAO, 'SP')), 
                                         ISNULL(B.UF, ISNULL(@ESTADO_PADRAO, 'SP')), 
                                         ISNULL(B.UF, ISNULL(@ESTADO_PADRAO, 'SP')), 
                                         Getdate(), 
                                         ISNULL(A.RG_IE, 'Z' + @SEQUENCIA), 
                                         0, 
                                         1, 
                                         0, 
                                         0, 
                                         ISNULL(A.CPF_CGC, 'Z' + @SEQUENCIA), 
                                         ISNULL(A.RG_IE, 'Z' + @SEQUENCIA), 
                                         0, 
                                         0, 
                                         0, 
                                         0, 
                                         @SEQUENCIA, 
                                         ISNULL(@INDICADOR_FISCAL_TERCEIRO_VAREJO, CASE 
                                                                                     WHEN @TIPO_VAREJO IS NULL THEN 8
                                                                                     ELSE ( CASE
                                                                                              WHEN Rtrim(@TIPO_VAREJO) = Rtrim(A.TIPO_VAREJO) THEN 2
                                                                                              ELSE 8
                                                                                            END )
                                                                                   END), 
                                         ISNULL(A.CPF_CGC, 'Z' + @SEQUENCIA), 
                                         @PAIS_PADRAO, 
                                         @PAIS_PADRAO, 
                                         @PAIS_PADRAO, 
                                         A.CIDADE 
                                  FROM   CLIENTES_VAREJO A (NOLOCK) 
                                         LEFT JOIN UNIDADES_FEDERACAO B (NOLOCK) 
                                                ON A.UF = B.UF 
                                  WHERE  A.CODIGO_CLIENTE = @CODIGO_CLIENTE_CUR; 

                                  IF @@ERROR <> 0 
                                    GOTO ERROR; 

                                  SELECT @FILIAL = FILIAL 
                                  FROM   FILIAIS (NOLOCK) 
                                  WHERE  COD_FILIAL = @COD_FILIAL_LANC; 

                                  --2ºinsert --#3#  
                                  INSERT #CLIENTES_ATACADO 
                                         (CLIENTE_ATACADO, 
                                          COD_CLIENTE, 
                                          CONDICAO_PGTO, 
                                          REGIAO, 
                                          FILIAL, 
                                          PONTUALIDADE, 
                                          TRANSPORTADORA, 
                                          CONCEITO, 
                                          TIPO, 
                                          TIPO_BLOQUEIO, 
                                          CGC_CPF, 
                                          CLIFOR, 
                                          FRETE_A_PAGAR, 
                                          SEM_CREDITO, 
                                          ACEITA_JUNTAR_PED, 
                                          INATIVO, 
                                          EXPEDICAO_COMPLETO_PEDIDO, 
                                          EXPEDICAO_COMPLETO_PACK, 
                                          EXPEDICAO_COMPLETO_TAMANHOS, 
                                          EXPEDICAO_COMPLETO_COR, 
                                          EXPEDICAO_COMPLETO_COORDENADO, 
                                          EXPEDICAO_COMPLETO_CARTELA, 
                                          EXPEDICAO_COMPLETO_FAIXAS, 
                                          EXPEDICAO_ADEQUACAO_TAMANHO, 
                                          EXPEDICAO_ADEQUACAO_COR, 
                                          MULTI_DESCONTO_ACUMULAR, 
                                          INDICADOR_VENDA, 
                                          CTB_CONTA_CONTABIL) 
                                  SELECT ISNULL(CPF_CGC, 'Z' + @SEQUENCIA), 
                                         @SEQUENCIA, 
                                         @COND_PGTO_PADRAO,-- condicao de pagamento  
                                         @REGIAO_PADRAO,-- regiao  
                                         @FILIAL,-- filial  
                                         @PONTUALIDADE_PADRAO,-- pontualidadae  
                                         @TRANSPORTADORA_PADRAO,-- transportadora  
                                         @CONCEITO_PADRAO,-- conceito  
                                         @TIPO_PADRAO,-- tipo  
                                         @TIPO_BLOQUEIO_PADRAO,-- tipo bloqueio  
                                         ISNULL(CPF_CGC, 'Z' + @SEQUENCIA),-- cgc_cpf    
                                         @SEQUENCIA,-- clifor   
                                         0,-- FRETE A PAGAR  
                                         0,-- SEM CREDITO  
                                         0,-- ACEITA JUNTAR PED  
                                         0,-- INATIVO  
                                         0,-- EXPEDICAO_COMPLETO_PEDIDO  
                                         0,-- EXPEDICAO_COMPLETO_PACK  
                                         0,-- EXPEDICAO_COMPLETO_TAMANHOS  
                                         0,-- EXPEDICAO_COMPLETO_COR  
                                         0,-- EXPEDICAO_COMPLETO_COORDENADO  
                                         0,-- EXPEDICAO_COMPLETO_CARTELA  
                                         0,-- EXPEDICAO_COMPLETO_FAIXAS  
                                         0,-- EXPEDICAO_ADEQUQCAO_TAMANHO  
                                         0,-- EXPEDICAO_ADEQUQCAO_COR  
                                         0,-- MULTI_DESCONTO_ACUMULAR  
                                         '',-- INDICADOR_VENDA,  
                                         @CONTA_CONTABIL_CLI 
                                  FROM   CLIENTES_VAREJO (NOLOCK) 
                                  WHERE  CODIGO_CLIENTE = @CODIGO_CLIENTE_CUR; 

                                  IF @@ERROR <> 0 
                                    GOTO ERROR; 

                                  SELECT @CCOD_CLIFOR = COD_CLIFOR 
                                  FROM   CADASTRO_CLI_FOR (NOLOCK) 
                                  WHERE  COD_CLIFOR = @SEQUENCIA; 
                              -- FIM INCLUSAO  
                              END; 
                            ELSE 
                              BEGIN 
                                  SELECT @CCOD_CLIFOR = COD_CLIFOR 
                                  FROM   (SELECT TOP 1 COD_CLIFOR 
                                          FROM   CADASTRO_CLI_FOR (NOLOCK) 
                                          WHERE  CGC_CPF IN (SELECT CPF_CGC 
                                                             FROM   CLIENTES_VAREJO (NOLOCK) 
                                                             WHERE  CODIGO_CLIENTE = @CODIGO_CLIENTE_CUR)) A
                              END; 
                        END; 

                      SELECT @CCOD_CLIFOR = CASE 
                                              WHEN INDICA_ID_CONTABIL_TERCEIRO = 1 
                                                   AND @CCOD_CLIFOR IS NULL THEN @COD_FILIAL_LANC
                                              ELSE @CCOD_CLIFOR 
                                            END 
                      FROM   CTB_LX_LANCAMENTO_TIPO (NOLOCK) 
                      WHERE  LX_TIPO_LANCAMENTO = @CLX_TIPO_LANCAMENTO; 

                      -- VERIFICA TIPO MOVIMENTO  
                      IF ( @MOVIMENTO_PADRAO <> @TIPO_MOVIMENTO_LANC 
                            OR @CLX_TIPO_LANCAMENTO NOT IN ( 'IRE', 'IRS', 'DIS' ) ) 
                         AND ( @NVALOR > 0 
                                OR @CLX_TIPO_LANCAMENTO = 'LVZ' ) 
                        BEGIN 
                            SELECT @MOEDA_CONTA = NULL; 

                            SELECT @CAMBIO = NULL; 

                            IF EXISTS(SELECT * 
                                      FROM   CTB_CONTA_PLANO (NOLOCK) 
                                      WHERE  CONTA_CONTABIL = @CCONTA_CONTABIL 
                                             AND MOEDA <> @MOEDA_PADRAO) 
                              BEGIN 
                                  SELECT @MOEDA_CONTA = MOEDA 
                                  FROM   CTB_CONTA_PLANO (NOLOCK) 
                                  WHERE  CONTA_CONTABIL = @CCONTA_CONTABIL; 

                                  SELECT @CAMBIO = VALOR 
                                  FROM   MOEDAS_CONVERSAO (NOLOCK) A 
                                         JOIN (SELECT MOEDA, 
                                                      Max(DATA) AS DATA 
                                               FROM   MOEDAS_CONVERSAO(NOLOCK) 
                                               WHERE  MOEDA = @MOEDA_CONTA 
                                                      AND DATA <= @DATA_CAMBIO 
                                               GROUP  BY MOEDA) B 
                                           ON A.MOEDA = B.MOEDA 
                                              AND A.DATA = B.DATA; 

                                  SELECT @NDEBITO_MOEDA = CASE 
                                                            WHEN @NDEBITO > 0 THEN ( @NDEBITO / @CAMBIO )
                                                            ELSE 0.00 
                                                          END; 

                                  SELECT @NCREDITO_MOEDA = CASE 
                                                             WHEN @NCREDITO > 0 THEN ( @NCREDITO / @CAMBIO )
                                                             ELSE 0.00 
                                                           END; 
                              END; 
                            ELSE 
                              SELECT @MOEDA_CONTA = @MOEDA_PADRAO; 

                            SELECT @NITEM = 0; 

                            SELECT @NITEM = ITEM 
                            FROM   CTB_LANCAMENTO_ITEM (NOLOCK) 
                            WHERE  EMPRESA = @NEMPRESA 
                                   AND LANCAMENTO = @NLANCAMENTO 
                                   AND LX_TIPO_LANCAMENTO = @CLX_TIPO_LANCAMENTO 
                                   AND CONTA_CONTABIL = @CCONTA_CONTABIL 
                                   AND RATEIO_CENTRO_CUSTO = @CRATEIO_CENTRO_CUSTO 
                                   AND RATEIO_FILIAL = @RATEIO_FILIAL_CUR 
                                   AND ISNULL(COD_CLIFOR, '') = ISNULL(@CCOD_CLIFOR, ''); 

                            IF ISNULL(@NITEM, 0) = 0 
                              BEGIN 
                                  SELECT @NITEM = ISNULL(Max(ITEM), 0) + 1 
                                  FROM   CTB_LANCAMENTO_ITEM (NOLOCK) 
                                  WHERE  EMPRESA = @NEMPRESA 
                                         AND LANCAMENTO = @NLANCAMENTO; 

                                  BEGIN TRY --#9#  
                                      INSERT INTO CTB_LANCAMENTO_ITEM 
                                                  (EMPRESA, 
                                                   LANCAMENTO, 
                                                   ITEM, 
                                                   COD_CLIFOR, 
                                                   CONTA_CONTABIL, 
                                                   LX_TIPO_LANCAMENTO, 
                                                   CREDITO, 
                                                   DEBITO, 
                                                   HISTORICO, 
                                                   CODIGO_HISTORICO, 
                                                   RATEIO_CENTRO_CUSTO, 
                                                   CONCILIADO, 
                                                   MOEDA, 
                                                   PERMITE_ALTERACAO, 
                                                   DISPARA_FORMULA, 
                                                   DEBITO_MOEDA, 
                                                   CREDITO_MOEDA, 
                                                   GERADO_AUTOMATICO_TIPO, 
                                                   DATA_DIGITACAO, 
                                                   RATEIO_FILIAL, 
                                                   ID_CONTRAPARTIDA, 
                                                   CAMBIO_NA_DATA) 
                                      (SELECT @NEMPRESA, 
                                              @NLANCAMENTO, 
                                              @NITEM, 
                                              @CCOD_CLIFOR, 
                                              @CCONTA_CONTABIL, 
                                              @CLX_TIPO_LANCAMENTO, 
                                              @NCREDITO, 
                                              @NDEBITO, 
                                              @CHISTORICO, 
                                              @CCODIGO_HISTORICO, 
                                              @CRATEIO_CENTRO_CUSTO, 
                                              0, 
                                              ISNULL(@MOEDA_CONTA, @CMOEDA), 
                                              @NPERMITE_ALTERACAO, 
                                              1, 
                                              @NDEBITO_MOEDA, 
                                              @NCREDITO_MOEDA, 
                                              2, 
                                              CONVERT(CHAR(8), Getdate(), 112), 
                                              @CRATEIO_FILIAL, 
                                              @ID_CONTRAPARTIDA, 
                                              ISNULL(@CAMBIO, 1.00000)) 
                                  END TRY --#9#  

                                  BEGIN CATCH 
                                      SELECT @MESSAGE = ERROR_MESSAGE(), 
                                             @ERROR_NR = ERROR_NUMBER(); 

                                      GOTO ERROR; 
                                  END CATCH; 
                              END 
                            ELSE 
                              BEGIN 
                                  IF @CLX_TIPO_LANCAMENTO != @CTIPOLANCPRINCIPAL 
                                    BEGIN 
                                        BEGIN TRY 
                                            UPDATE CTB_LANCAMENTO_ITEM 
                                            SET    CONTA_CONTABIL = @CCONTA_CONTABIL, 
                                                   CREDITO = CREDITO + @NCREDITO, 
                                                   DEBITO = DEBITO + @NDEBITO, 
                                                   HISTORICO = @CHISTORICO, 
                                                   CODIGO_HISTORICO = @CCODIGO_HISTORICO, 
                                                   RATEIO_CENTRO_CUSTO = @CRATEIO_CENTRO_CUSTO, 
                                                   MOEDA = @CMOEDA, 
                                                   PERMITE_ALTERACAO = @NPERMITE_ALTERACAO, 
                                                   DEBITO_MOEDA = DEBITO_MOEDA + @NDEBITO_MOEDA,
                                                   CREDITO_MOEDA = CREDITO_MOEDA + @NCREDITO_MOEDA,
                                                   DATA_DIGITACAO = CONVERT(CHAR(8), Getdate(), 112),
                                                   RATEIO_FILIAL = @CRATEIO_FILIAL 
                                            WHERE  EMPRESA = @NEMPRESA 
                                                   AND LANCAMENTO = @NLANCAMENTO 
                                                   AND ITEM = @NITEM 
                                        END TRY 

                                        BEGIN CATCH 
                                            SELECT @MESSAGE = ERROR_MESSAGE(), 
                                                   @ERROR_NR = ERROR_NUMBER(); 

                                            GOTO ERROR; 
                                        END CATCH 
                                    END; 
                              END; 
                        END; 
                  END; 

                --    select @ID_IMPOSTO_LANC_PADRAO  
                -- INCLUSÃO DO ITP PARA IMPOSTO  
                IF @ID_IMPOSTO_LANC_PADRAO IS NOT NULL 
                   AND @CLX_TIPO_LANCAMENTO IN ( 'ITP', 'IAD', 'ITR' ) 
                   AND @MOVIMENTO_PADRAO <> @TIPO_MOVIMENTO_LANC 
                   AND ( @NCREDITO + @NDEBITO ) > 0 
                  BEGIN 
                      -- PROBLEMAS O NR. DA FATURA  
                      -------------------------------------------------------------------------------------------------------------------------------------------------------------------  
                      --BEGIN TRAN GERA_ITP_IMPOSTO  
                      -------------------------------------------------------------------------------------------------------------------------------------------------------------------  
                      SELECT @NITEM = ISNULL(Max(ITEM), 0) + 1 
                      FROM   CTB_LANCAMENTO_ITEM (NOLOCK) 
                      WHERE  EMPRESA = @NEMPRESA 
                             AND LANCAMENTO = @NLANCAMENTO; 

                      SELECT @UF = B.UF, 
                             @COD_MATRIZ_FISCAL_CUR = B.COD_CLIFOR 
                      FROM   FILIAIS A (NOLOCK) 
                             JOIN W_LF_MATRIZ_FISCAL B 
                               ON A.MATRIZ_FISCAL = B.NOME_CLIFOR 
                      WHERE  FILIAL = @FILIAL_NOTA; 

                      IF EXISTS(SELECT * 
                                FROM   ENTRADAS (NOLOCK) 
                                WHERE  EMPRESA = @NEMPRESA 
                                       AND ( CTB_LANCAMENTO = @NLANCAMENTO 
                                              OR NUMERO_CONFERENCIA = @NLANCAMENTO )) 
                        SELECT @ENTRADA_SAIDA = 'E' 
                      ELSE 
                        SELECT @ENTRADA_SAIDA = 'S'; 

                      SELECT @COD_CLIFOR_SACADO_CUR = @CCOD_CLIFOR; 

                      SELECT @TIPO_PESSOA = CASE 
                                              WHEN PJ_PF = 1 THEN 'J' 
                                              ELSE 'F' 
                                            END 
                      FROM   CADASTRO_CLI_FOR (NOLOCK) 
                      WHERE  COD_CLIFOR = @CCOD_CLIFOR 

                      IF @ENTRADA_SAIDA = 'E' 
                        SELECT TOP 1 @CODIGO_ARRECADACAO = ISNULL(CODIGO_ARRECADACAO, @CODIGO_ARRECADACAO)
                        FROM   CTB_EXCECAO_IMPOSTO_ITEM A (NOLOCK) 
                               JOIN ENTRADAS_ITEM B (NOLOCK) 
                                 ON A.ID_EXCECAO_IMPOSTO = B.ID_EXCECAO_IMPOSTO 
                                    AND A.ID_IMPOSTO = @ID_IMPOSTO_LANC_PADRAO 
                               JOIN ENTRADAS D (NOLOCK) 
                                 ON B.NF_ENTRADA = D.NF_ENTRADA 
                                    AND B.SERIE_NF_ENTRADA = D.SERIE_NF_ENTRADA 
                                    AND B.NOME_CLIFOR = D.NOME_CLIFOR 
                        WHERE  D.EMPRESA = @NEMPRESA 
                               AND D.CTB_LANCAMENTO = @NLANCAMENTO 
                      ELSE 
                        SELECT TOP 1 @CODIGO_ARRECADACAO = ISNULL(CODIGO_ARRECADACAO, @CODIGO_ARRECADACAO)
                        FROM   CTB_EXCECAO_IMPOSTO_ITEM A (NOLOCK) 
                               JOIN FATURAMENTO_ITEM B (NOLOCK) 
                                 ON A.ID_EXCECAO_IMPOSTO = B.ID_EXCECAO_IMPOSTO 
                                    AND A.ID_IMPOSTO = @ID_IMPOSTO_LANC_PADRAO 
                               JOIN FATURAMENTO D (NOLOCK) 
                                 ON B.NF_SAIDA = D.NF_SAIDA 
                                    AND B.SERIE_NF = D.SERIE_NF 
                                    AND B.FILIAL = D.FILIAL 
                        WHERE  D.EMPRESA = @NEMPRESA 
                               AND D.CTB_LANCAMENTO = @NLANCAMENTO; 

                      SELECT @ID_DADOS_ARRECADACAO_CUR = ISNULL(@ID_DADOS_ARRECADACAO_LANC_CUR, DBO.FX_ID_ARRECADACAO(@ENTRADA_SAIDA, '20',
                                                                                                @ID_IMPOSTO_LANC_PADRAO,
                                                                                                @UF
                                                                                                ,
                                                                                                       @COD_MATRIZ_FISCAL_CUR, 1,
                                                                                                                                   @TIPO_PESSOA,
                                                                                                @CODIGO_ARRECADACAO,
                                                                                                NULL)); --#4#  

                      SELECT @LX_TIPO_DOCUMENTO = LX_TIPO_DOCUMENTO, 
                             @COD_CLIFOR_ARRECADACAO = CASE 
                                                         WHEN @CLX_TIPO_LANCAMENTO = 'ITR' 
                                                              AND @ID_IMPOSTO_LANC_PADRAO = 103 THEN @CCOD_CLIFOR
                                                         ELSE 
                                                           CASE 
                                                             WHEN @CLX_TIPO_LANCAMENTO = 'ITP' THEN COD_CLIFOR
                                                             ELSE @COD_CLIFOR_SACADO_CUR 
                                                           END 
                                                       END, 
                             @CONTA_CONTABIL = CONTA_CONTABIL, 
                             @CONTRAPARTIDA = CONTRAPARTIDA, 
                             @CODIGO_ARRECADACAO = CODIGO_ARRECADACAO, 
                             @TIPO_VENCIMENTO = TIPO_VENCIMENTO, 
                             @DIAS_UTEIS = DIAS_UTEIS, 
                             @INDICA_SACADO_PRINCIPAL = INDICA_SACADO_PRINCIPAL, 
                             @TIPO_BASE_VENCIMENTO = TIPO_BASE_VENCIMENTO 
                      FROM   LF_DADOS_ARRECADACAO (NOLOCK) 
                      WHERE  ID_DADOS_ARRECADACAO = @ID_DADOS_ARRECADACAO_CUR; 

                      SELECT @DATA_CONTABIL = DATA_LANCAMENTO 
                      FROM   CTB_LANCAMENTO (NOLOCK) 
                      WHERE  EMPRESA = @NEMPRESA 
                             AND LANCAMENTO = @NLANCAMENTO; 

                      SELECT @FATURA = NULL; 
				  --#11#
                      SELECT @FATURA = A.NF_ENTRADA, 
                             @FATURA_SERIE = A.SERIE_NF_ENTRADA 
                      FROM   ENTRADAS A (NOLOCK) 
                      WHERE  EMPRESA = @NEMPRESA 
                             AND CTB_LANCAMENTO = @NLANCAMENTO
					    AND CTB_ITEM       = @NITEM_CUR; 
				  --#11#
                      IF @FATURA IS NULL 
                        SELECT @FATURA = A.NF_SAIDA, 
                               @FATURA_SERIE = A.SERIE_NF 
                        FROM   FATURAMENTO A (NOLOCK) 
                        WHERE  EMPRESA = @NEMPRESA 
                               AND CTB_LANCAMENTO = @NLANCAMENTO
						 AND CTB_ITEM		= @NITEM_CUR; 

                      IF ISNULL(@TIPO_BASE_VENCIMENTO, '1') IN ( '1', '2' ) 
                        SELECT @VENCIMENTO_CUR = DBO.FX_CALCULA_DATA_IMPOSTOS(@DATA_CONTABIL, @TIPO_VENCIMENTO, @DIAS_UTEIS);

                      IF ISNULL(@TIPO_BASE_VENCIMENTO, '1') = '3' 
                        BEGIN 
                            IF @CLX_TIPO_LANCAMENTO = 'ITP' 
                              SELECT @VENC_TIT = Min(VENCIMENTO_REAL) 
                              FROM   CTB_A_PAGAR_PARCELA A (NOLOCK) 
                                     JOIN (SELECT ITEM = Min(ITEM) 
                                           FROM   CTB_LANCAMENTO_ITEM (NOLOCK) 
                                           WHERE  EMPRESA = @NEMPRESA 
                                                  AND LANCAMENTO = @NLANCAMENTO 
                                                  AND LX_TIPO_LANCAMENTO = 'ITP') B 
                                       ON A.ITEM = B.ITEM 
                              WHERE  A.EMPRESA = @NEMPRESA 
                                     AND A.LANCAMENTO = @NLANCAMENTO; 

                            IF @CLX_TIPO_LANCAMENTO = 'ITR' 
                              SELECT @VENC_TIT = Min(VENCIMENTO_REAL) 
                              FROM   CTB_A_RECEBER_PARCELA A (NOLOCK) 
                                     JOIN (SELECT ITEM = Min(ITEM) 
                                           FROM   CTB_LANCAMENTO_ITEM (NOLOCK) 
                                           WHERE  EMPRESA = @NEMPRESA 
                                                  AND LANCAMENTO = @NLANCAMENTO 
                                                  AND LX_TIPO_LANCAMENTO = 'ITR') B 
                                       ON A.ITEM = B.ITEM 
                              WHERE  A.EMPRESA = @NEMPRESA 
                                     AND A.LANCAMENTO = @NLANCAMENTO; 

                            SELECT @VENCIMENTO_CUR = DBO.FX_CALCULA_DATA_IMPOSTOS(ISNULL(@VENC_TIT, @DATA_CONTABIL), @TIPO_VENCIMENTO, @DIAS_UTEIS);
                        END; 

                      IF ISNULL(@TIPO_BASE_VENCIMENTO, '1') = '4' 
                        BEGIN 
                            IF @CLX_TIPO_LANCAMENTO = 'ITP' 
                              SELECT @EMISSAO_NOTA = Min(EMISSAO) 
                              FROM   CTB_A_PAGAR_FATURA A (NOLOCK) 
                                     JOIN (SELECT ITEM = Min(ITEM) 
                                           FROM   CTB_LANCAMENTO_ITEM (NOLOCK) 
                                           WHERE  EMPRESA = @NEMPRESA 
                                                  AND LANCAMENTO = @NLANCAMENTO 
                                                  AND LX_TIPO_LANCAMENTO = 'ITP') B 
                                       ON A.ITEM = B.ITEM 
                              WHERE  A.EMPRESA = @NEMPRESA 
                                     AND A.LANCAMENTO = @NLANCAMENTO; 

                            IF @CLX_TIPO_LANCAMENTO = 'ITR' 
                              SELECT @EMISSAO_NOTA = @DATA_CONTABIL 

                            SELECT @VENCIMENTO_CUR = DBO.FX_CALCULA_DATA_IMPOSTOS(ISNULL(@EMISSAO_NOTA, @DATA_CONTABIL), @TIPO_VENCIMENTO, @DIAS_UTEIS
                                                     ) 
                        END; 

                      SELECT @NOME_CLIFOR_IMPOSTO = NOME_CLIFOR 
                      FROM   CADASTRO_CLI_FOR (NOLOCK) 
                      WHERE  COD_CLIFOR = @COD_CLIFOR_SACADO_CUR; 

                      SELECT @IMPOSTO = IMPOSTO 
                      FROM   CTB_LX_IMPOSTO_TIPO (NOLOCK) 
                      WHERE  ID_IMPOSTO = @ID_IMPOSTO_LANC_PADRAO; 

                      IF @CLX_TIPO_LANCAMENTO IN ( 'ITP', 'ITR', 'IAD' ) 
                        BEGIN 
                            SELECT @FATURA_OLD = ISNULL(@FATURA, ''); 

                            --SELECT @FATURA = CAST(@ID_IMPOSTO_LANC_PADRAO AS VARCHAR(10))+'-'+RTRIM(@FATURA)  
                            SELECT @SEQ_FATURA_IMPOSTO = @SEQ_FATURA_IMPOSTO + 1; 

                            SELECT @FATURA = Rtrim(@FATURA) + '-' 
                                             + Cast(@SEQ_FATURA_IMPOSTO AS VARCHAR(2)); 

                            WHILE ( EXISTS(SELECT * 
                                           FROM   CTB_A_RECEBER_FATURA A (NOLOCK) 
                                                  JOIN CTB_A_RECEBER_PARCELA B (NOLOCK) 
                                                    ON A.EMPRESA = B.EMPRESA 
                                                       AND A.LANCAMENTO = B.LANCAMENTO 
                                                       AND A.ITEM = B.ITEM 
                                           WHERE  A.EMPRESA = @NEMPRESA 
                                                  AND A.LANCAMENTO = @NLANCAMENTO 
                                                  AND ( FATURA = @FATURA 
                                                        AND VALOR_ORIGINAL = ( Abs(@NCREDITO) + Abs(@NDEBITO) ) )
                                                  AND @CLX_TIPO_LANCAMENTO = 'ITR') 
                                     OR EXISTS(SELECT * 
                                               FROM   CTB_A_PAGAR_FATURA A (NOLOCK) 
                                                      JOIN CTB_A_PAGAR_PARCELA B (NOLOCK) 
                                                        ON A.EMPRESA = B.EMPRESA 
                                                           AND A.LANCAMENTO = B.LANCAMENTO 
                                                           AND A.ITEM = B.ITEM 
                                               WHERE  A.EMPRESA = @NEMPRESA 
                                                      AND A.LANCAMENTO = @NLANCAMENTO 
                                                      AND ( FATURA = @FATURA 
                                                            AND VALOR_ORIGINAL = ( Abs(@NCREDITO) + Abs(@NDEBITO) ) )
                                                      AND @CLX_TIPO_LANCAMENTO = 'ITP') 
                                     OR EXISTS(SELECT * 
                                               FROM   CTB_AVISO_LANCAMENTO A (NOLOCK) 
                                               WHERE  A.EMPRESA = @NEMPRESA 
                                                      AND A.LANCAMENTO = @NLANCAMENTO 
                                                      AND ( AVISO_LANCAMENTO = @FATURA 
                                                            AND VALOR_ORIGINAL = ( Abs(@NCREDITO) + Abs(@NDEBITO) ) )
                                                      AND @CLX_TIPO_LANCAMENTO = 'IAD') ) 
                              BEGIN 
                                  SELECT @SEQ_FATURA_IMPOSTO = @SEQ_FATURA_IMPOSTO + 1 

                                  SELECT @FATURA = Rtrim(@FATURA) + '-' 
                                                   + Cast(@SEQ_FATURA_IMPOSTO AS VARCHAR(2)) 
                              END; 

                            IF ( NOT EXISTS(SELECT * 
                                            FROM   CTB_A_RECEBER_FATURA A (NOLOCK) 
                                                   JOIN CTB_A_RECEBER_PARCELA B (NOLOCK) 
                                                     ON A.EMPRESA = B.EMPRESA 
                                                        AND A.LANCAMENTO = B.LANCAMENTO 
                                                        AND A.ITEM = B.ITEM 
                                            WHERE  A.EMPRESA = @NEMPRESA 
                                                   AND A.LANCAMENTO = @NLANCAMENTO 
                                                   AND ( FATURA = @FATURA 
                                                         AND VALOR_ORIGINAL = ( Abs(@NCREDITO) + Abs(@NDEBITO) ) ))
                                 AND @CLX_TIPO_LANCAMENTO = 'ITR' ) 
                                OR ( NOT EXISTS(SELECT * 
                                                FROM   CTB_A_PAGAR_FATURA A (NOLOCK) 
                                                       JOIN CTB_A_PAGAR_PARCELA B (NOLOCK) 
                                                         ON A.EMPRESA = B.EMPRESA 
                                                            AND A.LANCAMENTO = B.LANCAMENTO 
                                                            AND A.ITEM = B.ITEM 
                                                       JOIN CTB_LANCAMENTO_ITEM C (NOLOCK) 
                                                         ON A.EMPRESA = C.EMPRESA 
                                                            AND A.LANCAMENTO = C.LANCAMENTO 
                                                            AND A.ITEM = C.ITEM 
                                                WHERE  A.EMPRESA = @NEMPRESA 
                                                       AND A.LANCAMENTO = @NLANCAMENTO 
                                                       AND ( A.DOCUMENTO = @CODIGO_ARRECADACAO 
                                                             AND ID_DADOS_ARRECADACAO = @ID_DADOS_ARRECADACAO_CUR
                                                             AND A.COD_CLIFOR = @COD_CLIFOR_ARRECADACAO
                                                             AND COD_CLIFOR_SACADO = @COD_CLIFOR_SACADO_CUR
                                                             AND C.RATEIO_FILIAL = @CRATEIO_FILIAL
                                                             AND VALOR_ORIGINAL = ( Abs(@NCREDITO) + Abs(@NDEBITO) ) ))
                                     AND @CLX_TIPO_LANCAMENTO = 'ITP' ) 
                                OR ( NOT EXISTS(SELECT * 
                                                FROM   CTB_AVISO_LANCAMENTO A (NOLOCK) 
                                                WHERE  A.EMPRESA = @NEMPRESA 
                                                       AND A.LANCAMENTO = @NLANCAMENTO 
                                                       AND ( AVISO_LANCAMENTO = @FATURA 
                                                             AND VALOR_ORIGINAL = ( Abs(@NCREDITO) + Abs(@NDEBITO) ) ))
                                     AND @CLX_TIPO_LANCAMENTO = 'IAD' ) 
                              BEGIN 
                                  INSERT CTB_LANCAMENTO_ITEM 
                                         (EMPRESA, 
                                          LANCAMENTO, 
                                          ITEM, 
                                          CONTA_CONTABIL, 
                                          LX_TIPO_LANCAMENTO, 
                                          CREDITO, 
                                          DEBITO, 
                                          HISTORICO, 
                                          RATEIO_CENTRO_CUSTO, 
                                          RATEIO_FILIAL, 
                                          MOEDA, 
                                          PERMITE_ALTERACAO, 
                                          CREDITO_MOEDA, 
                                          DEBITO_MOEDA, 
                                          DATA_DIGITACAO, 
                                          ID_CONTRAPARTIDA, 
                                          COD_CLIFOR, 
                                          GERADO_AUTOMATICO_TIPO) 
                                  VALUES ( @NEMPRESA, 
                                           @NLANCAMENTO, 
                                           @NITEM, 
                                           ISNULL(@CCONTA_CONTABIL, @CONTA_CONTABIL), 
                                           @CLX_TIPO_LANCAMENTO, 
                                           Abs(@NCREDITO), 
                                           Abs(@NDEBITO), 
                                           Rtrim(@IMPOSTO) + ' A RECOLHER DA NF.: ' 
                                           + @FATURA_OLD + ' DO ' 
                                           + Rtrim(@NOME_CLIFOR_IMPOSTO), 
                                           @CRATEIO_CENTRO_CUSTO, 
                                           @CRATEIO_FILIAL, 
                                           @CMOEDA, 
                                           @NPERMITE_ALTERACAO, 
                                           Abs(@NCREDITO), 
                                           Abs(@NDEBITO), 
                                           Getdate(), 
                                           @ID_CONTRAPARTIDA, 
                                           CASE 
                                             WHEN ISNULL(@INDICA_SACADO_PRINCIPAL, 0) = 0 THEN @COD_CLIFOR_ARRECADACAO
                                             ELSE @COD_CLIFOR_SACADO_CUR 
                                           END, 
                                           2 ); 

                                  IF @@ERROR <> 0 
                                    BEGIN 
                                        UPDATE CTB_LANCAMENTO 
                                        SET    GERADO_INTEGRACAO = 3 
                                        WHERE  EMPRESA = @NEMPRESA 
                                               AND LANCAMENTO = @NLANCAMENTO; 

                                        GOTO ERROR 
                                    END; 

                                  IF @CLX_TIPO_LANCAMENTO = 'ITP' 
                                    BEGIN 
                                        --#2#  
                                        SELECT @EMISSAO_NF = EMISSAO 
                                        FROM   ENTRADAS 
                                        WHERE  CTB_LANCAMENTO = @NLANCAMENTO 
                                               AND FATURA = LEFT(@FATURA, Charindex('-', @FATURA, 0) - 1) 

                                        INSERT CTB_A_PAGAR_FATURA 
                                               (COD_CLIFOR, 
                                                COD_CLIFOR_SACADO, 
                                                COD_FILIAL, 
                                                COMPLEMENTO_NOME, 
                                                DATA_ENTRADA, 
                                                DOCUMENTO, 
                                                EMISSAO, 
                                                EMPRESA, 
                                                ESPECIE_SERIE, 
                                                FATURA, 
                                                FATURA_OK, 
                                                FATURA_SERIE, 
                                                ITEM, 
                                                LANCAMENTO, 
                                                LX_TIPO_DOCUMENTO, 
                                                MOEDA, 
                                                NUMERO_ENTRADA, 
                                                NUMERO_PARCELAS, 
                                                POSSUI_ENTRADA, 
                                                PROVISAO, 
                                                TAXA_JUROS, 
                                                TAXA_MULTA, 
                                                USUARIO, 
                                                INDICA_SACADO_PRINCIPAL, 
                                                ID_DADOS_ARRECADACAO, 
                                                DATA_APURACAO) 
                                        VALUES ( @COD_CLIFOR_ARRECADACAO, 
                                                 @COD_CLIFOR_SACADO_CUR, 
                                                 @COD_MATRIZ_FISCAL_CUR, 
                                                 NULL, 
                                                 @DATA_CONTABIL, 
                                                 @CODIGO_ARRECADACAO,/*#2#*/ 
                                                 ISNULL(@EMISSAO_NF, @DATA_CONTABIL), 
                                                 @NEMPRESA, 
                                                 NULL, 
                                                 @FATURA, 
                                                 0, 
                                                 @FATURA_SERIE, 
                                                 @NITEM, 
                                                 @NLANCAMENTO, 
                                                 @LX_TIPO_DOCUMENTO, 
                                                 @CMOEDA, 
                                                 0, 
                                                 1, 
                                                 0, 
                                                 0, 
                                                 0.00, 
                                                 0.00, 
                                                 @LXUSUARIO, 
                                                 @INDICA_SACADO_PRINCIPAL, 
                                                 @ID_DADOS_ARRECADACAO_CUR, 
                                                 @DATA_CONTABIL); 

                                        IF @@ERROR <> 0 
                                          BEGIN 
                                              UPDATE CTB_LANCAMENTO 
                                              SET    GERADO_INTEGRACAO = 3 
                                              WHERE  EMPRESA = @NEMPRESA 
                                                     AND LANCAMENTO = @NLANCAMENTO; 

                                              GOTO ERROR; 
                                          END; 

                                        INSERT CTB_A_PAGAR_PARCELA 
                                               (BANCO, 
                                                CAMBIO_FIXO_PGTO, 
                                                CODIGO_BARRA, 
                                                CONTA_PORTADOR, 
                                                DATA_DESCONTO_VENC, 
                                                DESCONTO_VENC, 
                                                DIAS_PRORROGADOS, 
                                                EMPRESA, 
                                                ID_ASSINATURA_APROVACAO, 
                                                ID_ASSINATURA_DOCUMENTO, 
                                                ID_PARCELA, 
                                                ITEM, 
                                                LANCAMENTO, 
                                                NUMERO_BANCARIO, 
                                                PAGAMENTO_APROVADO, 
                                                VALOR_A_PAGAR, 
                                                VALOR_ORIGINAL, 
                                                VALOR_ORIGINAL_PADRAO, 
                                                VENCIMENTO, 
                                                VENCIMENTO_REAL) 
                                        VALUES ( NULL, 
                                                 1.00, 
                                                 NULL, 
                                                 ISNULL(@CCONTA_CONTABIL, @CONTA_CONTABIL), 
                                                 NULL, 
                                                 NULL, 
                                                 0, 
                                                 @NEMPRESA, 
                                                 NULL, 
                                                 NULL, 
                                                 '1', 
                                                 @NITEM, 
                                                 @NLANCAMENTO, 
                                                 NULL, 
                                                 'N', 
                                                 ( @NCREDITO + @NDEBITO ), 
                                                 ( @NCREDITO + @NDEBITO ), 
                                                 ( @NCREDITO + @NDEBITO ), 
                                                 @VENCIMENTO_CUR, 
                                                 @VENCIMENTO_CUR ); 

                                        IF @@ERROR <> 0 
                                          BEGIN 
                                              UPDATE CTB_LANCAMENTO 
                                              SET    GERADO_INTEGRACAO = 3 
                                              WHERE  EMPRESA = @NEMPRESA 
                                                     AND LANCAMENTO = @NLANCAMENTO; 

                                          ; 
                                              GOTO ERROR; 
                                          END; 
                                    END; 

                                  IF @CLX_TIPO_LANCAMENTO = 'ITR' 
                                    BEGIN 
                                        INSERT CTB_A_RECEBER_FATURA 
                                               (COD_CLIFOR, 
                                                COD_EMISSOR, 
                                                DOCUMENTO, 
                                                EMISSAO, 
                                                EMPRESA, 
                                                FATURA, 
                                                ITEM, 
                                                LANCAMENTO, 
                                                LX_TIPO_DOCUMENTO, 
                                                MOEDA, 
                                                NUMERO_PARCELAS, 
                                                JUROS_POR_ATRASO, 
                                                MULTA_POR_ATRASO) 
                                        VALUES ( @COD_CLIFOR_ARRECADACAO, 
                                                 @COD_MATRIZ_FISCAL_CUR, 
                                                 @CODIGO_ARRECADACAO, 
                                                 @DATA_CONTABIL, 
                                                 @NEMPRESA, 
                                                 @FATURA, 
                                                 @NITEM, 
                                                 @NLANCAMENTO, 
                                                 @LX_TIPO_DOCUMENTO, 
                                                 @CMOEDA, 
                                                 1, 
                                                 0.00, 
                                                 0.00); 

                                        IF @@ERROR <> 0 
                                          BEGIN 
                                              UPDATE CTB_LANCAMENTO 
                                              SET    GERADO_INTEGRACAO = 3 
                                              WHERE  EMPRESA = @NEMPRESA 
                                                     AND LANCAMENTO = @NLANCAMENTO; 

                                              GOTO ERROR; 
                                          END; 

                                        INSERT CTB_A_RECEBER_PARCELA 
                                               (BANCO, 
                                                CAMBIO_FIXO_PGTO, 
                                                CONTA_PORTADOR, 
                                                DATA_DESCONTO_VENC, 
                                                DESCONTO_VENC, 
                                                DIAS_PRORROGADOS, 
                                                EMPRESA, 
                                                ID_PARCELA, 
                                                ITEM, 
                                                LANCAMENTO, 
                                                NUMERO_BANCARIO, 
                                                VALOR_A_RECEBER, 
                                                VALOR_ORIGINAL, 
                                                VALOR_ORIGINAL_PADRAO, 
                                                VENCIMENTO, 
                                                VENCIMENTO_REAL) 
                                        VALUES ( NULL, 
                                                 1.00, 
                                                 ISNULL(@CCONTA_CONTABIL, @CONTA_CONTABIL), 
                                                 NULL, 
                                                 NULL, 
                                                 0, 
                                                 @NEMPRESA, 
                                                 '1', 
                                                 @NITEM, 
                                                 @NLANCAMENTO, 
                                                 NULL, 
                                                 ( @NCREDITO + @NDEBITO ), 
                                                 ( @NCREDITO + @NDEBITO ), 
                                                 ( @NCREDITO + @NDEBITO ), 
                                                 @VENCIMENTO_CUR, 
                                                 @VENCIMENTO_CUR ); 

                                        IF @@ERROR <> 0 
                                          BEGIN 
                                              UPDATE CTB_LANCAMENTO 
                                              SET    GERADO_INTEGRACAO = 3 
                                              WHERE  EMPRESA = @NEMPRESA 
                                                     AND LANCAMENTO = @NLANCAMENTO; 

                                              GOTO ERROR; 
                                          END 
                                    END 

                                  IF @CLX_TIPO_LANCAMENTO = 'IAD' 
                                    BEGIN 
                                        INSERT CTB_AVISO_LANCAMENTO 
                                               (AVISO_LANCAMENTO, 
                                                CAMBIO_FIXO_PGTO, 
                                                CAMBIO_NA_DATA_EMISSAO, 
                                                CODIGO_CONSUMIDOR, 
                                                CODIGO_FISCAL_OPERACAO, 
                                                COD_CLIFOR, 
                                                DESCRICAO, 
                                                DESC_AVISO_LANCAMENTO, 
                                                EMISSAO, 
                                                EMPRESA, 
                                                ID_ASSINATURA_DOCUMENTO, 
                                                ITEM, 
                                                LANCAMENTO, 
                                                LOJA_LANCAMENTO_CAIXA, 
                                                LOJA_PARCELA, 
                                                LOJA_TERMINAL, 
                                                LX_TIPO_DOCUMENTO, 
                                                MOEDA, 
                                                PEDIDO_COMPRA, 
                                                STATUS_APROVACAO, 
                                                SUB_ITEM, 
                                                USUARIO, 
                                                VALOR_AVISO, 
                                                VALOR_ORIGINAL, 
                                                VALOR_ORIGINAL_PADRAO, 
                                                VENCIMENTO, 
                                                VENCIMENTO_REAL, 
                                                COD_CLIFOR_SACADO, 
                                                INDICA_SACADO_PRINCIPAL) 
                                        VALUES ( @FATURA, 
                                                 1.00, 
                                                 1.00, 
                                                 NULL, 
                                                 NULL, 
                                                 @COD_CLIFOR_ARRECADACAO, 
                                                 'IMPOSTOS', 
                                                 'IMPOSTOS', 
                                                 @DATA_CONTABIL, 
                                                 @NEMPRESA, 
                                                 NULL, 
                                                 @NITEM, 
                                                 @NLANCAMENTO, 
                                                 NULL, 
                                                 NULL, 
                                                 NULL, 
                                                 @LX_TIPO_DOCUMENTO, 
                                                 @CMOEDA, 
                                                 NULL, 
                                                 'N', 
                                                 1, 
                                                 @LXUSUARIO, 
                                                 ( @NCREDITO + @NDEBITO ), 
                                                 ( @NCREDITO + @NDEBITO ), 
                                                 ( @NCREDITO + @NDEBITO ), 
                                                 @VENCIMENTO_CUR, 
                                                 @VENCIMENTO_CUR, 
                                                 @COD_CLIFOR_SACADO_CUR, 
                                                 @INDICA_SACADO_PRINCIPAL ) 

                                        IF @@ERROR <> 0 
                                          BEGIN 
                                              UPDATE CTB_LANCAMENTO 
                                              SET    GERADO_INTEGRACAO = 3 
                                              WHERE  EMPRESA = @NEMPRESA 
                                                     AND LANCAMENTO = @NLANCAMENTO 

                                              GOTO ERROR 
                                          END; 
                                    END; 
                              END; 

                            IF EXISTS(SELECT * 
                                      FROM   ENTRADAS (NOLOCK) 
                                      WHERE  EMPRESA = @NEMPRESA 
                                             AND CTB_LANCAMENTO = @NLANCAMENTO) 
                              BEGIN 
                                  UPDATE A 
                                  SET    CTB_LANCAMENTO_FINANCEIRO = @NLANCAMENTO, 
                                         CTB_ITEM_FINANCEIRO = @NITEM 
                                  FROM   ENTRADAS_IMPOSTO A 
                                         JOIN (SELECT NOME_CLIFOR_FILTRO, 
                                                      NF_ENTRADA_FILTRO, 
                                                      SERIE_NF_ENTRADA_FILTRO, 
                                                      ID_IMPOSTO 
                                               FROM   W_LF_FINANCEIRO_FISCAL 
                                               WHERE  EMPRESA = @EMPRESA 
                                                      AND ID_IMPOSTO = @ID_IMPOSTO_LANC_PADRAO 
                                                      AND COD_MATRIZ_FISCAL = @COD_MATRIZ_FISCAL_CUR
                                                      AND COD_CLIFOR = @COD_CLIFOR_SACADO_CUR 
                                                      AND VENCIMENTO = @VENCIMENTO_CUR 
                                                      AND ID_DADOS_ARRECADACAO = @ID_DADOS_ARRECADACAO_CUR) B
                                           ON A.NOME_CLIFOR = B.NOME_CLIFOR_FILTRO 
                                              AND A.NF_ENTRADA = B.NF_ENTRADA_FILTRO 
                                              AND A.SERIE_NF_ENTRADA = B.SERIE_NF_ENTRADA_FILTRO
                                              AND A.ID_IMPOSTO = B.ID_IMPOSTO 
                                         JOIN ENTRADAS C (NOLOCK) 
                                           ON A.NOME_CLIFOR = C.NOME_CLIFOR 
                                              AND A.SERIE_NF_ENTRADA = C.SERIE_NF_ENTRADA 
                                              AND A.NF_ENTRADA = C.NF_ENTRADA 
                                  WHERE  C.EMPRESA = @NEMPRESA 
                                         AND C.CTB_LANCAMENTO = @NLANCAMENTO; 

                                  IF @@ERROR <> 0 
                                    BEGIN 
                                        UPDATE CTB_LANCAMENTO 
                                        SET    GERADO_INTEGRACAO = 3 
                                        WHERE  EMPRESA = @NEMPRESA 
                                               AND LANCAMENTO = @NLANCAMENTO 

                                        GOTO ERROR 
                                    END; 
                              END; 

                            IF EXISTS(SELECT * 
                                      FROM   FATURAMENTO (NOLOCK) 
                                      WHERE  EMPRESA = @NEMPRESA 
                                             AND CTB_LANCAMENTO = @NLANCAMENTO) 
                              BEGIN 
                                  UPDATE A 
                                  SET    CTB_LANCAMENTO_FINANCEIRO = @NLANCAMENTO, 
                                         CTB_ITEM_FINANCEIRO = @NITEM 
                                  FROM   FATURAMENTO_IMPOSTO A 
                                         JOIN (SELECT FILIAL_FILTRO, 
                                                      NF_SAIDA_FILTRO, 
                                                      SERIE_NF_FILTRO, 
                                                      ID_IMPOSTO 
                                               FROM   W_LF_FINANCEIRO_FISCAL 
                                               WHERE  EMPRESA = @EMPRESA 
                                                      AND ID_IMPOSTO = @ID_IMPOSTO_LANC_PADRAO 
                                                      AND COD_MATRIZ_FISCAL = @COD_MATRIZ_FISCAL_CUR
                                                      AND COD_CLIFOR = @COD_CLIFOR_SACADO_CUR 
                                                      AND VENCIMENTO = @VENCIMENTO_CUR 
                                                      AND ID_DADOS_ARRECADACAO = @ID_DADOS_ARRECADACAO_CUR) B
                                           ON A.FILIAL = B.FILIAL_FILTRO 
                                              AND A.NF_SAIDA = B.NF_SAIDA_FILTRO 
                                              AND A.SERIE_NF = B.SERIE_NF_FILTRO 
                                              AND A.ID_IMPOSTO = B.ID_IMPOSTO 
                                         JOIN FATURAMENTO C (NOLOCK) 
                                           ON A.FILIAL = C.FILIAL 
                                              AND A.SERIE_NF = C.SERIE_NF 
                                              AND A.NF_SAIDA = C.NF_SAIDA 
                                  WHERE  C.EMPRESA = @NEMPRESA 
                                         AND C.CTB_LANCAMENTO = @NLANCAMENTO; 

                                  IF @@ERROR <> 0 
                                    BEGIN 
                                        UPDATE CTB_LANCAMENTO 
                                        SET    GERADO_INTEGRACAO = 3 
                                        WHERE  EMPRESA = @NEMPRESA 
                                               AND LANCAMENTO = @NLANCAMENTO; 

                                        GOTO ERROR; 
                                    END; 
                              END; 
                        END; 
                  -------------------------------------------------------------------------------------------------------------------------------------------------------------------  
                  -------------------------------------------------------------------------------------------------------------------------------------------------------------------  
                  END; 

                PROXIMO: 

                FETCH NEXT FROM CUR_LANC_PADRAO INTO @NTIPO_MOVIMENTO, @CLX_TIPO_LANCAMENTO, @CCONTA_CONTABIL, @CCODIGO_HISTORICO, @CHISTORICO,
                @CRATEIO_CENTRO_CUSTO, @NPERMITE_ALTERACAO, @CFORMULA, @CCREDITO_DEBITO, @NINDICA_ID_CONTABIL_TERCEIRO, @ID_CONTRAPARTIDA,
                @CTIPOLANCPRINCIPAL, 
                @CCOD_CLIFOR, @ID_IMPOSTO_LANC_PADRAO, @FILIAL_NOTA, @RATEIO_FILIAL_CUR, @CONTA_MOVIMENTO_CUR, @CADASTRAR_TERCEIRO_CUR,
                @CODIGO_CLIENTE_CUR, 
                @INDICA_RATEIO_FIXO_CUR, @ID_DADOS_ARRECADACAO_LANC_CUR, @NITEM_CUR; 
            END; 

          CLOSE CUR_LANC_PADRAO; 

          DEALLOCATE CUR_LANC_PADRAO; 

          IF (SELECT Sum(CREDITO) - Sum(DEBITO) 
              FROM   CTB_LANCAMENTO_ITEM (NOLOCK) 
              WHERE  EMPRESA = @NEMPRESA 
                     AND LANCAMENTO = @NLANCAMENTO) = 0 
            BEGIN 
                UPDATE CTB_LANCAMENTO 
                SET    GERADO_INTEGRACAO = 2 
                WHERE  EMPRESA = @NEMPRESA 
                       AND LANCAMENTO = @NLANCAMENTO; 

                IF DBO.FX_PARAMETRO('CTRL_ORCAMENTO') = '.T.' 
                  BEGIN 
                      -- VERIFICA SE ITP PARTICIPA DO ORÇAMENTO  
                      SELECT @CCODIGO_HISTORICO = '' 
                  END; 
            END; 
          ELSE 
            BEGIN ; 
                UPDATE CTB_LANCAMENTO 
                SET    GERADO_INTEGRACAO = 3 
                WHERE  EMPRESA = @NEMPRESA 
                       AND LANCAMENTO = @NLANCAMENTO; 
            END; 

          FETCH NEXT FROM CUR_LANC INTO @NEMPRESA, @NLANCAMENTO, @NLANCAMENTO_PADRAO, @TIPO_MOVIMENTO_LANC, @CRATEIO_FILIAL;
      END; 

    CLOSE CUR_LANC; 

    DEALLOCATE CUR_LANC; 

    ---------------------------------------------------------------------------------------------------------------------------------------------------------------------  
    COMMIT TRAN GERA_ITP_IMPOSTO; 

    ---------------------------------------------------------------------------------------------------------------------------------------------------------------------  
    IF (SELECT Object_id('TEMPDB..#ENTRADAS_ITEM')) IS NOT NULL 
      DROP TABLE #ENTRADAS_ITEM; 

    IF (SELECT Object_id('TEMPDB..#FATURAMENTO_ITEM')) IS NOT NULL 
      DROP TABLE #FATURAMENTO_ITEM; 

    IF (SELECT Object_id('TEMPDB..#LOJA_NOTA_FISCAL_ITEM')) IS NOT NULL 
      DROP TABLE #LOJA_NOTA_FISCAL_ITEM; 

    IF (SELECT Object_id('TEMPDB..#LOJAS_TERCEIRO')) IS NOT NULL 
      DROP TABLE #LOJAS_TERCEIRO; 

    --Chama a verificação das tabelas temporarias --#3#  
    EXEC LX_CTB_VERIFICA_LANCAMENTO_FECHAMENTO; 

    -- Faz insert nas tabelas temporarias     
    BEGIN TRAN INSERT_TABELAS_TEMP; --#3#  
    -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    
    INSERT CADASTRO_CLI_FOR 
           (NOME_CLIFOR, 
            CLIFOR, 
            CGC_CPF, 
            RAZAO_SOCIAL, 
            PJ_PF, 
            RG_IE, 
            UF, 
            COBRANCA_UF, 
            ENTREGA_UF, 
            CADASTRAMENTO, 
            COBRANCA_IE, 
            INDICA_FORNECEDOR, 
            INDICA_CLIENTE, 
            IND_REPRESENTANTE, 
            INDICA_FILIAL, 
            ENTREGA_CGC, 
            ENTREGA_IE, 
            INATIVO, 
            ISENTO_IPI, 
            ISENTO_ICMS, 
            ACEITA_DIAS_FIXO, 
            COD_CLIFOR, 
            INDICADOR_FISCAL_TERCEIRO, 
            COBRANCA_CGC, 
            PAIS, 
            COBRANCA_PAIS, 
            ENTREGA_PAIS, 
            CIDADE) 
    SELECT NOME_CLIFOR, 
           CLIFOR, 
           CGC_CPF, 
           RAZAO_SOCIAL, 
           PJ_PF, 
           RG_IE, 
           UF, 
           COBRANCA_UF, 
           ENTREGA_UF, 
           CADASTRAMENTO, 
           COBRANCA_IE, 
           INDICA_FORNECEDOR, 
           INDICA_CLIENTE, 
           IND_REPRESENTANTE, 
           INDICA_FILIAL, 
           ENTREGA_CGC, 
           ENTREGA_IE, 
           INATIVO, 
           ISENTO_IPI, 
           ISENTO_ICMS, 
           ACEITA_DIAS_FIXO, 
           COD_CLIFOR, 
           INDICADOR_FISCAL_TERCEIRO, 
           COBRANCA_CGC, 
           PAIS, 
           COBRANCA_PAIS, 
           ENTREGA_PAIS, 
           CIDADE 
    FROM   #CADASTRO_CLI_FOR; 

    INSERT CLIENTES_ATACADO 
           (CLIENTE_ATACADO, 
            COD_CLIENTE, 
            CONDICAO_PGTO, 
            REGIAO, 
            FILIAL, 
            PONTUALIDADE, 
            TRANSPORTADORA, 
            CONCEITO, 
            TIPO, 
            TIPO_BLOQUEIO, 
            CGC_CPF, 
            CLIFOR, 
            FRETE_A_PAGAR, 
            SEM_CREDITO, 
            ACEITA_JUNTAR_PED, 
            INATIVO, 
            EXPEDICAO_COMPLETO_PEDIDO, 
            EXPEDICAO_COMPLETO_PACK, 
            EXPEDICAO_COMPLETO_TAMANHOS, 
            EXPEDICAO_COMPLETO_COR, 
            EXPEDICAO_COMPLETO_COORDENADO, 
            EXPEDICAO_COMPLETO_CARTELA, 
            EXPEDICAO_COMPLETO_FAIXAS, 
            EXPEDICAO_ADEQUACAO_TAMANHO, 
            EXPEDICAO_ADEQUACAO_COR, 
            MULTI_DESCONTO_ACUMULAR, 
            INDICADOR_VENDA, 
            CTB_CONTA_CONTABIL) 
    SELECT CLIENTE_ATACADO, 
           COD_CLIENTE, 
           CONDICAO_PGTO, 
           REGIAO, 
           FILIAL, 
           PONTUALIDADE, 
           TRANSPORTADORA, 
           CONCEITO, 
           TIPO, 
           TIPO_BLOQUEIO, 
           CGC_CPF, 
           CLIFOR, 
           FRETE_A_PAGAR, 
           SEM_CREDITO, 
           ACEITA_JUNTAR_PED, 
           INATIVO, 
           EXPEDICAO_COMPLETO_PEDIDO, 
           EXPEDICAO_COMPLETO_PACK, 
           EXPEDICAO_COMPLETO_TAMANHOS, 
           EXPEDICAO_COMPLETO_COR, 
           EXPEDICAO_COMPLETO_COORDENADO, 
           EXPEDICAO_COMPLETO_CARTELA, 
           EXPEDICAO_COMPLETO_FAIXAS, 
           EXPEDICAO_ADEQUACAO_TAMANHO, 
           EXPEDICAO_ADEQUACAO_COR, 
           MULTI_DESCONTO_ACUMULAR, 
           INDICADOR_VENDA, 
           CTB_CONTA_CONTABIL 
    FROM   #CLIENTES_ATACADO; 

    IF @@ERROR <> 0 
      BEGIN 
          WHILE @@TRANCOUNT > 0 
            ROLLBACK TRANSACTION INSERT_TABELAS_TEMP 
      END; 
    ELSE 
      BEGIN ; 
          COMMIT TRAN INSERT_TABELAS_TEMP; 
      END; 

    ------------------------------------------------------------------------------------------------------------------------------------  
    --VERIFICA TABELAS TEMPORARIAS PARA SEREM EXCLUIDAS APOS O USO  
    ------------------------------------------------------------------------------------------------------------------------------------  
    --1º #3#   
    IF (SELECT Object_id('TEMPDB..#CADASTRO_CLI_FOR')) IS NOT NULL 
      BEGIN ; 
          DROP TABLE #CADASTRO_CLI_FOR; 
      END; 

    ------------------------------------------------------------------------------------------------------------------------------------  
    --2º #3#  
    IF (SELECT Object_id('TEMPDB..#CLIENTES_ATACADO')) IS NOT NULL 
      BEGIN ; 
          DROP TABLE #CLIENTES_ATACADO; 
      END; 

    -------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
    RETURN; 

    ERROR: 

    CLOSE CUR_LANC 

    DEALLOCATE CUR_LANC 

    CLOSE CUR_LANC_PADRAO 

    DEALLOCATE CUR_LANC_PADRAO 

    WHILE @@TRANCOUNT > 0 
      ROLLBACK TRANSACTION; 

    IF @ERROR_NR = 30999 
      BEGIN 
          BEGIN TRAN TRAN_UPDATE_CTB_LANCAMENTO; 

          UPDATE CTB_LANCAMENTO 
          SET    GERADO_INTEGRACAO = 9 
          WHERE  EMPRESA = @NEMPRESA 
                 AND LANCAMENTO = @NLANCAMENTO; 

          IF @@ERROR <> 0 
            GOTO ERROR2; 

          COMMIT TRAN TRAN_UPDATE_CTB_LANCAMENTO; 

          GOTO FINALIZA; 

          ERROR2:; 

          WHILE @@TRANCOUNT > 0 
            ROLLBACK TRANSACTION; 
      END; 

    IF (SELECT Object_id('TEMPDB..#ENTRADAS_ITEM')) IS NOT NULL 
      DROP TABLE #ENTRADAS_ITEM; 

    IF (SELECT Object_id('TEMPDB..#FATURAMENTO_ITEM')) IS NOT NULL 
      DROP TABLE #FATURAMENTO_ITEM; 

    IF (SELECT Object_id('TEMPDB..#LOJA_NOTA_FISCAL_ITEM')) IS NOT NULL 
      DROP TABLE #LOJA_NOTA_FISCAL_ITEM; 

    IF (SELECT Object_id('TEMPDB..#LOJAS_TERCEIRO')) IS NOT NULL 
      DROP TABLE #LOJAS_TERCEIRO; 

    FINALIZA:; 

    IF @ERROR_NR <= 13000 
      SELECT @ERROR_NR = 32000; 

    IF @MESSAGE IS NOT NULL 
      --RAISERROR @ERROR_NR @MESSAGE  
      RAISERROR (@MESSAGE,16,1); 

    IF (SELECT Object_id('TEMPDB..#ENTRADAS_ITEM')) IS NOT NULL 
      DROP TABLE #ENTRADAS_ITEM; 

    IF (SELECT Object_id('TEMPDB..#FATURAMENTO_ITEM')) IS NOT NULL 
      DROP TABLE #FATURAMENTO_ITEM; 

    IF (SELECT Object_id('TEMPDB..#LOJA_NOTA_FISCAL_ITEM')) IS NOT NULL 
      DROP TABLE #LOJA_NOTA_FISCAL_ITEM; 

    IF (SELECT Object_id('TEMPDB..#LOJAS_TERCEIRO')) IS NOT NULL 
      DROP TABLE #LOJAS_TERCEIRO; 
GO


